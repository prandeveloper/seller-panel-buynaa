{"version":3,"sources":["views/apps/store/stores/StoresList.js","axiosConfig.js"],"names":["StoresList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","setColumnVisible","cellRendererFramework","params","className","src","data","product_img","alt","height","userImage","item_name","value","status","size","onClick","history","push","_id","selectedData","gridApi","getSelectedRows","runthisfunction","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","a","axiosConfig","get","then","response","console","log","id","error","this","sm","tag","length","right","placeholder","onChange","e","target","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component","instance","axios","create","baseURL"],"mappings":"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","file":"static/js/256.985e10f4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\r\n//import classnames from \"classnames\";\r\nimport { history } from \"../../../../history\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\n\r\nclass StoresList extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 150,\r\n        filter: true,\r\n        // checkboxSelection: true,\r\n        // headerCheckboxSelectionFilteredOnly: true,\r\n        // headerCheckboxSelection: true,\r\n      },\r\n      {\r\n        headerName: \"Id\",\r\n        field: \"product_img\",\r\n        filter: false,\r\n        width: 150,\r\n        setColumnVisible: false,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <img\r\n                className=\" rounded-circle  mr-3\"\r\n                src={params.data.product_img}\r\n                alt=\"user avatar\"\r\n                height=\"40\"\r\n                width=\"40\"\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Image\",\r\n        field: \"Image\",\r\n        filter: true,\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <img\r\n                className=\"rounded-circle\"\r\n                src={params.data.userImage}\r\n                alt=\"user\"\r\n                height=\"60\"\r\n                width=\"60\"\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Status Details\",\r\n        field: \"item_name\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.item_name}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Owner\",\r\n        field: \"item_name\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.item_name}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Status\",\r\n        field: \"status\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return params.value === \"Active\" ? (\r\n            <div className=\"badge badge-pill badge-success\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : params.value === \"Inactive\" ? (\r\n            <div className=\"badge badge-pill badge-warning\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : null;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Store Request Accepted\",\r\n        field: \"status\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return params.value === \"Active\" ? (\r\n            <div className=\"badge badge-pill badge-success\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : params.value === \"Inactive\" ? (\r\n            <div className=\"badge badge-pill badge-warning\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : null;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Request For Delete\",\r\n        field: \"status\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return params.value === \"Active\" ? (\r\n            <div className=\"badge badge-pill badge-success\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : params.value === \"Inactive\" ? (\r\n            <div className=\"badge badge-pill badge-warning\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : null;\r\n        },\r\n      },\r\n      // {\r\n      //   headerName: \"Product Code\",\r\n      //   field: \"code\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <span>{params.data.code}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Short Description\",\r\n      //   field: \"short_desc\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.short_desc}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Description\",\r\n      //   field: \"desc\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.desc}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"HSN Code\",\r\n      //   field: \"hsn_code\",\r\n      //   filter: true,\r\n      //   width: 180,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.hsn_code}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Brand\",\r\n      //   field: \"brand\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.brand?.name}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Product Category\",\r\n      //   field: \"productcategory?.name\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.productcategory?.name}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Product Sub-Category\",\r\n      //   field: \"productsubcategory\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.productsubcategory?.name}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Stock Quantity\",\r\n      //   field: \"stock_qty\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.stock_qty}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Size\",\r\n      //   field: \"size\",\r\n      //   filter: true,\r\n      //   width: 150,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.size}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Colour\",\r\n      //   field: \"colour\",\r\n      //   filter: true,\r\n      //   width: 180,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.colour}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Material\",\r\n      //   field: \"material\",\r\n      //   filter: true,\r\n      //   width: 180,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.material}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Barcode\",\r\n      //   field: \"barcode\",\r\n      //   filter: true,\r\n      //   width: 180,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.barcode}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n   \r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"transactions\",\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Eye\r\n                className=\"mr-50\"\r\n                size={20}\r\n                onClick={() =>\r\n                  history.push(`/app/store/stores/viewStores/${params.data._id}`)\r\n                }\r\n              />\r\n              <Edit\r\n                className=\"mr-50\"\r\n                size={20}\r\n                onClick={() => history.push(\"/app/store/stores/editStores\")}\r\n              />\r\n              <Trash2\r\n                size={20}\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  this.runthisfunction(params.data._id);\r\n                  this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await axiosConfig.get(\"/allproduct\").then((response) => {\r\n      const rowData = response.data.data;\r\n      console.log(rowData);\r\n      this.setState({ rowData });\r\n    });\r\n  }\r\n  async runthisfunction(id) {\r\n    console.log(id);\r\n    await axiosConfig.get(`/delproduct/${id}`).then(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      console.log(rowData),\r\n      (\r\n        <Row className=\"app-user-list\">\r\n          <Col sm=\"12\">\r\n            {/* <Card\r\n            className={classnames(\"card-action card-reload\", {\r\n              \"d-none\": this.state.isVisible === false,\r\n              \"card-collapsed\": this.state.status === \"Closed\",\r\n              closing: this.state.status === \"Closing...\",\r\n              opening: this.state.status === \"Opening...\",\r\n              refreshing: this.state.reload,\r\n            })}\r\n          >\r\n            <CardHeader>\r\n              <CardTitle>Filters</CardTitle>\r\n              <div className=\"actions\">\r\n                <ChevronDown\r\n                  className=\"collapse-icon mr-50\"\r\n                  size={15}\r\n                  onClick={this.toggleCollapse}\r\n                />\r\n                <RotateCw\r\n                  className=\"mr-50\"\r\n                  size={15}\r\n                  onClick={() => {\r\n                    this.refreshCard();\r\n                    this.gridApi.setFilterModel(null);\r\n                  }}\r\n                />\r\n                <X size={15} onClick={this.removeCard} />\r\n              </div>\r\n            </CardHeader>\r\n            <Collapse\r\n              isOpen={this.state.collapse}\r\n              onExited={this.onExited}\r\n              onEntered={this.onEntered}\r\n              onExiting={this.onExiting}\r\n              onEntering={this.onEntering}\r\n            >\r\n              <CardBody>\r\n                {this.state.reload ? (\r\n                  <Spinner color=\"primary\" className=\"reload-spinner\" />\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <Row>\r\n                  <Col lg=\"3\" md=\"6\" sm=\"12\">\r\n                    <FormGroup className=\"mb-0\">\r\n                      <Label for=\"role\">Role</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"role\"\r\n                        id=\"role\"\r\n                        value={this.state.role}\r\n                        onChange={(e) => {\r\n                          this.setState(\r\n                            {\r\n                              role: e.target.value,\r\n                            },\r\n                            () =>\r\n                              this.filterData(\r\n                                \"role\",\r\n                                this.state.role.toLowerCase()\r\n                              )\r\n                          );\r\n                        }}\r\n                      >\r\n                        <option value=\"All\">All</option>\r\n                        <option value=\"User\">User</option>\r\n                        <option value=\"Staff\">Staff</option>\r\n                        <option value=\"Admin\">Admin</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"3\" md=\"6\" sm=\"12\">\r\n                    <FormGroup className=\"mb-0\">\r\n                      <Label for=\"status\">Status</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"status\"\r\n                        id=\"status\"\r\n                        value={this.state.selectStatus}\r\n                        onChange={(e) => {\r\n                          this.setState(\r\n                            {\r\n                              selectStatus: e.target.value,\r\n                            },\r\n                            () =>\r\n                              this.filterData(\r\n                                \"status\",\r\n                                this.state.selectStatus.toLowerCase()\r\n                              )\r\n                          );\r\n                        }}\r\n                      >\r\n                        <option value=\"All\">All</option>\r\n                        <option value=\"Active\">Active</option>\r\n                        <option value=\"Blocked\">Blocked</option>\r\n                        <option value=\"Deactivated\">Deactivated</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"3\" md=\"6\" sm=\"12\">\r\n                    <FormGroup className=\"mb-0\">\r\n                      <Label for=\"verified\">Verified</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"verified\"\r\n                        id=\"verified\"\r\n                        value={this.state.verified}\r\n                        onChange={(e) => {\r\n                          this.setState(\r\n                            {\r\n                              verified: e.target.value,\r\n                            },\r\n                            () =>\r\n                              this.filterData(\r\n                                \"is_verified\",\r\n                                this.state.verified.toLowerCase()\r\n                              )\r\n                          );\r\n                        }}\r\n                      >\r\n                        <option value=\"All\">All</option>\r\n                        <option value=\"True\">True</option>\r\n                        <option value=\"False\">False</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"3\" md=\"6\" sm=\"12\">\r\n                    <FormGroup className=\"mb-0\">\r\n                      <Label for=\"department\">Department</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"department\"\r\n                        id=\"department\"\r\n                        value={this.state.department}\r\n                        onChange={(e) => {\r\n                          this.setState(\r\n                            {\r\n                              department: e.target.value,\r\n                            },\r\n                            () =>\r\n                              this.filterData(\r\n                                \"department\",\r\n                                this.state.department.toLowerCase()\r\n                              )\r\n                          );\r\n                        }}\r\n                      >\r\n                        <option value=\"All\">All</option>\r\n                        <option value=\"Sales\">Sales</option>\r\n                        <option value=\"Development\">Development</option>\r\n                        <option value=\"Management\">Management</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n              </CardBody>\r\n            </Collapse>\r\n          </Card> */}\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <Card>\r\n              <Row className=\"m-2\">\r\n                <Col>\r\n                  <h1 sm=\"6\" className=\"float-left\">\r\n                    Stores List\r\n                  </h1>\r\n                </Col>\r\n                <Col>\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() => history.push(\"/app/store/stores/addStores\")}\r\n                  >\r\n                    Add Stores\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <CardBody>\r\n                {this.state.rowData === null ? null : (\r\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                      <div className=\"mb-1\">\r\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                          <DropdownToggle tag=\"div\">\r\n                            {this.gridApi\r\n                              ? this.state.currenPageSize\r\n                              : \"\" * this.state.getPageSize -\r\n                                (this.state.getPageSize - 1)}{\" \"}\r\n                            -{\" \"}\r\n                            {this.state.rowData.length -\r\n                              this.state.currenPageSize *\r\n                                this.state.getPageSize >\r\n                            0\r\n                              ? this.state.currenPageSize *\r\n                                this.state.getPageSize\r\n                              : this.state.rowData.length}{\" \"}\r\n                            of {this.state.rowData.length}\r\n                            <ChevronDown className=\"ml-50\" size={15} />\r\n                          </DropdownToggle>\r\n                          <DropdownMenu right>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(20)}\r\n                            >\r\n                              20\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(50)}\r\n                            >\r\n                              50\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(100)}\r\n                            >\r\n                              100\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(134)}\r\n                            >\r\n                              134\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </div>\r\n                      <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                        <div className=\"table-input mr-1\">\r\n                          <Input\r\n                            placeholder=\"search...\"\r\n                            onChange={(e) =>\r\n                              this.updateSearchQuery(e.target.value)\r\n                            }\r\n                            value={this.state.value}\r\n                          />\r\n                        </div>\r\n                        <div className=\"export-btn\">\r\n                          <Button.Ripple\r\n                            color=\"primary\"\r\n                            onClick={() => this.gridApi.exportDataAsCsv()}\r\n                          >\r\n                            Export as CSV\r\n                          </Button.Ripple>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <ContextLayout.Consumer>\r\n                      {(context) => (\r\n                        <AgGridReact\r\n                          gridOptions={{}}\r\n                          rowSelection=\"multiple\"\r\n                          defaultColDef={defaultColDef}\r\n                          columnDefs={columnDefs}\r\n                          rowData={rowData}\r\n                          onGridReady={this.onGridReady}\r\n                          colResizeDefault={\"shift\"}\r\n                          animateRows={true}\r\n                          floatingFilter={false}\r\n                          pagination={true}\r\n                          paginationPageSize={this.state.paginationPageSize}\r\n                          pivotPanelShow=\"always\"\r\n                          enableRtl={context.state.direction === \"rtl\"}\r\n                        />\r\n                      )}\r\n                    </ContextLayout.Consumer>\r\n                  </div>\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    );\r\n  }\r\n}\r\nexport default StoresList;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://35.154.86.59/api/admin\",\r\n  \r\n});\r\n\r\nexport default instance;\r\n"],"sourceRoot":""}