{"version":3,"sources":["views/charts/chart-js/lineChart.js","views/charts/chart-js/BarChart.js","views/charts/chart-js/HorizontalBarChart.js","views/charts/chart-js/PieChart.js","views/charts/chart-js/DoughnutChart.js","views/charts/chart-js/RadarChart.js","views/charts/chart-js/PolarChart.js","views/charts/chart-js/BubbleChart.js","views/charts/chart-js/ScatterChart.js","views/charts/chart-js/ChartJS.js"],"names":["data","labels","datasets","label","borderColor","options","maintainAspectRatio","responsive","legend","position","scales","xAxes","display","gridLines","color","scaleLabel","yAxes","title","text","LineCharts","Card","CardHeader","CardTitle","CardBody","height","React","Component","backgroundColor","elements","rectangle","borderWidth","borderSkipped","responsiveAnimationDuration","ticks","stepSize","BarCharts","HorizontalBarCharts","PieCharts","DoughnutCharts","fill","pointBorderColor","pointBackgroundColor","tooltips","callbacks","tooltipItems","datasetIndex","yLabel","scale","reverse","beginAtZero","RadarChart","animation","animateRotate","PolarChart","duration","x","y","r","labelString","BubbleChart","pointBorderWidth","pointHoverBorderWidth","pointRadius","drawTicks","ScatterChart","ChartJS","Fragment","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","sm","href","target","rel","lg","BarChart","HorizontalBarChart","PieChart","DoughnutChart"],"mappings":"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","file":"static/js/280.21fec5e7.chunk.js","sourcesContent":["import React from \"react\"\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\nimport { Line } from \"react-chartjs-2\"\n\nconst $primary = \"#7367F0\",\n  $success = \"#28C76F\",\n  $danger = \"#EA5455\",\n  $warning = \"#FF9F43\",\n  $label_color = \"#1E1E1E\",\n  grid_line_color = \"#dae1e7\"\n\nconst data = {\n  labels: [1500, 1600, 1700, 1750, 1800, 1850, 1900, 1950, 1999, 2050],\n  datasets: [\n    {\n      label: \"Africa\",\n      data: [86, 114, 106, 106, 107, 111, 133, 221, 783, 2478],\n      borderColor: $primary\n    },\n    {\n      data: [282, 350, 411, 502, 635, 809, 947, 1402, 3700, 5267],\n      label: \"Asia\",\n      borderColor: $success\n    },\n    {\n      data: [168, 170, 178, 190, 203, 276, 408, 547, 675, 734],\n      label: \"Europe\",\n      borderColor: $danger\n    },\n    {\n      data: [40, 20, 10, 16, 24, 38, 74, 167, 508, 784],\n      label: \"Latin America\",\n      borderColor: $warning\n    },\n    {\n      data: [6, 3, 2, 2, 7, 26, 82, 172, 312, 433],\n      label: \"North America\",\n      borderColor: $label_color\n    }\n  ]\n}\n\nconst options = {\n  maintainAspectRatio: false,\n  responsive: true,\n  legend: {\n    position: \"top\"\n  },\n\n  scales: {\n    xAxes: [\n      {\n        display: true,\n        gridLines: {\n          color: grid_line_color\n        },\n        scaleLabel: {\n          display: true\n        }\n      }\n    ],\n    yAxes: [\n      {\n        display: true,\n        gridLines: {\n          color: grid_line_color\n        },\n        scaleLabel: {\n          display: true\n        }\n      }\n    ]\n  },\n  title: {\n    display: true,\n    text: \"World population per region (in millions)\"\n  }\n}\n\nclass LineCharts extends React.Component {\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Line Chart</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Line data={data} options={options} height={300} />\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default LineCharts\n","import React from \"react\"\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\nimport { Bar } from \"react-chartjs-2\"\n\nconst $primary = \"#7367F0\",\n  $success = \"#28C76F\",\n  $danger = \"#EA5455\",\n  $warning = \"#FF9F43\",\n  $label_color = \"#1E1E1E\",\n  grid_line_color = \"#dae1e7\"\nconst themeColors = [$primary, $success, $danger, $warning, $label_color]\n\nconst data = {\n  labels: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\n  datasets: [\n    {\n      label: \"Population (millions)\",\n      data: [2478, 5267, 734, 784, 433],\n      backgroundColor: themeColors,\n      borderColor: \"transparent\"\n    }\n  ]\n}\n\nconst options = {\n  elements: {\n    rectangle: {\n      borderWidth: 2,\n      borderSkipped: \"left\"\n    }\n  },\n  responsive: true,\n  responsiveAnimationDuration: 500,\n\n  scales: {\n    xAxes: [\n      {\n        display: true,\n        gridLines: {\n          color: grid_line_color\n        },\n        scaleLabel: {\n          display: true\n        }\n      }\n    ],\n    yAxes: [\n      {\n        display: true,\n        gridLines: {\n          color: grid_line_color\n        },\n        scaleLabel: {\n          display: true\n        },\n        ticks: {\n          stepSize: 1000\n        }\n      }\n    ]\n  },\n  maintainAspectRatio: false,\n  title: {\n    display: true,\n    text: \"Predicted world population (millions) in 2050\"\n  },\n  legend: { display: false }\n}\n\nclass BarCharts extends React.Component {\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Bar Chart</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Bar data={data} options={options} height={300} />\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default BarCharts\n","import React from \"react\"\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\nimport { HorizontalBar } from \"react-chartjs-2\"\n\nconst $primary = \"#7367F0\",\n  $success = \"#28C76F\",\n  $danger = \"#EA5455\",\n  $warning = \"#FF9F43\",\n  $label_color = \"#1E1E1E\",\n  grid_line_color = \"#dae1e7\"\nconst themeColors = [$primary, $success, $danger, $warning, $label_color]\n\nconst data = {\n  labels: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\n  datasets: [\n    {\n      label: \"Population (millions)\",\n      data: [2478, 5267, 734, 784, 433],\n      backgroundColor: themeColors,\n      borderColor: \"transparent\"\n    }\n  ]\n}\n\nconst options = {\n  elements: {\n    rectangle: {\n      borderWidth: 2,\n      borderSkipped: \"right\"\n    }\n  },\n  responsive: true,\n  responsiveAnimationDuration: 500,\n  maintainAspectRatio: false,\n  scales: {\n    xAxes: [\n      {\n        display: true,\n        gridLines: {\n          color: grid_line_color\n        },\n        scaleLabel: {\n          display: true\n        }\n      }\n    ],\n    yAxes: [\n      {\n        display: true,\n        gridLines: {\n          color: grid_line_color\n        },\n        scaleLabel: {\n          display: true\n        }\n      }\n    ]\n  },\n  title: {\n    display: true,\n    text: \"Predicted world population (millions) in 2050\"\n  },\n  legend: {\n    display: false\n  }\n}\n\nclass HorizontalBarCharts extends React.Component {\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Horizontal Bar Chart</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <HorizontalBar data={data} options={options} height={300} />\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default HorizontalBarCharts\n","import React from \"react\"\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\nimport { Pie } from \"react-chartjs-2\"\n\nconst $primary = \"#7367F0\",\n  $success = \"#28C76F\",\n  $danger = \"#EA5455\",\n  $warning = \"#FF9F43\",\n  $label_color = \"#1E1E1E\"\nconst themeColors = [$primary, $success, $danger, $warning, $label_color]\n\nconst data = {\n  labels: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\n  datasets: [\n    {\n      label: \"My First dataset\",\n      data: [2478, 5267, 734, 784, 433],\n      backgroundColor: themeColors\n    }\n  ]\n}\n\nconst options = {\n  responsive: true,\n  responsiveAnimationDuration: 500,\n  maintainAspectRatio: false,\n  title: {\n    display: true,\n    text: \"Predicted world population (millions) in 2050\"\n  }\n}\n\nclass PieCharts extends React.Component {\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Pie Chart</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Pie data={data} options={options} height={300} />\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default PieCharts\n","import React from \"react\"\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\nimport { Doughnut } from \"react-chartjs-2\"\n\nconst $primary = \"#7367F0\",\n  $success = \"#28C76F\",\n  $danger = \"#EA5455\",\n  $warning = \"#FF9F43\",\n  $label_color = \"#1E1E1E\"\nconst themeColors = [$primary, $success, $danger, $warning, $label_color]\n\nconst data = {\n  labels: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\n  datasets: [\n    {\n      label: \"My First dataset\",\n      data: [2478, 5267, 734, 784, 433],\n      backgroundColor: themeColors\n    }\n  ]\n}\n\nconst options = {\n  maintainAspectRatio: false,\n  responsive: true,\n  responsiveAnimationDuration: 500,\n  title: {\n    display: true,\n    text: \"Predicted world population (millions) in 2050\"\n  }\n}\n\nclass DoughnutCharts extends React.Component {\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Doughnut Chart</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Doughnut data={data} options={options} height={300} />\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default DoughnutCharts\n","import React from \"react\"\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\nimport { Radar } from \"react-chartjs-2\"\n\nconst data = {\n  labels: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\n  datasets: [\n    {\n      label: \"1950\",\n      fill: true,\n      backgroundColor: \"rgba(179,181,198,0.2)\",\n      borderColor: \"rgba(179,181,198,1)\",\n      pointBorderColor: \"#fff\",\n      pointBackgroundColor: \"rgba(179,181,198,1)\",\n      data: [8.77, 55.61, 21.69, 6.62, 6.82]\n    },\n    {\n      label: \"2050\",\n      fill: true,\n      backgroundColor: \"rgba(255,99,132,0.2)\",\n      borderColor: \"rgba(255,99,132,1)\",\n      pointBorderColor: \"#fff\",\n      pointBackgroundColor: \"rgba(255,99,132,1)\",\n      data: [25.48, 54.16, 7.61, 8.06, 4.45]\n    }\n  ]\n}\n\nconst options = {\n  responsive: true,\n  responsiveAnimationDuration: 500,\n  maintainAspectRatio: false,\n  tooltips: {\n    callbacks: {\n      label: function(tooltipItems, data) {\n        return (\n          data.datasets[tooltipItems.datasetIndex].label +\n          \": \" +\n          tooltipItems.yLabel\n        )\n      }\n    }\n  },\n  scale: {\n    reverse: false,\n    ticks: {\n      beginAtZero: true,\n      stepSize: 10\n    }\n  },\n  title: {\n    display: true,\n    text: \"Distribution in % of world population\"\n  }\n}\n\nclass RadarChart extends React.Component {\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Radar Chart</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Radar data={data} options={options} height={300} />\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default RadarChart\n","import React from \"react\"\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\nimport { Polar } from \"react-chartjs-2\"\n\nconst $primary = \"#7367F0\",\n  $success = \"#28C76F\",\n  $danger = \"#EA5455\",\n  $warning = \"#FF9F43\",\n  $label_color = \"#1E1E1E\"\nconst themeColors = [$primary, $success, $danger, $warning, $label_color]\n\nconst data = {\n  labels: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\n  datasets: [\n    {\n      label: \"Population (millions)\",\n      backgroundColor: themeColors,\n      data: [2478, 5267, 734, 784, 433]\n    }\n  ]\n}\n\nconst options = {\n  responsive: true,\n  responsiveAnimationDuration: 500,\n  maintainAspectRatio: false,\n  title: {\n    display: true,\n    text: \"Predicted world population (millions) in 2050\"\n  },\n  legend: {\n    position: \"top\"\n  },\n  scale: {\n    ticks: {\n      beginAtZero: true,\n      stepSize: 2000\n    },\n    reverse: false\n  },\n  animation: {\n    animateRotate: false\n  }\n}\n\nclass PolarChart extends React.Component {\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Polar Chart</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Polar data={data} options={options} height={300} />\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default PolarChart\n","import React from \"react\"\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\nimport { Bubble } from \"react-chartjs-2\"\n\nconst data = {\n  animation: {\n    duration: 10000\n  },\n  datasets: [\n    {\n      label: [\"China\"],\n      backgroundColor: \"rgba(255,221,50,0.2)\",\n      borderColor: \"rgba(255,221,50,1)\",\n      data: [\n        {\n          x: 21269017,\n          y: 5.245,\n          r: 15\n        }\n      ]\n    },\n    {\n      label: [\"Denmark\"],\n      backgroundColor: \"rgba(60,186,159,0.2)\",\n      borderColor: \"rgba(60,186,159,1)\",\n      data: [\n        {\n          x: 258702,\n          y: 7.526,\n          r: 10\n        }\n      ]\n    },\n    {\n      label: [\"Germany\"],\n      backgroundColor: \"rgba(0,0,0,0.2)\",\n      borderColor: \"#000\",\n      data: [\n        {\n          x: 3979083,\n          y: 6.994,\n          r: 15\n        }\n      ]\n    },\n    {\n      label: [\"Japan\"],\n      backgroundColor: \"rgba(193,46,12,0.2)\",\n      borderColor: \"rgba(193,46,12,1)\",\n      data: [\n        {\n          x: 4931877,\n          y: 5.921,\n          r: 15\n        }\n      ]\n    }\n  ]\n}\n\nconst options = {\n  responsive: true,\n  maintainAspectRatio: false,\n  title: {\n    display: true,\n    text: \"Predicted world population (millions) in 2050\"\n  },\n  scales: {\n    xAxes: [\n      {\n        display: true,\n        gridLines: {\n          color: \"#dae1e7\"\n        },\n        scaleLabel: {\n          display: true,\n          labelString: \"GDP (PPP)\"\n        }\n      }\n    ],\n    yAxes: [\n      {\n        display: true,\n        gridLines: {\n          color: \"#dae1e7\"\n        },\n        scaleLabel: {\n          display: true,\n          labelString: \"Happiness\"\n        },\n        ticks: {\n          stepSize: 0.5\n        }\n      }\n    ]\n  }\n}\n\nclass BubbleChart extends React.Component {\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Bubble Chart</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Bubble data={data} options={options} height={300} />\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default BubbleChart\n","import React from \"react\"\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\nimport { Scatter } from \"react-chartjs-2\"\n\nconst scatter_grid_color = \"#f3f3f3\",\n  $scatter_point_light = \"#D1D4DB\",\n  $scatter_point_dark = \"#5175E0\"\n\nconst data = {\n  datasets: [\n    {\n      label: \"My First dataset\",\n      data: [\n        {\n          x: 65,\n          y: 28\n        },\n        {\n          x: 59,\n          y: 48\n        },\n        {\n          x: 80,\n          y: 40\n        },\n        {\n          x: 81,\n          y: 19\n        },\n        {\n          x: 56,\n          y: 86\n        },\n        {\n          x: 55,\n          y: 27\n        },\n        {\n          x: 40,\n          y: 89\n        }\n      ],\n      backgroundColor: \"rgba(209,212,219,.3)\",\n      borderColor: \"transparent\",\n      pointBorderColor: $scatter_point_light,\n      pointBackgroundColor: \"#fff\",\n      pointBorderWidth: 2,\n      pointHoverBorderWidth: 2,\n      pointRadius: 4\n    },\n    {\n      label: \"My Second dataset\",\n      data: [\n        {\n          x: 45,\n          y: 17\n        },\n        {\n          x: 25,\n          y: 62\n        },\n        {\n          x: 16,\n          y: 78\n        },\n        {\n          x: 36,\n          y: 88\n        },\n        {\n          x: 67,\n          y: 26\n        },\n        {\n          x: 18,\n          y: 48\n        },\n        {\n          x: 76,\n          y: 73\n        }\n      ],\n      backgroundColor: \"rgba(81,117,224,.6)\",\n      borderColor: \"transparent\",\n      pointBorderColor: $scatter_point_dark,\n      pointBackgroundColor: \"#fff\",\n      pointBorderWidth: 2,\n      pointHoverBorderWidth: 2,\n      pointRadius: 4\n    }\n  ]\n}\n\nconst options = {\n  responsive: true,\n  scales: {\n    xAxes: [\n      {\n        position: \"top\",\n        gridLines: {\n          color: scatter_grid_color,\n          drawTicks: false\n        },\n        scaleLabel: {\n          display: true,\n          labelString: \"x axis\"\n        }\n      }\n    ],\n    yAxes: [\n      {\n        position: \"right\",\n        gridLines: {\n          color: scatter_grid_color,\n          drawTicks: false\n        },\n        scaleLabel: {\n          display: true,\n          labelString: \"y axis\"\n        }\n      }\n    ]\n  },\n  maintainAspectRatio: false\n}\n\nclass ScatterChart extends React.Component {\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Scatter Chart</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Scatter data={data} options={options} height={300} />\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default ScatterChart\n","import React from \"react\"\nimport { Row, Col } from \"reactstrap\"\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\"\nimport LineChart from \"./lineChart\"\nimport BarChart from \"./BarChart\"\nimport HorizontalBarChart from \"./HorizontalBarChart\"\nimport PieChart from \"./PieChart\"\nimport DoughnutChart from \"./DoughnutChart\"\nimport RadarChart from \"./RadarChart\"\nimport PolarChart from \"./PolarChart\"\nimport BubbleChart from \"./BubbleChart\"\nimport ScatterChart from \"./ScatterChart\"\n\nclass ChartJS extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Breadcrumbs\n          breadCrumbTitle=\"React ChartJS 2\"\n          breadCrumbParent=\"Charts\"\n          breadCrumbActive=\"ChartJS\"\n        />\n        <Row>\n          <Col sm=\"12\">\n            <p>\n              React wrapper for Chart.js. Click{\" \"}\n              <a\n                href=\"https://github.com/jerairrest/react-chartjs-2\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                here\n              </a>{\" \"}\n              for github repo.\n            </p>\n          </Col>\n          <Col lg=\"6\" sm=\"12\">\n            <LineChart />\n          </Col>\n          <Col lg=\"6\" sm=\"12\">\n            <BarChart />\n          </Col>\n          <Col lg=\"6\" sm=\"12\">\n            <HorizontalBarChart />\n          </Col>\n          <Col lg=\"6\" sm=\"12\">\n            <PieChart />\n          </Col>\n          <Col lg=\"6\" sm=\"12\">\n            <DoughnutChart />\n          </Col>\n          <Col lg=\"6\" sm=\"12\">\n            <RadarChart />\n          </Col>\n          <Col lg=\"6\" sm=\"12\">\n            <PolarChart />\n          </Col>\n          <Col lg=\"6\" sm=\"12\">\n            <BubbleChart />\n          </Col>\n          <Col sm=\"12\">\n            <ScatterChart />\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default ChartJS\n"],"sourceRoot":""}