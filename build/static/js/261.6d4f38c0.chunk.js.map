{"version":3,"sources":["views/apps/stockControl/AddStockAdjustment.js","axiosConfig.js"],"names":["AddStockAdjustment","props","changeHandler1","e","setState","status","target","value","changeHandler","name","submitHandler","preventDefault","axiosConfig","post","state","then","response","console","log","swal","history","push","catch","error","reference_no","adjustment_date","warehouse","reason","adjusted_qty","adjusted_value","a","get","warehouseL","data","this","addTextbox","i","splice","className","col-sm-6","onClick","onSubmit","lg","md","type","onChange","map","warehouseList","key","_id","warehousename","Ripple","color","Component","instance","axios","create","baseURL"],"mappings":"qaAiBaA,EAAb,kDACE,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAkDNC,eAAiB,SAAAC,GACf,EAAKC,SAAS,CAAEC,OAAQF,EAAEG,OAAOC,SApDlB,EAsDjBC,cAAgB,SAAAL,GACd,EAAKC,SAAL,eAAiBD,EAAEG,OAAOG,KAAON,EAAEG,OAAOC,SAvD3B,EAyDjBG,cAAgB,SAAAP,GACdA,EAAEQ,iBAEFC,IACGC,KAAK,sBAAuB,EAAKC,OACjCC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZG,IAAK,WAAY,yBAA0B,WAC3C,EAAKlB,MAAMmB,QAAQC,KACjB,wCAGHC,OAAM,SAAAC,GACLJ,IAAK,SAAU,iBAAkB,SACjCF,QAAQC,IAAIK,OApEhB,EAAKT,MAAQ,CAEXU,aAAc,GACdC,gBAAiB,GACjBC,UAAW,GACXC,OAAQ,GACRC,aAAc,GACdC,eAAgB,IAVH,EADrB,4FAgBE,iCAAAC,EAAA,sDAEElB,IACGmB,IAAI,iBACJhB,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZ,EAAKZ,SAAS,CAAE4B,WAAYhB,EAASiB,KAAKA,UAE3CX,OAAM,SAAAC,GACLN,QAAQC,IAAIK,MATlB,2CAhBF,+EA6BE,WACEW,KAAK9B,SAAS,CACZ+B,WAAW,GAAD,mBAAMD,KAAKpB,MAAMqB,YAAjB,CAA6B,SA/B7C,wBAkCE,SAAWC,GACTF,KAAKpB,MAAMqB,WAAWE,OAAOD,EAAG,GAChCF,KAAK9B,SAAS,MApClB,oBA2EE,WAAU,IAAD,EACP,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKkC,UAAU,OACb,kBAAC,IAAD,KACE,wBAAIC,YAAA,EAASD,UAAU,cAAvB,yBAIF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEA,UAAU,8BACVE,QAAS,kBACPpB,IAAQC,KAAK,4CAHjB,UAUJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMiB,UAAU,MAAMG,SAAUP,KAAKxB,eACnC,kBAAC,IAAD,CAAK4B,UAAU,QACb,kBAAC,IAAD,CAAKI,GAAG,IAAIC,GAAG,KACb,kBAAC,IAAD,yBACA,kBAAC,IAAD,CACEC,KAAK,OACLnC,KAAK,eACLF,MAAO2B,KAAKpB,MAAMU,aAClBqB,SAAUX,KAAK1B,iBAGnB,kBAAC,IAAD,CAAKkC,GAAG,IAAIC,GAAG,IAAIL,UAAU,QAC3B,kBAAC,IAAD,8BACA,kBAAC,IAAD,CACEM,KAAK,OACLnC,KAAK,kBACLF,MAAO2B,KAAKpB,MAAMW,gBAClBoB,SAAUX,KAAK1B,iBAGnB,kBAAC,IAAD,CAAKkC,GAAG,IAAIC,GAAG,IAAIL,UAAU,QAC3B,kBAAC,IAAD,kBACA,kBAAC,IAAD,CACEM,KAAK,SACLnC,KAAK,YACLF,MAAO2B,KAAKpB,MAAMY,UAClBmB,SAAUX,KAAK1B,eAJjB,cAKG0B,KAAKpB,MAAMkB,kBALd,aAKG,EAAuBc,KAAI,SAAAC,GAAa,OACzC,4BAAQC,IAAKD,EAAcE,IAAK1C,MAAOwC,EAAcE,KAClDF,EAAcG,oBAKrB,kBAAC,IAAD,CAAKR,GAAG,IAAIC,GAAG,IAAIL,UAAU,QAC3B,kBAAC,IAAD,eACA,kBAAC,IAAD,CACEM,KAAK,SACLnC,KAAK,SACLF,MAAO2B,KAAKpB,MAAMa,OAClBkB,SAAUX,KAAK1B,iBAInB,kBAAC,IAAD,CAAKkC,GAAG,IAAIC,GAAG,IAAIL,UAAU,QAC3B,kBAAC,IAAD,qBACA,kBAAC,IAAD,CACEM,KAAK,SACLnC,KAAK,eACLF,MAAO2B,KAAKpB,MAAMc,aAClBiB,SAAUX,KAAK1B,iBAInB,kBAAC,IAAD,CAAKkC,GAAG,IAAIC,GAAG,IAAIL,UAAU,QAC3B,kBAAC,IAAD,uBACA,kBAAC,IAAD,CACEM,KAAK,SACLnC,KAAK,iBACLF,MAAO2B,KAAKpB,MAAMe,eAClBgB,SAAUX,KAAK1B,kBAiGrB,kBAAC,IAAD,KACE,kBAAC,IAAO2C,OAAR,CACEC,MAAM,UACNR,KAAK,SACLN,UAAU,aAHZ,gBA/PhB,GAAwCe,aA8QzBrD,a,iCC/Rf,YAEMsD,EAFN,OAEiBC,EAAMC,OAAO,CAC5BC,QAAS,kCAIIH","file":"static/js/261.6d4f38c0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Card,\n  CardBody,\n  Col,\n  Form,\n  Row,\n  Input,\n  CustomInput,\n  Label,\n  Button,\n  FormGroup,\n} from \"reactstrap\";\nimport { history } from \"../../../history\";\nimport axiosConfig from \"../../../axiosConfig\";\nimport swal from \"sweetalert\";\n\nexport class AddStockAdjustment extends Component {\n  constructor(props) {\n    super(props);\n    {\n      this.state = {\n        // addTextbox: [{}],\n        reference_no:\t\"\",\n        adjustment_date: \"\",\n        warehouse:\t\"\",\n        reason:\t\"\",\n        adjusted_qty:\t\"\",\n        adjusted_value:\t\"\",\n\n      };\n    }\n  }\n  async componentDidMount() {\n    //Warehouse List\n    axiosConfig\n      .get(\"/getwarehouse\")\n      .then(response => {\n        console.log(response);\n        this.setState({ warehouseL: response.data.data });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  addControls() {\n    this.setState({\n      addTextbox: [...this.state.addTextbox, {}],\n    });\n  }\n  delControl(i) {\n    this.state.addTextbox.splice(i, 1);\n    this.setState({});\n  }\n\n  //   async componentDidMount() {\n  //     //Product Category\n  //     axiosConfig\n  //       .get(\"/getproduct\")\n  //       .then(response => {\n  //         console.log(response);\n  //         this.setState({ productS: response.data.data });\n  //       })\n  //       .catch(error => {\n  //         console.log(error);\n  //       });\n  //   }\n\n    changeHandler1 = e => {\n      this.setState({ status: e.target.value });\n    };\n    changeHandler = e => {\n      this.setState({ [e.target.name]: e.target.value });\n    };\n    submitHandler = e => {\n      e.preventDefault();\n\n      axiosConfig\n        .post(\"/addstockadjustment\", this.state)\n        .then(response => {\n          console.log(response);\n          swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\n          this.props.history.push(\n            \"/app/stockControl/stockAdjustment\"\n          );\n        })\n        .catch(error => {\n          swal(\"Error!\", \"Error Received\", \"error\");\n          console.log(error);\n        });\n    };\n  render() {\n    return (\n      <div>\n        <Card>\n          <Row className=\"m-2\">\n            <Col>\n              <h1 col-sm-6 className=\"float-left\">\n                Add Stock Adjustment\n              </h1>\n            </Col>\n            <Col>\n              <Button\n                className=\" btn btn-danger float-right\"\n                onClick={() =>\n                  history.push(\"/app/stockControl/stockTransferRequest\")\n                }\n              >\n                Back\n              </Button>\n            </Col>\n          </Row>\n          <CardBody>\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\n              <Row className=\"mb-2\">\n                <Col lg=\"6\" md=\"6\">\n                  <Label>Referance Number</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"reference_no\"\n                    value={this.state.reference_no}\n                    onChange={this.changeHandler}\n                  />\n                </Col>\n                <Col lg=\"6\" md=\"6\" className=\"mb-1\">\n                  <Label>Stock Adjustment Date</Label>\n                  <Input\n                    type=\"date\"\n                    name=\"adjustment_date\"\n                    value={this.state.adjustment_date}\n                    onChange={this.changeHandler}\n                  />\n                </Col>\n                <Col lg=\"6\" md=\"6\" className=\"mb-1\">\n                  <Label>Warehouse</Label>\n                  <CustomInput\n                    type=\"select\"\n                    name=\"warehouse\"\n                    value={this.state.warehouse}\n                    onChange={this.changeHandler}\n                  > {this.state.warehouseL?.map(warehouseList => (\n                    <option key={warehouseList._id} value={warehouseList._id}>\n                      {warehouseList.warehousename}\n                    </option>\n                  ))}</CustomInput>\n                </Col>\n\n                <Col lg=\"6\" md=\"6\" className=\"mb-1\">\n                  <Label>Reason</Label>\n                  <CustomInput\n                    type=\"select\"\n                    name=\"reason\"\n                    value={this.state.reason}\n                    onChange={this.changeHandler}\n                  ></CustomInput>\n                </Col>\n\n                <Col lg=\"6\" md=\"6\" className=\"mb-1\">\n                  <Label>Adjusted qty</Label>\n                  <CustomInput\n                    type=\"select\"\n                    name=\"adjusted_qty\"\n                    value={this.state.adjusted_qty}\n                    onChange={this.changeHandler}\n                  ></CustomInput>\n                </Col>\n\n                <Col lg=\"6\" md=\"6\" className=\"mb-1\">\n                  <Label>Adjusted Value</Label>\n                  <CustomInput\n                    type=\"select\"\n                    name=\"adjusted_value\"\n                    value={this.state.adjusted_value}\n                    onChange={this.changeHandler}\n                  ></CustomInput>\n                </Col>\n              </Row>\n              {/* <Row className=\"mt-4\">\n                <div>\n                  {this.state.addTextbox.map(index => (\n                    <div>\n                      {index ? (\n                        <div id=\"btn\">\n                          <Row>\n                            <Col lg=\"12\" md=\"6\" sm=\"6\" className=\"mb-2\">\n                              <Row>\n                                <Col lg=\"6\" mf=\"6\">\n                                  <Button\n                                    color=\"primary\"\n                                    onClick={() => this.addControls()}\n                                  >\n                                    Add Product\n                                  </Button>\n                                </Col>\n                                <Col\n                                  lg=\"6\"\n                                  mf=\"6\"\n                                  className=\"d-flex justify-content-end\"\n                                >\n                                  <Button\n                                    color=\"danger\"\n                                    onClick={() => this.delControl(index)}\n                                  >\n                                    Remove\n                                  </Button>\n                                </Col>\n                              </Row>\n                            </Col>\n                          </Row>\n                        </div>\n                      ) : null}\n\n                      <Row>\n                        <Col md=\"4\" sm=\"12\">\n                          <FormGroup>\n                            <Label> Product Name </Label>\n                            <Input type=\"text\" placeholder=\" Product Name\" />\n                          </FormGroup>\n                        </Col>\n                        <Col md=\"4\" sm=\"12\">\n                          <FormGroup>\n                            <Label> SKU </Label>\n                            <Input type=\"text\" placeholder=\"SKU\" />\n                          </FormGroup>\n                        </Col>\n                        <Col md=\"4\" sm=\"12\">\n                          <FormGroup>\n                            <Label> HSN </Label>\n                            <Input type=\"text\" rows=\"5\" placeholder=\"HSN\" />\n                          </FormGroup>\n                        </Col>\n                        <Col md=\"4\" sm=\"12\">\n                          <FormGroup>\n                            <Label> Quantity </Label>\n                            <Input\n                              type=\"text\"\n                              rows=\"5\"\n                              placeholder=\"Quantity\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col md=\"4\" sm=\"12\">\n                          <FormGroup>\n                            <Label> Cost price </Label>\n                            <Input\n                              type=\"text\"\n                              rows=\"5\"\n                              placeholder=\"Cost price\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col md=\"4\" sm=\"12\">\n                          <FormGroup>\n                            <Label> GST </Label>\n                            <Input type=\"text\" rows=\"5\" placeholder=\"GST\" />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                  ))}\n                </div>\n              </Row>\n              <Row className=\"mt-4\">\n                <Col md=\"6\" sm=\"12\">\n                  <FormGroup>\n                    <Label> Note</Label>\n                    <Input type=\"textarea\" placeholder=\"\" />\n                  </FormGroup>\n                </Col>\n              </Row> */}\n              <Row>\n                <Button.Ripple\n                  color=\"primary\"\n                  type=\"submit\"\n                  className=\"mr-1 mb-1\"\n                >\n                  Add\n                </Button.Ripple>\n              </Row>\n            </Form>\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n}\nexport default AddStockAdjustment;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"http://35.154.86.59/api/admin\",\n  \n});\n\nexport default instance;\n"],"sourceRoot":""}