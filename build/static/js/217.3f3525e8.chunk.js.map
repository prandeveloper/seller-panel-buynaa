{"version":3,"sources":["views/apps/order/Status.js","axiosConfig.js"],"names":["Status","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","orderId","value","status","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","a","axiosConfig","get","then","response","this","sm","col-sm-6","tag","length","size","right","onClick","placeholder","onChange","e","target","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component","instance","axios","create","baseURL"],"mappings":"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","file":"static/js/217.3f3525e8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport {\r\n  // Edit,\r\n  // Trash2,\r\n  // Clipboard,\r\n  // Printer,\r\n  // Download,\r\n  ChevronDown,\r\n} from \"react-feather\";\r\n//import classnames from \"classnames\";\r\n//import { history } from \"../../../history\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../assets/scss/pages/users.scss\";\r\nclass Status extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 150,\r\n        filter: true,\r\n        // checkboxSelection: true,\r\n        // headerCheckboxSelectionFilteredOnly: true,\r\n        // headerCheckboxSelection: true,\r\n      },\r\n      // {\r\n      //   headerName: \"User Name\",\r\n      //   field: \"user.username\",\r\n      //   filter: true,\r\n      //   width: 250,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <span>{params.data?.user?.username}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n    //   {\r\n    //     headerName: \"User Name\",\r\n    //     field: \"name\",\r\n    //     filter: true,\r\n\r\n    //     resizable: true,\r\n    //     width: 180,\r\n    //     cellRendererFramework: (params) => {\r\n    //       return (\r\n    //         <div className=\"d-flex align-items-center cursor-pointer\">\r\n    //           <div className=\"ml-2\">\r\n    //             <span>{params.data.name}</span>\r\n    //           </div>\r\n    //         </div>\r\n    //       );\r\n    //     },\r\n    //   },\r\n\r\n    //   {\r\n    //     headerName: \"Product Ordered\",\r\n    //     field: \"product.item_name\",\r\n    //     filter: true,\r\n    //     width: 220,\r\n    //     cellRendererFramework: (params) => {\r\n    //       return (\r\n    //         <div className=\"d-flex align-items-center cursor-pointer\">\r\n    //           <span>{params.data?.product?.item_name}</span>\r\n    //         </div>\r\n    //       );\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     headerName: \"Product Code\",\r\n    //     field: \"product.code\",\r\n    //     filter: true,\r\n    //     width: 220,\r\n    //     cellRendererFramework: (params) => {\r\n    //       return (\r\n    //         <div className=\"d-flex align-items-center cursor-pointer\">\r\n    //           <span>{params.data?.product?.code}</span>\r\n    //         </div>\r\n    //       );\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     headerName: \"Order ID\",\r\n    //     field: \"orderId\",\r\n    //     filter: true,\r\n    //     width: 200,\r\n    //     cellRendererFramework: (params) => {\r\n    //       return (\r\n    //         <div className=\"d-flex align-items-center cursor-pointer\">\r\n    //           <span>{params.data.orderId}</span>\r\n    //         </div>\r\n    //       );\r\n    //     },\r\n    //   },\r\n      {\r\n        headerName: \"Status\",\r\n        field: \"status\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.orderId}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Status Code\",\r\n        field: \"status_code\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.orderId}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Default Status\",\r\n        field: \"def_status\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.orderId}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Visible On Storefront\",\r\n        field: \"status_code\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.orderId}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Display\",\r\n        field: \"display\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.orderId}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    //   {\r\n    //     headerName: \"Purchased Price\",\r\n    //     field: \"purchaseprice\",\r\n    //     filter: true,\r\n    //     width: 200,\r\n    //     cellRendererFramework: (params) => {\r\n    //       return (\r\n    //         <div className=\"d-flex align-items-center cursor-pointer\">\r\n    //           <span>{params.data.purchaseprice}</span>\r\n    //         </div>\r\n    //       );\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     headerName: \"Reached Location\",\r\n    //     field: \"reachedlocation\",\r\n    //     filter: true,\r\n    //     width: 200,\r\n    //     cellRendererFramework: (params) => {\r\n    //       return (\r\n    //         <div className=\"d-flex align-items-center cursor-pointer\">\r\n    //           <span>{params.data.reachedlocation}</span>\r\n    //         </div>\r\n    //       );\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     headerName: \"Shipping Date\",\r\n    //     field: \"shippingdate\",\r\n    //     filter: true,\r\n    //     width: 200,\r\n    //     cellRendererFramework: (params) => {\r\n    //       return (\r\n    //         <div className=\"d-flex align-items-center cursor-pointer\">\r\n    //           <span>{params.data.shippingdate}</span>\r\n    //         </div>\r\n    //       );\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     headerName: \"Delivered Date\",\r\n    //     field: \"deliverdondate\",\r\n    //     filter: true,\r\n    //     width: 200,\r\n    //     cellRendererFramework: (params) => {\r\n    //       return (\r\n    //         <div className=\"d-flex align-items-center cursor-pointer\">\r\n    //           <span>{params.data.deliverdondate}</span>\r\n    //         </div>\r\n    //       );\r\n    //     },\r\n    //   },\r\n      {\r\n        headerName: \"Status\",\r\n        field: \"status\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return params.value === \"Deliver\" ? (\r\n            <div className=\"badge badge-pill badge-success\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : params.value === \"Pending\" ? (\r\n            <div className=\"badge badge-pill badge-primary\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : params.value === \"Cancelled\" ? (\r\n            <div className=\"badge badge-pill badge-danger\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : params.value === \"Returned\" ? (\r\n            <div className=\"badge badge-pill badge-warning\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : null;\r\n        },\r\n      },\r\n      // {\r\n      //   headerName: \"Actions\",\r\n      //   field: \"transactions\",\r\n      //   width: 150,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"actions cursor-pointer\">\r\n      //         <Edit\r\n      //           className=\"mr-50\"\r\n      //           size={15}\r\n      //           onClick={() => history.push(\"/app/user/edit\")}\r\n      //         />\r\n      //         <Trash2\r\n      //           size={15}\r\n      //           onClick={() => {\r\n      //             let selectedData = this.gridApi.getSelectedRows();\r\n      //             this.gridApi.updateRowData({ remove: selectedData });\r\n      //           }}\r\n      //         />\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n    ],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await axiosConfig.get(\"/allorder\").then((response) => {\r\n      let rowData = response.data.data;\r\n\r\n      this.setState({ rowData });\r\n    });\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <Row className=\"app-user-list\">\r\n        <Col sm=\"12\">\r\n         \r\n        </Col>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <Row className=\"m-2\">\r\n              <Col>\r\n                <h1 col-sm-6 className=\"float-left\">\r\n                  Status List\r\n                </h1>\r\n              </Col>\r\n            </Row>\r\n            <CardBody>\r\n              {this.state.rowData === null ? null : (\r\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                    <div className=\"mb-1\">\r\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                        <DropdownToggle tag=\"div\">\r\n                          {this.gridApi\r\n                            ? this.state.currenPageSize\r\n                            : \"\" * this.state.getPageSize -\r\n                              (this.state.getPageSize - 1)}{\" \"}\r\n                          -{\" \"}\r\n                          {this.state.rowData.length -\r\n                            this.state.currenPageSize * this.state.getPageSize >\r\n                          0\r\n                            ? this.state.currenPageSize * this.state.getPageSize\r\n                            : this.state.rowData.length}{\" \"}\r\n                          of {this.state.rowData.length}\r\n                          <ChevronDown className=\"ml-50\" size={15} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(20)}\r\n                          >\r\n                            20\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(50)}\r\n                          >\r\n                            50\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(100)}\r\n                          >\r\n                            100\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(134)}\r\n                          >\r\n                            134\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"search...\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"export-btn\">\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          onClick={() => this.gridApi.exportDataAsCsv()}\r\n                        >\r\n                          Export as CSV\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <ContextLayout.Consumer>\r\n                    {(context) => (\r\n                      <AgGridReact\r\n                        gridOptions={{}}\r\n                        rowSelection=\"multiple\"\r\n                        defaultColDef={defaultColDef}\r\n                        columnDefs={columnDefs}\r\n                        rowData={rowData}\r\n                        onGridReady={this.onGridReady}\r\n                        colResizeDefault={\"shift\"}\r\n                        animateRows={true}\r\n                        floatingFilter={false}\r\n                        pagination={true}\r\n                        paginationPageSize={this.state.paginationPageSize}\r\n                        pivotPanelShow=\"always\"\r\n                        enableRtl={context.state.direction === \"rtl\"}\r\n                      />\r\n                    )}\r\n                  </ContextLayout.Consumer>\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default Status;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://35.154.86.59/api/admin\",\r\n  \r\n});\r\n\r\nexport default instance;\r\n"],"sourceRoot":""}