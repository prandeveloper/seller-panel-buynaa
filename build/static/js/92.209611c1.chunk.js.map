{"version":3,"sources":["components/@vuexy/chips/ChipComponent.js","components/@vuexy/chips/ChipSourceCode.js","components/@vuexy/chips/ChipsDefault.js","components/@vuexy/chips/ChipsColors.js","components/@vuexy/chips/ChipsAvatarColors.js","components/@vuexy/chips/ChipsIcons.js","components/@vuexy/chips/ChipsClosable.js","components/@vuexy/chips/ClosableIcons.js","components/@vuexy/chips/Chips.js","../node_modules/reactstrap/es/TabContext.js","../node_modules/reactstrap/es/Nav.js","../node_modules/reactstrap/es/TabContent.js","../node_modules/reactstrap/es/TabPane.js","../node_modules/prismjs/components/prism-jsx.min.js"],"names":["Chip","closeChip","e","target","closest","remove","className","this","props","color","avatarImg","avatarText","avatarIcon","avatarColor","src","alt","height","width","text","closable","onClick","closableIcon","React","Component","chipsDefault","chipsColors","chipsAvatarColors","chipsIcons","chipsClosable","chipsClosableIcons","ChipsDefault","state","activeTab","toggleTab","tab","setState","Fragment","Card","CardHeader","CardTitle","Nav","tabs","NavItem","NavLink","classnames","active","size","CardBody","TabContent","TabPane","tabId","chipImg","ChipsColors","ChipsAvatarColors","ChipsIcons","ChipsClosable","ChipsClosableIcons","Chips","Prism","highlightAll","BreadCrumb","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","sm","TabContext","createContext","propTypes","PropTypes","bool","pills","vertical","oneOfType","string","horizontal","justified","fill","navbar","card","tag","tagPropType","cssModule","object","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","getVerticalClass","createElement","_extends","defaultProps","any","_Component","_this","call","_inheritsLoose","getDerivedStateFromProps","nextProps","prevState","prototype","render","_this$props","omit","Object","keys","Provider","value","activeTabId","getClasses","Consumer","_ref","i","t","util","clone","languages","javascript","n","replace","RegExp","source","jsx","extend","pattern","inside","comment","insertBefore","spread","script","alias","rest","o","content","map","join","hooks","add","language","r","length","a","s","type","tagName","pop","push","openedBraces","g","splice","Token","tokens"],"mappings":"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","file":"static/js/92.209611c1.chunk.js","sourcesContent":["import React from \"react\"\nimport { X } from \"react-feather\"\nclass Chip extends React.Component {\n  closeChip = e => {\n    e.target.closest(\".chip\").remove()\n  }\n\n  render() {\n    return (\n      <div\n        className={`chip ${this.props.className} ${\n          this.props.color ? `chip-${this.props.color}` : null\n        }`}\n      >\n        <div className=\"chip-body\">\n          {(!this.props.avatarImg && this.props.avatarText) ||\n          (!this.props.avatarImg && this.props.avatarIcon) ? (\n            <div\n              className={`avatar ${\n                this.props.avatarColor ? `bg-${this.props.avatarColor}` : null\n              }`}\n            >\n              <div className=\"avatar-content\">\n                {this.props.avatarText ? this.props.avatarText : null}\n                {this.props.avatarIcon ? this.props.avatarIcon : null}\n              </div>\n            </div>\n          ) : this.props.avatarImg ? (\n            <div className=\"avatar\">\n              <img\n                src={this.props.avatarImg}\n                alt=\"chipImg\"\n                height=\"20\"\n                width=\"20\"\n              />\n            </div>\n          ) : null}\n          <div className=\"chip-text\">{this.props.text}</div>\n          {this.props.closable ? (\n            <div className=\"chip-closable\" onClick={e => this.closeChip(e)}>\n              {this.props.closableIcon ? this.props.closableIcon : <X />}\n            </div>\n          ) : null}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Chip\n","import React from \"react\"\n\nexport const chipsDefault = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport Chip from \"./ChipComponent\"\nimport { User } from \"react-feather\"\nclass chipDefault extends React.Component {\n\n  render() {\n    return(\n      <Chip className=\"mr-1\" text=\"Base Chip\" />\n      <Chip className=\"mr-1\" avatarText=\"RX\" text=\"Avatar Text\" />\n      <Chip className=\"mr-1\" avatarIcon={<User />} text=\"Avatar Icon\" />\n      <Chip className=\"mr-1\" avatarImg={chipImg} text=\"Avatar Image\" />\n      <Chip text=\"Chip Closable\" closable />\n    )}\n}\nexport default chipDefault\n`}\n    </code>\n  </pre>\n)\n\nexport const chipsColors = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport Chip from \"./ChipComponent\"\nimport { User } from \"react-feather\"\nclass chipColors extends React.Component {\n\n  render() {\n    return(\n      <Chip className=\"mr-1\" color=\"success\" avatarText=\"RX\" text=\"Avatar Text\" />\n      <Chip className=\"mr-1\" color=\"info\" avatarIcon={<User />} text=\"Avatar Icon\" />\n      <Chip className=\"mr-1\" color=\"warning\" avatarImg={chipImg} text=\"Avatar Image\" />\n      <Chip color=\"danger\" text=\"Chip Closable\" closable />\n    )}\n}\nexport default chipColors\n`}\n    </code>\n  </pre>\n)\n\nexport const chipsAvatarColors = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport Chip from \"./ChipComponent\"\nimport { User } from \"react-feather\"\n\nclass chipAvatarColors extends React.Component {\n\n  render() {\n    return(\n      <Chip className=\"mr-1\" avatarColor=\"primary\" avatarText=\"RX\" text=\"Avatar Text\" />\n      <Chip className=\"mr-1\" avatarColor=\"success\" avatarText=\"VS\" text=\"Avatar Text\" />\n      <Chip className=\"mr-1\" avatarColor=\"info\" avatarIcon={<User />} text=\"Avatar Text\" />\n      <Chip className=\"mr-1\" avatarColor=\"danger\" avatarIcon={<User />} text=\"Avatar Text\" />\n      <Chip avatarColor=\"warning\" avatarIcon={<User />} text=\"Avatar Text\" />\n    )}\n}\nexport default chipAvatarColors\n`}\n    </code>\n  </pre>\n)\n\nexport const chipsIcons = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport Chip from \"./ChipComponent\"\nimport { User, Mail, Share, Slash, Battery, Edit } from \"react-feather\"\n\nclass chipIcons extends React.Component {\n\n  render() {\n    return(\n      <Chip className=\"mr-1\" avatarIcon={<User />} text=\"User Icon\" />\n      <Chip className=\"mr-1\" avatarColor=\"primary\" avatarIcon={<Share />} text=\"Share Icon\" />\n      <Chip className=\"mr-1\" avatarColor=\"success\" avatarIcon={<Mail />} text=\"Mail Icon\" />\n      <Chip className=\"mr-1\" avatarColor=\"danger\" avatarIcon={<Slash />} text=\"Block Icon\" />\n      <Chip className=\"mr-1\" avatarColor=\"warning\" avatarIcon={<Battery />} text=\"Battery Icon\" />\n      <Chip className=\"mr-1\" avatarColor=\"info\" avatarIcon={<Edit />} text=\"Edit Icon\" />\n    )}\n}\nexport default chipIcons\n`}\n    </code>\n  </pre>\n)\n\nexport const chipsClosable = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport Chip from \"./ChipComponent\"\n\nclass chipClosable extends React.Component {\n\n  render() {\n    return(\n      <Chip className=\"mr-1\" text=\"Dribble\" closable />\n      <Chip className=\"mr-1\" text=\"Github\" closable />\n      <Chip className=\"mr-1\" text=\"Behance\" closable />\n      <Chip className=\"mr-1\" text=\"ReactJS\" closable />\n      <Chip text=\"Vuexy\" closable />\n    )}\n}\nexport default chipClosable\n`}\n    </code>\n  </pre>\n)\n\nexport const chipsClosableIcons = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport Chip from \"./ChipComponent\"\nimport { Trash, Trash2, MinusCircle, Delete } from \"react-feather\"\n\nclass ChipClosableIcons extends React.Component {\n  render() {\n    return(\n      <Chip className=\"mr-1\" text=\"Dribble\" closableIcon={<Trash />} closable />\n      <Chip className=\"mr-1\" text=\"Github\" closableIcon={<Trash2 />} closable />\n      <Chip className=\"mr-1\" text=\"Behance\" closableIcon={<Delete />} closable />\n      <Chip className=\"mr-1\" text=\"ReactJS\" closableIcon={<MinusCircle />} closable />\n    )}\n}\nexport default ChipClosableIcons\n`}\n    </code>\n  </pre>\n)\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport Chip from \"./ChipComponent\"\nimport { Eye, Code, User } from \"react-feather\"\nimport { chipsDefault } from \"./ChipSourceCode\"\nimport chipImg from \"../../../assets/img/portrait/small/avatar-s-2.jpg\"\nclass ChipsDefault extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Default</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>Chips helps you represent simple data with Various options.</p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Chip className=\"mr-1\" text=\"Basic Chip\" />\n                <Chip className=\"mr-1\" avatarText=\"RX\" text=\"Avatar Text\" />\n                <Chip\n                  className=\"mr-1\"\n                  avatarIcon={<User />}\n                  text=\"Avatar Icon\"\n                />\n                <Chip\n                  className=\"mr-1\"\n                  avatarImg={chipImg}\n                  text=\"Avatar Image\"\n                />\n                <Chip text=\"Chip Closable\" closable />\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {chipsDefault}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default ChipsDefault\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport Chip from \"./ChipComponent\"\nimport classnames from \"classnames\"\nimport { Eye, Code, User } from \"react-feather\"\nimport { chipsColors } from \"./ChipSourceCode\"\nimport chipImg from \"../../../assets/img/portrait/small/avatar-s-2.jpg\"\nclass ChipsColors extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Colors</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use prop{\" \"}\n              <code>color=[primary | success | danger | info | warning ]</code>{\" \"}\n              to create a colored chip.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Chip className=\"mr-1\" color=\"primary\" text=\"Primary Chip\" />\n                <Chip\n                  className=\"mr-1\"\n                  color=\"success\"\n                  avatarText=\"RX\"\n                  text=\"Avatar Text\"\n                />\n                <Chip\n                  className=\"mr-1\"\n                  color=\"info\"\n                  avatarIcon={<User />}\n                  text=\"Avatar Icon\"\n                />\n                <Chip\n                  className=\"mr-1\"\n                  color=\"warning\"\n                  avatarImg={chipImg}\n                  text=\"Avatar Image\"\n                />\n                <Chip color=\"danger\" text=\"Chip Closable\" closable />\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {chipsColors}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default ChipsColors\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport Chip from \"./ChipComponent\"\nimport { Eye, Code, User } from \"react-feather\"\nimport { chipsAvatarColors } from \"./ChipSourceCode\"\n\nclass ChipsAvatarColors extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Avatar Colors</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use prop{\" \"}\n              <code>\n                avatarColor=[primary | success | danger | info | warning | dark]\n              </code>{\" \"}\n              to create a colored avatar chip.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Chip\n                  className=\"mr-1\"\n                  avatarColor=\"primary\"\n                  avatarText=\"RX\"\n                  text=\"Avatar Text\"\n                />\n                <Chip\n                  className=\"mr-1\"\n                  avatarColor=\"success\"\n                  avatarText=\"VS\"\n                  text=\"Avatar Text\"\n                />\n                <Chip\n                  className=\"mr-1\"\n                  avatarColor=\"info\"\n                  avatarIcon={<User />}\n                  text=\"Avatar Text\"\n                />\n                <Chip\n                  className=\"mr-1\"\n                  avatarColor=\"danger\"\n                  avatarIcon={<User />}\n                  text=\"Avatar Text\"\n                />\n                <Chip\n                  avatarColor=\"warning\"\n                  avatarIcon={<User />}\n                  text=\"Avatar Text\"\n                />\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {chipsAvatarColors}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default ChipsAvatarColors\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport {\n  Eye,\n  Code,\n  User,\n  Share,\n  Mail,\n  Slash,\n  Battery,\n  Edit\n} from \"react-feather\"\nimport Chip from \"./ChipComponent\"\nimport { chipsIcons } from \"./ChipSourceCode\"\n\nclass ChipsIcons extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Icons</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use prop <code>avatarIcon</code> add icon to avatar.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Chip className=\"mr-1\" avatarIcon={<User />} text=\"User Icon\" />\n                <Chip\n                  className=\"mr-1\"\n                  avatarColor=\"primary\"\n                  avatarIcon={<Share />}\n                  text=\"Share Icon\"\n                />\n                <Chip\n                  className=\"mr-1\"\n                  avatarColor=\"success\"\n                  avatarIcon={<Mail />}\n                  text=\"Mail Icon\"\n                />\n                <Chip\n                  className=\"mr-1\"\n                  avatarColor=\"danger\"\n                  avatarIcon={<Slash />}\n                  text=\"Block Icon\"\n                />\n                <Chip\n                  className=\"mr-1\"\n                  avatarColor=\"warning\"\n                  avatarIcon={<Battery />}\n                  text=\"Battery Icon\"\n                />\n                <Chip\n                  className=\"mr-1\"\n                  avatarColor=\"info\"\n                  avatarIcon={<Edit />}\n                  text=\"Edit Icon\"\n                />\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {chipsIcons}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default ChipsIcons\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport Chip from \"./ChipComponent\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { chipsClosable } from \"./ChipSourceCode\"\n\nclass ChipsClosable extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Chips Closable</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use prop <code>closable</code> to make your chips closable.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Chip className=\"mr-1\" text=\"Dribble\" closable />\n                <Chip className=\"mr-1\" text=\"Github\" closable />\n                <Chip className=\"mr-1\" text=\"Behance\" closable />\n                <Chip className=\"mr-1\" text=\"ReactJS\" closable />\n                <Chip text=\"Vuexy\" closable />\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {chipsClosable}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default ChipsClosable\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport {\n  Eye,\n  Code,\n  XCircle,\n  Trash,\n  Trash2,\n  Delete,\n  MinusCircle\n} from \"react-feather\"\nimport Chip from \"./ChipComponent\"\nimport { chipsClosableIcons } from \"./ChipSourceCode\"\n\nclass ChipsClosableIcons extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Customized Closeable Icon</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              You can use prop <code>closableIcon</code> with prop{\" \"}\n              <code>closable</code> to create a chip with customized close icon.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Chip\n                  className=\"mr-1\"\n                  text=\"Dribble\"\n                  closableIcon={<Trash />}\n                  closable\n                />\n                <Chip\n                  className=\"mr-1\"\n                  text=\"Github\"\n                  closableIcon={<Trash2 />}\n                  closable\n                />\n                <Chip\n                  className=\"mr-1\"\n                  text=\"Behance\"\n                  closableIcon={<Delete />}\n                  closable\n                />\n                <Chip\n                  className=\"mr-1\"\n                  text=\"ReactJS\"\n                  closableIcon={<MinusCircle />}\n                  closable\n                />\n                <Chip text=\"Vuexy\" closableIcon={<XCircle />} closable />\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {chipsClosableIcons}{\" \"}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default ChipsClosableIcons\n","import React from \"react\"\nimport { Row, Col } from \"reactstrap\"\nimport BreadCrumbs from \"../../@vuexy/breadCrumbs/BreadCrumb\"\nimport ChipsDefault from \"./ChipsDefault\"\nimport ChipsColors from \"./ChipsColors\"\nimport ChipsAvatarColors from \"./ChipsAvatarColors\"\nimport ChipsIcons from \"./ChipsIcons\"\nimport ChipsClosable from \"./ChipsClosable\"\nimport ChipsClosableIcons from \"./ClosableIcons\"\nimport Prism from \"prismjs\"\nimport \"prismjs/components/prism-jsx.min\"\nclass Chips extends React.Component {\n  componentDidMount() {\n    Prism.highlightAll()\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <BreadCrumbs\n          breadCrumbTitle=\"Chips\"\n          breadCrumbParent=\"Extra Components\"\n          breadCrumbActive=\"Chips\"\n        />\n        <Row>\n          <Col sm=\"12\">\n            <ChipsDefault />\n          </Col>\n          <Col sm=\"12\">\n            <ChipsColors />\n          </Col>\n          <Col sm=\"12\">\n            <ChipsAvatarColors />\n          </Col>\n          <Col sm=\"12\">\n            <ChipsIcons />\n          </Col>\n          <Col sm=\"12\">\n            <ChipsClosable />\n          </Col>\n          <Col sm=\"12\">\n            <ChipsClosableIcons />\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\nexport default Chips\n","import React from 'react';\n/**\n * TabContext\n * {\n *  activeTabId: PropTypes.any\n * }\n */\n\nexport var TabContext = /*#__PURE__*/React.createContext({});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tabs: PropTypes.bool,\n  pills: PropTypes.bool,\n  vertical: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  horizontal: PropTypes.string,\n  justified: PropTypes.bool,\n  fill: PropTypes.bool,\n  navbar: PropTypes.bool,\n  card: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'ul',\n  vertical: false\n};\n\nvar getVerticalClass = function getVerticalClass(vertical) {\n  if (vertical === false) {\n    return false;\n  } else if (vertical === true || vertical === 'xs') {\n    return 'flex-column';\n  }\n\n  return \"flex-\" + vertical + \"-column\";\n};\n\nvar Nav = function Nav(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabs = props.tabs,\n      pills = props.pills,\n      vertical = props.vertical,\n      horizontal = props.horizontal,\n      justified = props.justified,\n      fill = props.fill,\n      navbar = props.navbar,\n      card = props.card,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tabs\", \"pills\", \"vertical\", \"horizontal\", \"justified\", \"fill\", \"navbar\", \"card\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, navbar ? 'navbar-nav' : 'nav', horizontal ? \"justify-content-\" + horizontal : false, getVerticalClass(vertical), {\n    'nav-tabs': tabs,\n    'card-header-tabs': card && tabs,\n    'nav-pills': pills,\n    'card-header-pills': card && pills,\n    'nav-justified': justified,\n    'nav-fill': fill\n  }), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nNav.propTypes = propTypes;\nNav.defaultProps = defaultProps;\nexport default Nav;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, omit, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  activeTab: PropTypes.any,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar TabContent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TabContent, _Component);\n\n  TabContent.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.activeTab !== nextProps.activeTab) {\n      return {\n        activeTab: nextProps.activeTab\n      };\n    }\n\n    return null;\n  };\n\n  function TabContent(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      activeTab: _this.props.activeTab\n    };\n    return _this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        Tag = _this$props.tag;\n    var attributes = omit(this.props, Object.keys(propTypes));\n    var classes = mapToCssModules(classNames('tab-content', className), cssModule);\n    return /*#__PURE__*/React.createElement(TabContext.Provider, {\n      value: {\n        activeTabId: this.state.activeTab\n      }\n    }, /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    })));\n  };\n\n  return TabContent;\n}(Component);\n\nexport default TabContent;\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  tabId: PropTypes.any\n};\nvar defaultProps = {\n  tag: 'div'\n};\nexport default function TabPane(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabId = props.tabId,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tabId\", \"tag\"]);\n\n  var getClasses = function getClasses(activeTabId) {\n    return mapToCssModules(classNames('tab-pane', className, {\n      active: tabId === activeTabId\n    }), cssModule);\n  };\n\n  return /*#__PURE__*/React.createElement(TabContext.Consumer, null, function (_ref) {\n    var activeTabId = _ref.activeTabId;\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: getClasses(activeTabId)\n    }));\n  });\n}\nTabPane.propTypes = propTypes;\nTabPane.defaultProps = defaultProps;","!function(i){var t=i.util.clone(i.languages.javascript),e=\"(?:\\\\{<S>*\\\\.{3}(?:[^{}]|<BRACES>)*\\\\})\";function n(t,n){return t=t.replace(/<S>/g,function(){return\"(?:\\\\s|//.*(?!.)|/\\\\*(?:[^*]|\\\\*(?!/))\\\\*/)\"}).replace(/<BRACES>/g,function(){return\"(?:\\\\{(?:\\\\{(?:\\\\{[^{}]*\\\\}|[^{}])*\\\\}|[^{}])*\\\\})\"}).replace(/<SPREAD>/g,function(){return e}),RegExp(t,n)}e=n(e).source,i.languages.jsx=i.languages.extend(\"markup\",t),i.languages.jsx.tag.pattern=n(\"</?(?:[\\\\w.:-]+(?:<S>+(?:[\\\\w.:$-]+(?:=(?:\\\"(?:\\\\\\\\[^]|[^\\\\\\\\\\\"])*\\\"|'(?:\\\\\\\\[^]|[^\\\\\\\\'])*'|[^\\\\s{'\\\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*/?)?>\"),i.languages.jsx.tag.inside.tag.pattern=/^<\\/?[^\\s>\\/]*/i,i.languages.jsx.tag.inside[\"attr-value\"].pattern=/=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/i,i.languages.jsx.tag.inside.tag.inside[\"class-name\"]=/^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/,i.languages.jsx.tag.inside.comment=t.comment,i.languages.insertBefore(\"inside\",\"attr-name\",{spread:{pattern:n(\"<SPREAD>\"),inside:i.languages.jsx}},i.languages.jsx.tag),i.languages.insertBefore(\"inside\",\"special-attr\",{script:{pattern:n(\"=<BRACES>\"),inside:{\"script-punctuation\":{pattern:/^=(?=\\{)/,alias:\"punctuation\"},rest:i.languages.jsx},alias:\"language-javascript\"}},i.languages.jsx.tag);var o=function(t){return t?\"string\"==typeof t?t:\"string\"==typeof t.content?t.content:t.content.map(o).join(\"\"):\"\"},r=function(t){for(var n=[],e=0;e<t.length;e++){var a=t[e],s=!1;if(\"string\"!=typeof a&&(\"tag\"===a.type&&a.content[0]&&\"tag\"===a.content[0].type?\"</\"===a.content[0].content[0].content?0<n.length&&n[n.length-1].tagName===o(a.content[0].content[1])&&n.pop():\"/>\"===a.content[a.content.length-1].content||n.push({tagName:o(a.content[0].content[1]),openedBraces:0}):0<n.length&&\"punctuation\"===a.type&&\"{\"===a.content?n[n.length-1].openedBraces++:0<n.length&&0<n[n.length-1].openedBraces&&\"punctuation\"===a.type&&\"}\"===a.content?n[n.length-1].openedBraces--:s=!0),(s||\"string\"==typeof a)&&0<n.length&&0===n[n.length-1].openedBraces){var g=o(a);e<t.length-1&&(\"string\"==typeof t[e+1]||\"plain-text\"===t[e+1].type)&&(g+=o(t[e+1]),t.splice(e+1,1)),0<e&&(\"string\"==typeof t[e-1]||\"plain-text\"===t[e-1].type)&&(g=o(t[e-1])+g,t.splice(e-1,1),e--),t[e]=new i.Token(\"plain-text\",g,null,g)}a.content&&\"string\"!=typeof a.content&&r(a.content)}};i.hooks.add(\"after-tokenize\",function(t){\"jsx\"!==t.language&&\"tsx\"!==t.language||r(t.tokens)})}(Prism);"],"sourceRoot":""}