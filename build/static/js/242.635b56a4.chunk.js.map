{"version":3,"sources":["views/apps/contactUs/customer/AddCustomer.js","axiosConfig.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["AddCustomer","props","changeHandler1","e","setState","status","target","value","changeHandler","name","changeHandler2","length","submitHandler","preventDefault","axiosConfig","post","state","then","response","console","log","swal","history","push","catch","error","first_name","last_name","customer_email","mobile_no","sortorder","className","col-sm-6","onClick","onSubmit","this","lg","md","type","placeholder","onChange","sm","style","marginRight","fontWeight","Ripple","color","Component","instance","axios","create","baseURL","propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","string","cssModule","object","FormGroup","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/242.635b56a4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Card,\n  CardBody,\n  Col,\n  Form,\n  Row,\n  Input,\n  Label,\n  Button,\n  CustomInput,\n  FormGroup,\n} from \"reactstrap\";\nimport { history } from \"../../../../history\";\nimport axiosConfig from \"../../../../axiosConfig\";\nimport swal from \"sweetalert\";\n\nexport class AddCustomer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      first_name: \"\",\n      last_name: \"\",\n      customer_email: \"\",\n      mobile_no: \"\",\n      sortorder: \"\",\n      status: \"\",\n    };\n  }\n\n  changeHandler1 = e => {\n    this.setState({ status: e.target.value });\n  };\n  changeHandler = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  changeHandler2 = e => {\n    if (e.target.value.length < 11)\n      this.setState({\n        [e.target.name]: e.target.value,\n      });\n  };\n  submitHandler = e => {\n    e.preventDefault();\n    // const data = new FormData();\n    // data.append(\"employee_name\", this.state.employee_name);\n    // data.append(\"phone_no\", this.state.phone_no);\n    // data.append(\"email\", this.state.email);\n    // data.append(\"password\", this.state.password);\n    // data.append(\"designation\", this.state.designation);\n    // data.append(\"sortorder\", this.state.sortorder);\n    // data.append(\"status\", this.state.status);\n    // if (this.state.selectedFile !== null) {\n    //   data.append(\"image\", this.state.selectedFile, this.state.selectedName);\n    // }\n    //   for (var value of data.values()) {\n    //     console.log(value);\n    //  }\n    axiosConfig\n      .post(\"http://35.154.86.59/api/user/customersignup\", this.state)\n      .then(response => {\n        console.log(response);\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\n        this.props.history.push(\"/app/contactUs/customer/customerList\");\n      })\n      .catch(error => {\n        console.log(error);\n        swal(\"Error!\", \"Error Received\", \"error\");\n      });\n  };\n  render() {\n    return (\n      <div>\n        <Card>\n          <Row className=\"m-2\">\n            <Col>\n              <h1 col-sm-6 className=\"float-left\">\n                Add New Customer\n              </h1>\n            </Col>\n            <Col>\n              <Button\n                className=\" btn btn-danger float-right\"\n                onClick={() =>\n                  history.push(\"/app/contactUs/customer/customerList\")\n                }\n              >\n                Back\n              </Button>\n            </Col>\n          </Row>\n          <CardBody>\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\n              <Row className=\"mb-2\">\n                <Col lg=\"6\" md=\"6\">\n                  <FormGroup>\n                    <Label>FirstName</Label>\n                    <Input\n                      type=\"text\"\n                      placeholder=\"First Name\"\n                      name=\"first_name\"\n                      value={this.state.first_name}\n                      onChange={this.changeHandler}\n                    />\n                  </FormGroup>\n                </Col>\n                <Col lg=\"6\" md=\"6\">\n                  <FormGroup>\n                    <Label>LastName</Label>\n                    <Input\n                      type=\"text\"\n                      placeholder=\"Last Name\"\n                      name=\"last_name\"\n                      value={this.state.last_name}\n                      onChange={this.changeHandler}\n                    />\n                  </FormGroup>\n                </Col>\n                <Col lg=\"6\" md=\"6\">\n                  <FormGroup>\n                    <Label>Customer Email</Label>\n                    <Input\n                      type=\"email\"\n                      placeholder=\"Customer Email\"\n                      name=\"customer_email\"\n                      value={this.state.customer_email}\n                      onChange={this.changeHandler}\n                    />\n                  </FormGroup>\n                </Col>\n                <Col lg=\"6\" md=\"6\">\n                  <FormGroup>\n                    <Label>Mobile Number</Label>\n                    <Input\n                      type=\"number\"\n                      placeholder=\"Mobile Number\"\n                      name=\"mobile_no\"\n                      value={this.state.mobile_no}\n                      onChange={this.changeHandler2}\n                    />\n                  </FormGroup>\n                </Col>\n\n                <Col lg=\"6\" md=\"6\">\n                  <FormGroup>\n                    <Label>Sort Order</Label>\n                    <Input\n                      type=\"number\"\n                      placeholder=\"Sort Order\"\n                      name=\"sortorder\"\n                      value={this.state.sortorder}\n                      onChange={this.changeHandler}\n                    />\n                  </FormGroup>\n                </Col>\n\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-1 \">\n                  <FormGroup>\n                    <Label className=\"mb-1\">Status</Label>\n                    <div\n                      className=\"form-label-group\"\n                      onChange={e => this.changeHandler1(e)}\n                    >\n                      <input\n                        style={{ marginRight: \"3px\", fontWeight: 800 }}\n                        type=\"radio\"\n                        name=\"status\"\n                        value=\"Active\"\n                      />\n                      <span style={{ marginRight: \"20px\", fontWeight: 800 }}>\n                        Active\n                      </span>\n\n                      <input\n                        style={{ marginRight: \"3px\" }}\n                        type=\"radio\"\n                        name=\"status\"\n                        value=\"Inactive\"\n                      />\n                      <span style={{ marginRight: \"3px\" }}>Inactive</span>\n                    </div>\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Button.Ripple\n                  color=\"primary\"\n                  type=\"submit\"\n                  className=\"ml-2 mb-1\"\n                >\n                  Add Customer\n                </Button.Ripple>\n              </Row>\n            </Form>\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default AddCustomer;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"http://35.154.86.59/api/admin\",\n  \n});\n\nexport default instance;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}