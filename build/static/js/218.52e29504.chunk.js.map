{"version":3,"sources":["extensions/drag-and-drop/DndVertical.js","extensions/drag-and-drop/DndCards.js","extensions/drag-and-drop/DndMultiple.js","extensions/drag-and-drop/DragAndDrop.js","extensions/extensionsHeader.js"],"names":["listItems","id","img","img1","name","content","img2","img3","img4","img5","getItems","count","map","k","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","DndVertical","state","items","onDragEnd","destination","source","index","setState","Card","CardHeader","CardTitle","CardBody","ListGroup","this","droppableId","provided","snapshot","ref","innerRef","item","key","draggableId","draggableProps","dragHandleProps","className","ListGroupItem","Media","left","tag","object","src","alt","height","width","body","placeholder","React","Component","dragItems","title","DndHorizontal","direction","deviceWidth","window","updateDnd","innerWidth","prevProps","prevState","addEventListener","droppableProps","listItems2","img6","img7","img8","img9","img10","arr","move","droppableSource","droppableDestination","sourceClone","destClone","DndMultiple","selected","id2List","droppable","droppable2","getList","Row","Col","md","sm","flush","DragAndDrop","Fragment","subTitle","link","ExtensionsHeader","data-tour","props","href","target","rel"],"mappings":"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","file":"static/js/218.52e29504.chunk.js","sourcesContent":["import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  ListGroup,\n  ListGroupItem,\n  Media\n} from \"reactstrap\"\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\nimport img1 from \"../../assets/img/portrait/small/avatar-s-12.jpg\"\nimport img2 from \"../../assets/img/portrait/small/avatar-s-1.jpg\"\nimport img3 from \"../../assets/img/portrait/small/avatar-s-2.jpg\"\nimport img4 from \"../../assets/img/portrait/small/avatar-s-3.jpg\"\nimport img5 from \"../../assets/img/portrait/small/avatar-s-4.jpg\"\n\nconst listItems = [\n  {\n    id: \"1\",\n    img: img1,\n    name: \"Mary S. Navarre\",\n    content:\n      \"Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.\"\n  },\n  {\n    id: \"2\",\n    img: img2,\n    name: \"Samuel M. Ellis\",\n    content: \"Toffee powder marzipan tiramisu. Cake cake dessert danish.\"\n  },\n  {\n    id: \"3\",\n    img: img3,\n    name: \"Sandra C. Toney\",\n    content:\n      \"Sugar plum fruitcake gummies marzipan liquorice tiramisu. Pastry liquorice chupa chupsake.\"\n  },\n  {\n    id: \"4\",\n    img: img4,\n    name: \"Cleveland C. Goins\",\n    content: \"Toffee powder marzipan tiramisu. Cake cake dessert danish.\"\n  },\n  {\n    id: \"5\",\n    img: img5,\n    name: \"Linda M. English\",\n    content:\n      \"Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.\"\n  }\n]\n\n// get data from array\nconst getItems = count =>\n  listItems.map(k => ({\n    id: k.id,\n    content: k.content,\n    img: k.img,\n    name: k.name\n  }))\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list)\n  const [removed] = result.splice(startIndex, 1)\n  result.splice(endIndex, 0, removed)\n  return result\n}\n\nclass DndVertical extends React.Component {\n  state = {\n    items: getItems()\n  }\n\n  onDragEnd = result => {\n    // dropped outside the list\n    if (!result.destination) {\n      return\n    }\n\n    const items = reorder(\n      this.state.items,\n      result.source.index,\n      result.destination.index\n    )\n\n    this.setState({\n      items\n    })\n  }\n\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Basic List Group Sortable</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <ListGroup id=\"list-group-dnd\">\n            <DragDropContext onDragEnd={this.onDragEnd}>\n              <Droppable droppableId=\"droppable\">\n                {(provided, snapshot) => (\n                  <div ref={provided.innerRef}>\n                    {this.state.items.map((item, index) => (\n                      <Draggable\n                        key={item.id}\n                        draggableId={item.id}\n                        index={index}\n                      >\n                        {(provided, snapshot) => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            className=\"drag-wrapper\"\n                          >\n                            <ListGroupItem>\n                              <Media>\n                                <Media left tag=\"div\">\n                                  <Media\n                                    object\n                                    src={item.img}\n                                    className=\"rounded-circle mr-2\"\n                                    alt=\"Generic placeholder image\"\n                                    height=\"50\"\n                                    width=\"50\"\n                                  />\n                                </Media>\n                                <Media body>\n                                  <h5 className=\"mt-0\">{item.name}</h5>\n                                  {item.content}\n                                </Media>\n                              </Media>\n                            </ListGroupItem>\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </DragDropContext>\n          </ListGroup>\n        </CardBody>\n      </Card>\n    )\n  }\n}\n\nexport default DndVertical\n","import React from \"react\"\nimport { Card, CardHeader, CardBody, CardTitle } from \"reactstrap\"\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\n\nconst dragItems = [\n  {\n    id: \"1\",\n    title: \"Draggable Card 1\",\n    content:\n      \"Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.\"\n  },\n  {\n    id: \"2\",\n    title: \"Draggable Card 2\",\n    content:\n      \"Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.\"\n  },\n  {\n    id: \"3\",\n    title: \"Draggable Card 3\",\n    content:\n      \"Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.\"\n  },\n  {\n    id: \"4\",\n    title: \"Draggable Card 4\",\n    content:\n      \"Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.\"\n  }\n]\n\n// get data from array\nconst getItems = count =>\n  dragItems.map(k => ({\n    id: k.id,\n    title: k.title,\n    content: k.content\n  }))\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list)\n  const [removed] = result.splice(startIndex, 1)\n  result.splice(endIndex, 0, removed)\n  return result\n}\n\nclass DndHorizontal extends React.Component {\n  state = {\n    items: getItems(),\n    direction: \"horizontal\",\n    deviceWidth: window.width\n  }\n\n  updateDnd = () => {\n    this.setState({\n      deviceWidth: window.innerWidth\n    })\n    if (this.state.deviceWidth <= 992) {\n      this.setState({\n        direction: \"vertical\"\n      })\n    } else {\n      this.setState({\n        direction: \"horizontal\"\n      })\n    }\n  }\n  componentDidMount() {\n    this.updateDnd()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    window.addEventListener(\"resize\", this.updateDnd)\n  }\n\n  onDragEnd = result => {\n    // dropped outside the list\n    if (!result.destination) {\n      return\n    }\n\n    const items = reorder(\n      this.state.items,\n      result.source.index,\n      result.destination.index\n    )\n\n    this.setState({\n      items\n    })\n  }\n\n  render() {\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Droppable droppableId=\"droppable\" direction={this.state.direction}>\n          {(provided, snapshot) => (\n            <div\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n              className=\"d-flex flex-sm-wrap flex-lg-nowrap draggable-cards\"\n            >\n              {this.state.items.map((item, index) => (\n                <Draggable key={item.id} draggableId={item.id} index={index}>\n                  {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                    >\n                      <Card\n                        className={`draggable-cards ${\n                          item.id !== 4 ? \"mr-1\" : null\n                        }`}\n                      >\n                        <CardHeader>\n                          <CardTitle>{item.title}</CardTitle>\n                        </CardHeader>\n                        <CardBody>{item.content}</CardBody>\n                      </Card>\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    )\n  }\n}\n\nexport default DndHorizontal\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  ListGroup,\n  ListGroupItem,\n  Media,\n  Row,\n  Col\n} from \"reactstrap\"\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\nimport img1 from \"../../assets/img/portrait/small/avatar-s-12.jpg\"\nimport img2 from \"../../assets/img/portrait/small/avatar-s-1.jpg\"\nimport img3 from \"../../assets/img/portrait/small/avatar-s-2.jpg\"\nimport img4 from \"../../assets/img/portrait/small/avatar-s-3.jpg\"\nimport img5 from \"../../assets/img/portrait/small/avatar-s-4.jpg\"\nimport img6 from \"../../assets/img/portrait/small/avatar-s-5.jpg\"\nimport img7 from \"../../assets/img/portrait/small/avatar-s-6.jpg\"\nimport img8 from \"../../assets/img/portrait/small/avatar-s-7.jpg\"\nimport img9 from \"../../assets/img/portrait/small/avatar-s-8.jpg\"\nimport img10 from \"../../assets/img/portrait/small/avatar-s-9.jpg\"\n\nconst listItems = [\n  {\n    id: \"1\",\n    img: img1,\n    name: \"Mary S. Navarre\",\n    content:\n      \"Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.\"\n  },\n  {\n    id: \"2\",\n    img: img2,\n    name: \"Samuel M. Ellis\",\n    content: \"Toffee powder marzipan tiramisu. Cake cake dessert danish.\"\n  },\n  {\n    id: \"3\",\n    img: img3,\n    name: \"Sandra C. Toney\",\n    content:\n      \"Sugar plum fruitcake gummies marzipan liquorice tiramisu. Pastry liquorice chupa.\"\n  },\n  {\n    id: \"4\",\n    img: img4,\n    name: \"Cleveland C. Goins\",\n    content: \"Toffee powder marzipan tiramisu. Cake cake dessert danish.\"\n  },\n  {\n    id: \"5\",\n    img: img5,\n    name: \"Linda M. English\",\n    content:\n      \"Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.\"\n  }\n]\n\nconst listItems2 = [\n  {\n    id: \"6\",\n    img: img6,\n    name: \"Alexandria I. Smelser\",\n    content: \"Toffee powder marzipan tiramisu. Cake cake dessert danish.\"\n  },\n  {\n    id: \"7\",\n    img: img7,\n    name: \"Oscar N. Pool\",\n    content:\n      \"Sugar plum fruitcake gummies marzipan liquorice tiramisu. Pastry liquorice chupsake.\"\n  },\n  {\n    id: \"8\",\n    img: img8,\n    name: \"Kathy A. Alvarado\",\n    content:\n      \"Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.\"\n  },\n  {\n    id: \"9\",\n    img: img9,\n    name: \"James E. White\",\n    content: \"Toffee powder marzipan tiramisu. Cake cake dessert danish.\"\n  },\n  {\n    id: \"10\",\n    img: img10,\n    name: \"Roberta R. Babin\",\n    content:\n      \"Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.\"\n  }\n]\n\n// get data from array\nconst getItems = arr =>\n  arr.map(k => ({\n    id: k.id,\n    content: k.content,\n    img: k.img,\n    name: k.name\n  }))\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list)\n  const [removed] = result.splice(startIndex, 1)\n  result.splice(endIndex, 0, removed)\n\n  return result\n}\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source)\n  const destClone = Array.from(destination)\n  const [removed] = sourceClone.splice(droppableSource.index, 1)\n\n  destClone.splice(droppableDestination.index, 0, removed)\n\n  const result = {}\n  result[droppableSource.droppableId] = sourceClone\n  result[droppableDestination.droppableId] = destClone\n\n  return result\n}\n\nclass DndMultiple extends React.Component {\n  state = {\n    items: getItems(listItems),\n    selected: getItems(listItems2)\n  }\n\n  id2List = {\n    droppable: \"items\",\n    droppable2: \"selected\"\n  }\n\n  getList = id => this.state[this.id2List[id]]\n\n  onDragEnd = result => {\n    const { source, destination } = result\n\n    // dropped outside the list\n    if (!destination) {\n      return\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      const items = reorder(\n        this.getList(source.droppableId),\n        source.index,\n        destination.index\n      )\n\n      let state = { items }\n\n      if (source.droppableId === \"droppable2\") {\n        state = { selected: items }\n      }\n\n      this.setState(state)\n    } else {\n      const result = move(\n        this.getList(source.droppableId),\n        this.getList(destination.droppableId),\n        source,\n        destination\n      )\n\n      this.setState({\n        items: result.droppable,\n        selected: result.droppable2\n      })\n    }\n  }\n\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Multiple Drop Target</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <div>\n            <DragDropContext onDragEnd={this.onDragEnd}>\n              <Row>\n                <Col md=\"6\" sm=\"12\">\n                  <h4 className=\"my-1\">People Group 1</h4>\n                  <ListGroup flush>\n                    <Droppable droppableId=\"droppable\">\n                      {(provided, snapshot) => (\n                        <div ref={provided.innerRef}>\n                          {this.state.items.map((item, index) => (\n                            <Draggable\n                              key={item.id}\n                              draggableId={item.id}\n                              index={index}\n                            >\n                              {(provided, snapshot) => (\n                                <div\n                                  ref={provided.innerRef}\n                                  {...provided.draggableProps}\n                                  {...provided.dragHandleProps}\n                                >\n                                  <ListGroupItem>\n                                    <Media>\n                                      <Media left tag=\"div\">\n                                        <Media\n                                          object\n                                          src={item.img}\n                                          className=\"rounded-circle mr-2\"\n                                          alt=\"Generic placeholder image\"\n                                          height=\"50\"\n                                          width=\"50\"\n                                        />\n                                      </Media>\n                                      <Media body>\n                                        <h5 className=\"mt-0\">{item.name}</h5>\n                                        {item.content}\n                                      </Media>\n                                    </Media>\n                                  </ListGroupItem>\n                                </div>\n                              )}\n                            </Draggable>\n                          ))}\n                          {provided.placeholder}\n                        </div>\n                      )}\n                    </Droppable>\n                  </ListGroup>\n                </Col>\n                <Col md=\"6\" sm=\"12\">\n                  <h4 className=\"my-1\">People Group 2</h4>\n                  <ListGroup flush>\n                    <Droppable droppableId=\"droppable2\">\n                      {(provided, snapshot) => (\n                        <div ref={provided.innerRef}>\n                          {this.state.selected.map((item, index) => (\n                            <Draggable\n                              key={item.id}\n                              draggableId={item.id}\n                              index={index}\n                            >\n                              {(provided, snapshot) => (\n                                <div\n                                  ref={provided.innerRef}\n                                  {...provided.draggableProps}\n                                  {...provided.dragHandleProps}\n                                >\n                                  <ListGroupItem>\n                                    <Media>\n                                      <Media left tag=\"div\">\n                                        <Media\n                                          object\n                                          src={item.img}\n                                          className=\"rounded-circle mr-2\"\n                                          alt=\"Generic placeholder image\"\n                                          height=\"50\"\n                                          width=\"50\"\n                                        />\n                                      </Media>\n                                      <Media body>\n                                        <h5 className=\"mt-0\">{item.name}</h5>\n                                        {item.content}\n                                      </Media>\n                                    </Media>\n                                  </ListGroupItem>\n                                </div>\n                              )}\n                            </Draggable>\n                          ))}\n                          {provided.placeholder}\n                        </div>\n                      )}\n                    </Droppable>\n                  </ListGroup>\n                </Col>\n              </Row>\n            </DragDropContext>\n          </div>\n        </CardBody>\n      </Card>\n    )\n  }\n}\n\nexport default DndMultiple\n","import React from \"react\"\nimport ExtensionsHeader from \"../extensionsHeader\"\nimport { Row, Col } from \"reactstrap\"\nimport DndVertical from \"./DndVertical\"\nimport DndHorizontal from \"./DndCards\"\nimport DndMultiple from \"./DndMultiple\"\n\nimport \"../../assets/scss/plugins/extensions/drag-and-drop.scss\"\n\nclass DragAndDrop extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <ExtensionsHeader\n          title=\"React Beautiful Drag And Drop\"\n          subTitle=\"Beautiful and accessible drag and drop for lists with React\"\n          link=\"https://github.com/atlassian/react-beautiful-dnd\"\n        />\n        <Row>\n          <Col sm=\"12\">\n            <DndHorizontal />\n          </Col>\n          <Col sm=\"12\">\n            <DndVertical />\n          </Col>\n          <Col sm=\"12\">\n            <DndMultiple />\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default DragAndDrop\n","import React from \"react\"\nimport { Row, Col } from \"reactstrap\"\n// import { Star } from \"react-feather\"\n\nclass ExtensionsHeader extends React.Component {\n  render() {\n    return (\n      <Row className=\"mb-2\">\n        <Col sm=\"12\" className=\"ml-50\">\n          <p\n            className=\"font-medium-5 mt-1 extension-title\"\n            data-tour=\"extension-title\"\n          >\n            {this.props.title}\n          </p>\n          {this.props.link ? <a href={this.props.link} target=\"_blank\" rel=\"noopener noreferrer\">\n            {this.props.subTitle}\n          </a> : <p className=\"text-primary\">{this.props.subTitle}</p> \n          }\n        </Col>\n      </Row>\n    )\n  }\n}\nexport default ExtensionsHeader\n"],"sourceRoot":""}