{"version":3,"sources":["views/apps/stockControl/AddStockTransfer.js","axiosConfig.js"],"names":["AddStockTransfer","props","changeHandler1","e","setState","status","target","value","changeHandler","name","submitHandler","preventDefault","axiosConfig","post","state","then","response","console","log","swal","history","push","catch","error","reference_no","from_warehouse","to_warehouse","transfer_date","delivery_duedate","transfer_type","reason","a","get","warehouseL","data","className","col-sm-6","onClick","onSubmit","this","lg","md","type","onChange","map","warehouseList","key","_id","warehousename","Ripple","color","Component","instance","axios","create","baseURL"],"mappings":"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","file":"static/js/262.fc397ada.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Card,\n  CardBody,\n  Col,\n  Form,\n  Row,\n  Input,\n  CustomInput,\n  Label,\n  Button,\n  FormGroup,\n} from \"reactstrap\";\nimport { history } from \"../../../history\";\nimport axiosConfig from \"../../../axiosConfig\";\nimport swal from \"sweetalert\";\n\nexport class AddStockTransfer extends Component {\n  constructor(props) {\n    super(props);\n    {\n      this.state = {\n        reference_no: \"\",\n        from_warehouse: \"\",\n        to_warehouse: \"\",\n        transfer_date: \"\",\n        delivery_duedate: \"\",\n        transfer_type: \"\",\n        reason: \"\",\n      };\n    }\n  }\n\n  async componentDidMount() {\n    //Warehouse List\n    axiosConfig\n      .get(\"/getwarehouse\")\n      .then(response => {\n        console.log(response);\n        this.setState({ warehouseL: response.data.data });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n  // addControls() {\n  //   this.setState({\n  //     addTextbox: [...this.state.addTextbox, {}],\n  //   });\n  // }\n  // delControl(i) {\n  //   this.state.addTextbox.splice(i, 1);\n  //   this.setState({});\n  // }\n\n  //   async componentDidMount() {\n  //     //Product Category\n  //     axiosConfig\n  //       .get(\"/getproduct\")\n  //       .then(response => {\n  //         console.log(response);\n  //         this.setState({ productS: response.data.data });\n  //       })\n  //       .catch(error => {\n  //         console.log(error);\n  //       });\n  //   }\n\n\n\n     \n  \n  changeHandler1 = e => {\n    this.setState({ status: e.target.value });\n  };\n  \n  changeHandler = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  submitHandler = e => {\n    e.preventDefault();\n  \n    axiosConfig\n      .post(\"/addstocktransfer\", this.state)\n      .then(response => {\n        console.log(response);\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\n        this.props.history.push(\"/app/stockControl/StockAdjustment\");\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n    render() {\n      return (\n        <div>\n          <Card>\n            <Row className=\"m-2\">\n              <Col>\n                <h1 col-sm-6 className=\"float-left\">\n                  Add New Stock Transfer\n                </h1>\n              </Col>\n              <Col>\n                <Button\n                  className=\" btn btn-danger float-right\"\n                  onClick={() =>\n                    history.push(\"/app/stockControl/stockTransferRequest\")\n                  }\n                >\n                  Back\n                </Button>\n              </Col>\n            </Row>\n            <CardBody>\n              <Form className=\"m-1\" onSubmit={this.submitHandler}>\n                <Row className=\"mb-2\">\n                  <Col lg=\"6\" md=\"6\">\n                    <Label>Referance Number</Label>\n                    <Input\n                      type=\"number\"\n                      name=\"reference_no\"\n                      value={this.state.reference_no}\n                      onChange={this.changeHandler}\n                    />\n                  </Col>\n              \n                  <Col lg=\"6\" md=\"6\" className=\"mb-1\">\n                    <Label>Select From Warehouse</Label>\n                    <CustomInput\n                      type=\"select\"\n                      name=\"from_warehouse\"\n                      value={this.state.from_warehouse}\n                      onChange={this.changeHandler}\n                    >\n                      {this.state.warehouseL?.map(warehouseList => (\n                        <option key={warehouseList._id} value={warehouseList._id}>\n                          {warehouseList.warehousename}\n                        </option>\n                      ))}\n                    </CustomInput>\n                  </Col>\n                  <Col lg=\"6\" md=\"6\" className=\"mb-1\">\n                    <Label>Select To Warehouse</Label>\n                    <CustomInput\n                      type=\"select\"\n                      name=\"to_warehouse\"\n                      value={this.state.to_warehouse}\n                      onChange={this.changeHandler}\n                    ></CustomInput>\n                  </Col>\n  \n                  <Col lg=\"6\" md=\"6\" className=\"mb-1\">\n                    <Label>Transfer Date</Label>\n                    <Input\n                      type=\"date\"\n                      name=\"transfer_date\"\n                      value={this.state.transfer_date}\n                      onChange={this.changeHandler}\n                    />\n                  </Col>\n                  <Col lg=\"6\" md=\"6\" className=\"mb-1\">\n                    <Label>Delivery Due Date</Label>\n                    <Input\n                      type=\"date\"\n                      name=\"delivery_duedate\"\n                      value={this.state.delivery_duedate}\n                      onChange={this.changeHandler}\n                    />\n                  </Col>\n                  <Col lg=\"6\" md=\"6\" className=\"mb-1\">\n                    <Label>Transfer Type</Label>\n                    <CustomInput\n                      type=\"select\"\n                      name=\"transfer_type\"\n                      value={this.state.transfer_type}\n                      onChange={this.changeHandler}\n                    ></CustomInput>\n                  </Col>\n                  <Col lg=\"6\" md=\"6\" className=\"mb-1\">\n                    <Label>Reason</Label>\n                    <CustomInput\n                      type=\"select\"\n                      name=\"reason\"\n                      value={this.state.reason}\n                      onChange={this.changeHandler}\n                    ></CustomInput>\n                  </Col>\n                </Row>\n              {/* <Row className=\"mt-4\">\n                <div>\n                  {this.state.addTextbox.map(index => (\n                    <div>\n                      {index ? (\n                        <div id=\"btn\">\n                          <Row>\n                            <Col lg=\"12\" md=\"6\" sm=\"6\" className=\"mb-2\">\n                              <Row>\n                                <Col lg=\"6\" mf=\"6\">\n                                  <Button\n                                    color=\"primary\"\n                                    onClick={() => this.addControls()}\n                                  >\n                                    Add Product\n                                  </Button>\n                                </Col>\n                                <Col\n                                  lg=\"6\"\n                                  mf=\"6\"\n                                  className=\"d-flex justify-content-end\"\n                                >\n                                  <Button\n                                    color=\"danger\"\n                                    onClick={() => this.delControl(index)}\n                                  >\n                                    Remove\n                                  </Button>\n                                </Col>\n                              </Row>\n                            </Col>\n                          </Row>\n                        </div>\n                      ) : null}\n\n                      <Row>\n                        <Col md=\"4\" sm=\"12\">\n                          <FormGroup>\n                            <Label> Product Name </Label>\n                            <Input type=\"text\" placeholder=\" Product Name\" />\n                          </FormGroup>\n                        </Col>\n                        <Col md=\"4\" sm=\"12\">\n                          <FormGroup>\n                            <Label> SKU </Label>\n                            <Input type=\"text\" placeholder=\"SKU\" />\n                          </FormGroup>\n                        </Col>\n                        <Col md=\"4\" sm=\"12\">\n                          <FormGroup>\n                            <Label> HSN </Label>\n                            <Input type=\"text\" rows=\"5\" placeholder=\"HSN\" />\n                          </FormGroup>\n                        </Col>\n                        <Col md=\"4\" sm=\"12\">\n                          <FormGroup>\n                            <Label> Quantity </Label>\n                            <Input\n                              type=\"text\"\n                              rows=\"5\"\n                              placeholder=\"Quantity\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col md=\"4\" sm=\"12\">\n                          <FormGroup>\n                            <Label> Cost price </Label>\n                            <Input\n                              type=\"text\"\n                              rows=\"5\"\n                              placeholder=\"Cost price\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col md=\"4\" sm=\"12\">\n                          <FormGroup>\n                            <Label> GST </Label>\n                            <Input type=\"text\" rows=\"5\" placeholder=\"GST\" />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                  ))}\n                </div>\n              </Row> */}\n              {/* <Row className=\"mt-4\">\n                <Col md=\"6\" sm=\"12\">\n                  <FormGroup>\n                    <Label> Note</Label>\n                    <Input type=\"textarea\" placeholder=\"\" />\n                  </FormGroup>\n                </Col>\n              </Row> */}\n              <Row>\n                <Button.Ripple\n                  color=\"primary\"\n                  type=\"submit\"\n                  className=\"mr-1 mb-1\"\n                >\n                  Add\n                </Button.Ripple>\n              </Row>\n            </Form>\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n}\nexport default AddStockTransfer;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"http://35.154.86.59/api/admin\",\n  \n});\n\nexport default instance;\n"],"sourceRoot":""}