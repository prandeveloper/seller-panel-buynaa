{"version":3,"sources":["../node_modules/react-elastic-carousel/node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","../node_modules/react-swipeable/es/index.js","../../src/index.js","../../src/react-elastic-carousel/utils/helpers.js","../../src/react-elastic-carousel/components/styled/Button.js","../../src/react-elastic-carousel/consts.js","../../src/react-elastic-carousel/components/styled/ItemWrapper.js","../../src/react-elastic-carousel/components/styled/SliderContainer.js","../../src/react-elastic-carousel/components/styled/Slider.js","../../src/react-elastic-carousel/components/styled/StyledCarousel.js","../../src/react-elastic-carousel/components/styled/CarouselWrapper.js","../../src/react-elastic-carousel/components/ItemWrapperContainer.js","../../src/react-elastic-carousel/components/Track.js","../../src/react-elastic-carousel/components/Arrow.js","../../src/react-elastic-carousel/actions/consts.js","../../src/react-elastic-carousel/reducers/items.js","../../src/react-elastic-carousel/actions/itemsActions.js","../../src/react-elastic-carousel/components/Pagination/Dot.js","../../src/react-elastic-carousel/components/Pagination/Pagination.js","../../src/react-elastic-carousel/components/Carousel.js"],"names":["MapShim","Map","getIndex","arr","key","result","some","entry","index","anonymous","this","__entries__","prototypeAccessors","size","configurable","get","length","prototype","set","value","push","delete","entries","splice","has","clear","forEach","callback","ctx","i","list","call","Object","defineProperties","isBrowser","window","document","global$1","global","Math","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","observe","attributes","childList","characterData","subtree","removeEventListener","disconnect","ref","propertyName","getInstance","instance_","defineConfigurable","target","props","keys","defineProperty","enumerable","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","len","arguments","reduce","position","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","getPaddings","horizPad","left","right","vertPad","top","bottom","width","height","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","x","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","contentRect","Constr","DOMRectReadOnly","create","createReadOnlyRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","this$1","observation","map","WeakMap","ResizeObserver","method","apply","_extends","assign","source","hasOwnProperty","defaultProps","preventDefaultTouchmoveEvent","delta","rotationAngle","trackMouse","trackTouch","initialState","xy","swiping","eventData","undefined","start","rotateXYByAngle","pos","angle","angleInRadians","PI","cos","sin","getHandlers","handlerProps","onStart","event","touches","state","onMove","onUp","_ref","clientX","clientY","initial","concat","first","_ref2","_rotateXYByAngle","deltaX","deltaY","absX","absY","time","velocity","sqrt","dir","getDirection","onSwiping","cancelablePageSwipe","onSwiped","cancelable","preventDefault","onEnd","cleanUpMouse","e","attachTouch","el","tls","_ref3","h","_ref4","output","addState","cleanUpTouch","onMouseDown","updateTransientState","Swipeable","_React$PureComponent","subClass","superClass","_this","_set","cb","transientState","type","constructor","__proto__","render","_this$props","className","style","_this$props$nodeName","nodeName","innerRef","children","_getHandlers","handlers","React","createElement","PureComponent","propTypes","PropTypes","func","onSwipedUp","onSwipedRight","onSwipedDown","onSwipedLeft","number","bool","string","Only","when","hiddenMode","singleChild","restOfChildProps","extendedProps","keepNode","display","visibility","cloned","Component","noop","numberToArray","n","Array","cssPrefix","prefix","space","classNames","chainedClasses","acc","pipe","fns","f","ItemWrapper","itemPosition","consts","styled","calcLeft","isRTL","verticalMode","isSwiping","swipedSliderPosition","sliderPosition","calcRight","calcTop","calcTransition","transitionMs","easing","tiltEasing","effectiveEasing","transition","outerSpacing","ItemWrapperContainer","onClick","id","Track","childWidth","autoTabIndexVisibleItems","enableSwipe","enableMouseSwipe","itemsToShow","itemsToScroll","currentItem","itemPadding","onItemClick","paddingStyle","minVisibleItem","maxVisibleItem","prevItem","nextItem","originalChildren","isVisible","idx","isPrevItem","isNextItem","itemClass","childToRender","tabIndex","padding","flexDirection","stopPropagation","noAutoTabbedItems","directionIcons","up","down","arrowClassname","Arrow","direction","icons","rest","arrows","styleObj","rotate","rotateStyle","cx","activeIndexReducer","action","limit","optimisticNextItem","optimisticPrevItem","nextItemAction","prevItemAction","Dot","DotContainer","active","Indicators","Pagination","numOfPages","activePage","pages","Carousel","rootHeight","childHeight","transitioning","activeIndex","sliderContainerWidth","name","autoPlaySpeed","setInterval","clearInterval","fn","breakPoints","restOfProps","currentBreakPoint","bp","totalItems","Children","moveBy","emptySlots","newActiveIndex","sliderNode","sliderHeight","nextState","childrenLength","showEmptySlots","sliderContainerNode","newSliderContainerWidth","containerWidth","onResize","currentState","maxItemsToShow","endLimit","distance","duration","roundedIdx","item","getPrev","nextAction","currentIndex","nextItemIndex","data","goingNext","goingBack","horizontalSwipe","verticalSwipe","horizontalMode","distanceSwipe","horizontalEdgeStoppage","verticalEdgeStoppage","trackSize","minSwipeDistanceHorizontal","minSwipeDistanceVertical","swipedLeft","swipedRight","swipedUp","swipedDown","goodToGo","numberOfSlidesViaSwipe","numberOfSlidesTogo","backSlidesToGo","forwardSlideTtoGo","skipTilt","options","onNextStart","nextItemObj","onPrevStart","enableTilt","onNextEnd","onChange","onPrevEnd","childSize","nextItemId","newSliderPosition","safeNextItemId","isPrev","positionEndCb","stateUpdater","safeItemsToShow","inRangeItemsToShow","newActivePage","inRangeActivePageIndex","indicatorId","gotoIndex","prevProps","prevState","enableAutoPlay","getNextItemIndex","currentChildrenLength","prevChildrenLength","calculatedItemsToShow","focusOnSelect","pagination","showArrows","disableArrowsOnEnd","renderArrow","renderPagination","canSlidePrev","canSlideNext","disabledPrevArrow","disabledNextArrow","isEdge","disabled","setRef","onIndicatorClick","initialFirstItem","initialActiveIndex"],"mappings":"sJAAA,YAOA,IAAIA,EAAW,WACX,GAAmB,qBAARC,IACP,OAAOA,IAUX,SAASC,EAASC,EAAKC,GACnB,IAAIC,GAAU,EAYd,OAVAF,EAAIG,MAAK,SAAUC,EAAOC,GACtB,OAAID,EAAM,KAAOH,IACbC,EAASG,GAEF,MAMRH,EAGX,OAAQ,WACJ,SAASI,IACLC,KAAKC,YAAc,GAGvB,IAAIC,EAAqB,CAAEC,KAAM,CAAEC,cAAc,IAiFjD,OA5EAF,EAAmBC,KAAKE,IAAM,WAC1B,OAAOL,KAAKC,YAAYK,QAO5BP,EAAUQ,UAAUF,IAAM,SAAUX,GAChC,IAAII,EAAQN,EAASQ,KAAKC,YAAaP,GACnCG,EAAQG,KAAKC,YAAYH,GAE7B,OAAOD,GAASA,EAAM,IAQ1BE,EAAUQ,UAAUC,IAAM,SAAUd,EAAKe,GACrC,IAAIX,EAAQN,EAASQ,KAAKC,YAAaP,IAElCI,EACDE,KAAKC,YAAYH,GAAO,GAAKW,EAE7BT,KAAKC,YAAYS,KAAK,CAAChB,EAAKe,KAQpCV,EAAUQ,UAAUI,OAAS,SAAUjB,GACnC,IAAIkB,EAAUZ,KAAKC,YACfH,EAAQN,EAASoB,EAASlB,IAEzBI,GACDc,EAAQC,OAAOf,EAAO,IAQ9BC,EAAUQ,UAAUO,IAAM,SAAUpB,GAChC,SAAUF,EAASQ,KAAKC,YAAaP,IAMzCK,EAAUQ,UAAUQ,MAAQ,WACxBf,KAAKC,YAAYY,OAAO,IAQ5Bd,EAAUQ,UAAUS,QAAU,SAAUC,EAAUC,QAEjC,IAARA,IAAiBA,EAAM,MAE5B,IAAK,IAAIC,EAAI,EAAGC,EAHHpB,KAGiBC,YAAakB,EAAIC,EAAKd,OAAQa,GAAK,EAAG,CAChE,IAAItB,EAAQuB,EAAKD,GAEjBF,EAASI,KAAKH,EAAKrB,EAAM,GAAIA,EAAM,MAI3CyB,OAAOC,iBAAkBxB,EAAUQ,UAAWL,GAEvCH,EAtFH,GA5BG,GAyHXyB,EAA8B,qBAAXC,QAA8C,qBAAbC,UAA4BD,OAAOC,WAAaA,SAGpGC,EACsB,qBAAXC,GAA0BA,EAAOC,OAASA,KAC1CD,EAGS,qBAATE,MAAwBA,KAAKD,OAASA,KACtCC,KAGW,qBAAXL,QAA0BA,OAAOI,OAASA,KAC1CJ,OAIJM,SAAS,cAATA,GASPC,EACqC,oBAA1BC,sBAIAA,sBAAsBC,KAAKP,GAG/B,SAAUV,GAAY,OAAOkB,YAAW,WAAc,OAAOlB,EAASmB,KAAKC,SAAW,IAAO,KAqFpGC,EAAiB,CAAC,MAAO,QAAS,SAAU,OAAQ,QAAS,SAAU,OAAQ,UAG/EC,EAAwD,qBAArBC,iBAKnCC,EAA2B,WAC3BzC,KAAK0C,YAAa,EAClB1C,KAAK2C,sBAAuB,EAC5B3C,KAAK4C,mBAAqB,KAC1B5C,KAAK6C,WAAa,GAElB7C,KAAK8C,iBAAmB9C,KAAK8C,iBAAiBZ,KAAKlC,MACnDA,KAAK+C,QAtFM,SAAU9B,EAAU+B,GAC/B,IAAIC,GAAc,EACdC,GAAe,EACfC,EAAe,EAQnB,SAASC,IACDH,IACAA,GAAc,EAEdhC,KAGAiC,GACAG,IAWR,SAASC,IACLtB,EAAwBoB,GAQ5B,SAASC,IACL,IAAIE,EAAYnB,KAAKC,MAErB,GAAIY,EAAa,CAEb,GAAIM,EAAYJ,EAtDN,EAuDN,OAOJD,GAAe,OAEfD,GAAc,EACdC,GAAe,EAEff,WAAWmB,EAAiBN,GAGhCG,EAAeI,EAGnB,OAAOF,EAuBQG,CAASxD,KAAK+C,QAAQb,KAAKlC,MAnB1B,KAgDpByC,EAAyBlC,UAAUkD,YAAc,SAAUC,IACjD1D,KAAK6C,WAAWc,QAAQD,IAC1B1D,KAAK6C,WAAWnC,KAAKgD,GAIpB1D,KAAK0C,YACN1C,KAAK4D,YAUbnB,EAAyBlC,UAAUsD,eAAiB,SAAUH,GAC1D,IAAII,EAAY9D,KAAK6C,WACjB/C,EAAQgE,EAAUH,QAAQD,IAGzB5D,GACDgE,EAAUjD,OAAOf,EAAO,IAIvBgE,EAAUxD,QAAUN,KAAK0C,YAC1B1C,KAAK+D,eAUbtB,EAAyBlC,UAAUwC,QAAU,WACnB/C,KAAKgE,oBAKvBhE,KAAK+C,WAYbN,EAAyBlC,UAAUyD,iBAAmB,WAElD,IAAIC,EAAkBjE,KAAK6C,WAAWqB,QAAO,SAAUR,GACnD,OAAOA,EAASS,eAAgBT,EAASU,eAU7C,OAFAH,EAAgBjD,SAAQ,SAAU0C,GAAY,OAAOA,EAASW,qBAEvDJ,EAAgB3D,OAAS,GASpCmC,EAAyBlC,UAAUqD,SAAW,WAGrCpC,IAAaxB,KAAK0C,aAOvBhB,SAAS4C,iBAAiB,gBAAiBtE,KAAK8C,kBAEhDrB,OAAO6C,iBAAiB,SAAUtE,KAAK+C,SAEnCR,GACAvC,KAAK4C,mBAAqB,IAAIJ,iBAAiBxC,KAAK+C,SAEpD/C,KAAK4C,mBAAmB2B,QAAQ7C,SAAU,CACtC8C,YAAY,EACZC,WAAW,EACXC,eAAe,EACfC,SAAS,MAGbjD,SAAS4C,iBAAiB,qBAAsBtE,KAAK+C,SAErD/C,KAAK2C,sBAAuB,GAGhC3C,KAAK0C,YAAa,IAStBD,EAAyBlC,UAAUwD,YAAc,WAGxCvC,GAAcxB,KAAK0C,aAIxBhB,SAASkD,oBAAoB,gBAAiB5E,KAAK8C,kBACnDrB,OAAOmD,oBAAoB,SAAU5E,KAAK+C,SAEtC/C,KAAK4C,oBACL5C,KAAK4C,mBAAmBiC,aAGxB7E,KAAK2C,sBACLjB,SAASkD,oBAAoB,qBAAsB5E,KAAK+C,SAG5D/C,KAAK4C,mBAAqB,KAC1B5C,KAAK2C,sBAAuB,EAC5B3C,KAAK0C,YAAa,IAUtBD,EAAyBlC,UAAUuC,iBAAmB,SAAUgC,GACxD,IAAIC,EAAeD,EAAIC,kBAAoC,IAAjBA,IAA0BA,EAAe,IAGhEzC,EAAe1C,MAAK,SAAUF,GACjD,SAAUqF,EAAapB,QAAQjE,OAI/BM,KAAK+C,WASbN,EAAyBuC,YAAc,WAKnC,OAJKhF,KAAKiF,YACNjF,KAAKiF,UAAY,IAAIxC,GAGlBzC,KAAKiF,WAGhBxC,EAAyBwC,UAAY,KASrC,IAAIC,EAAsB,SAAUC,EAAQC,GACxC,IAAK,IAAIjE,EAAI,EAAGC,EAAOE,OAAO+D,KAAKD,GAAQjE,EAAIC,EAAKd,OAAQa,GAAK,EAAG,CAChE,IAAIzB,EAAM0B,EAAKD,GAEfG,OAAOgE,eAAeH,EAAQzF,EAAK,CAC/Be,MAAO2E,EAAM1F,GACb6F,YAAY,EACZC,UAAU,EACVpF,cAAc,IAItB,OAAO+E,GASPM,EAAe,SAAUN,GAQzB,OAJkBA,GAAUA,EAAOO,eAAiBP,EAAOO,cAAcC,aAInDhE,GAItBiE,EAAYC,EAAe,EAAG,EAAG,EAAG,GAQxC,SAASC,EAAQrF,GACb,OAAOsF,WAAWtF,IAAU,EAUhC,SAASuF,EAAeC,GAEpB,IADA,IAAIC,EAAY,GAAIC,EAAMC,UAAU9F,OAAS,EACrC6F,KAAQ,GAAID,EAAWC,GAAQC,UAAWD,EAAM,GAExD,OAAOD,EAAUG,QAAO,SAAUlG,EAAMmG,GAGpC,OAAOnG,EAAO2F,EAFFG,EAAO,UAAYK,EAAW,aAG3C,GA2CP,SAASC,EAA0BpB,GAG/B,IAAIqB,EAAcrB,EAAOqB,YACrBC,EAAetB,EAAOsB,aAU1B,IAAKD,IAAgBC,EACjB,OAAOb,EAGX,IAAIK,EAASR,EAAYN,GAAQuB,iBAAiBvB,GAC9CwB,EArDR,SAAqBV,GAIjB,IAHA,IACIU,EAAW,GAENxF,EAAI,EAAGC,EAHA,CAAC,MAAO,QAAS,SAAU,QAGTD,EAAIC,EAAKd,OAAQa,GAAK,EAAG,CACvD,IAAImF,EAAWlF,EAAKD,GAEhBV,EAAQwF,EAAO,WAAaK,GAEhCK,EAASL,GAAYR,EAAQrF,GAGjC,OAAOkG,EAyCQC,CAAYX,GACvBY,EAAWF,EAASG,KAAOH,EAASI,MACpCC,EAAUL,EAASM,IAAMN,EAASO,OAMlCC,EAAQrB,EAAQG,EAAOkB,OACvBC,EAAStB,EAAQG,EAAOmB,QAwB5B,GApByB,eAArBnB,EAAOoB,YAOHxF,KAAKyF,MAAMH,EAAQN,KAAcL,IACjCW,GAASnB,EAAeC,EAAQ,OAAQ,SAAWY,GAGnDhF,KAAKyF,MAAMF,EAASJ,KAAaP,IACjCW,GAAUpB,EAAeC,EAAQ,MAAO,UAAYe,KA0DhE,SAA2B7B,GACvB,OAAOA,IAAWM,EAAYN,GAAQzD,SAAS6F,gBAnD1CC,CAAkBrC,GAAS,CAK5B,IAAIsC,EAAgB5F,KAAKyF,MAAMH,EAAQN,GAAYL,EAC/CkB,EAAiB7F,KAAKyF,MAAMF,EAASJ,GAAWP,EAOpB,IAA5B5E,KAAK8F,IAAIF,KACTN,GAASM,GAGoB,IAA7B5F,KAAK8F,IAAID,KACTN,GAAUM,GAIlB,OAAO7B,EAAec,EAASG,KAAMH,EAASM,IAAKE,EAAOC,GAS9D,IAAIQ,EAGkC,qBAAvBC,mBACA,SAAU1C,GAAU,OAAOA,aAAkBM,EAAYN,GAAQ0C,oBAMrE,SAAU1C,GAAU,OAAOA,aAAkBM,EAAYN,GAAQ2C,YAAwC,oBAAnB3C,EAAO4C,SAmBxG,SAASC,EAAe7C,GACpB,OAAK3D,EAIDoG,EAAqBzC,GAjI7B,SAA2BA,GACvB,IAAI8C,EAAO9C,EAAO4C,UAElB,OAAOlC,EAAe,EAAG,EAAGoC,EAAKd,MAAOc,EAAKb,QA+HlCc,CAAkB/C,GAGtBoB,EAA0BpB,GAPtBS,EAiDf,SAASC,EAAesC,EAAGC,EAAGjB,EAAOC,GACjC,MAAO,CAAEe,EAAGA,EAAGC,EAAGA,EAAGjB,MAAOA,EAAOC,OAAQA,GAO/C,IAAIiB,EAAoB,SAASlD,GAC7BnF,KAAKsI,eAAiB,EACtBtI,KAAKuI,gBAAkB,EACvBvI,KAAKwI,aAAe3C,EAAe,EAAG,EAAG,EAAG,GAE5C7F,KAAKmF,OAASA,GAuBlBkD,EAAkB9H,UAAUkI,SAAW,WACnC,IAAIC,EAAOV,EAAehI,KAAKmF,QAI/B,OAFAnF,KAAKwI,aAAeE,EAEbA,EAAKvB,QAAUnH,KAAKsI,gBAAkBI,EAAKtB,SAAWpH,KAAKuI,iBAStEF,EAAkB9H,UAAUoI,cAAgB,WACxC,IAAID,EAAO1I,KAAKwI,aAKhB,OAHAxI,KAAKsI,eAAiBI,EAAKvB,MAC3BnH,KAAKuI,gBAAkBG,EAAKtB,OAErBsB,GAGX,IAAIE,EAAsB,SAASzD,EAAQ0D,GACvC,IAAIC,EA5FR,SAA4BhE,GACxB,IAAIqD,EAAIrD,EAAIqD,EACRC,EAAItD,EAAIsD,EACRjB,EAAQrC,EAAIqC,MACZC,EAAStC,EAAIsC,OAGb2B,EAAoC,qBAApBC,gBAAkCA,gBAAkB1H,OACpEoH,EAAOpH,OAAO2H,OAAOF,EAAOxI,WAWhC,OARA2E,EAAmBwD,EAAM,CACrBP,EAAGA,EAAGC,EAAGA,EAAGjB,MAAOA,EAAOC,OAAQA,EAClCH,IAAKmB,EACLrB,MAAOoB,EAAIhB,EACXD,OAAQE,EAASgB,EACjBtB,KAAMqB,IAGHO,EAyEWQ,CAAmBL,GAQrC3D,EAAmBlF,KAAM,CAAEmF,OAAQA,EAAQ2D,YAAaA,KAGxDK,EAAoB,SAASlI,EAAUmI,EAAYC,GAInD,GAHArJ,KAAKsJ,oBAAsB,GAC3BtJ,KAAKuJ,cAAgB,IAAIjK,EAED,oBAAb2B,EACP,MAAM,IAAIuI,UAAU,2DAGxBxJ,KAAKyJ,UAAYxI,EACjBjB,KAAK0J,YAAcN,EACnBpJ,KAAK2J,aAAeN,GA+BxBF,EAAkB5I,UAAUgE,QAAU,SAAUY,GAC5C,IAAKiB,UAAU9F,OACX,MAAM,IAAIkJ,UAAU,4CAIxB,GAAuB,qBAAZI,SAA6BA,mBAAmBtI,OAA3D,CAIA,KAAM6D,aAAkBM,EAAYN,GAAQyE,SACxC,MAAM,IAAIJ,UAAU,yCAGxB,IAAIK,EAAe7J,KAAKuJ,cAGpBM,EAAa/I,IAAIqE,KAIrB0E,EAAarJ,IAAI2E,EAAQ,IAAIkD,EAAkBlD,IAE/CnF,KAAK0J,YAAYjG,YAAYzD,MAG7BA,KAAK0J,YAAY3G,aASrBoG,EAAkB5I,UAAUuJ,UAAY,SAAU3E,GAC9C,IAAKiB,UAAU9F,OACX,MAAM,IAAIkJ,UAAU,4CAIxB,GAAuB,qBAAZI,SAA6BA,mBAAmBtI,OAA3D,CAIA,KAAM6D,aAAkBM,EAAYN,GAAQyE,SACxC,MAAM,IAAIJ,UAAU,yCAGxB,IAAIK,EAAe7J,KAAKuJ,cAGnBM,EAAa/I,IAAIqE,KAItB0E,EAAalJ,OAAOwE,GAEf0E,EAAa1J,MACdH,KAAK0J,YAAY7F,eAAe7D,SASxCmJ,EAAkB5I,UAAUsE,WAAa,WACrC7E,KAAK+J,cACL/J,KAAKuJ,cAAcxI,QACnBf,KAAK0J,YAAY7F,eAAe7D,OASpCmJ,EAAkB5I,UAAU4D,aAAe,WACnC,IAAI6F,EAAShK,KAEjBA,KAAK+J,cAEL/J,KAAKuJ,cAAcvI,SAAQ,SAAUiJ,GAC7BA,EAAYxB,YACZuB,EAAOV,oBAAoB5I,KAAKuJ,OAW5Cd,EAAkB5I,UAAU8D,gBAAkB,WAE1C,GAAKrE,KAAKoE,YAAV,CAIA,IAAIlD,EAAMlB,KAAK2J,aAGX/I,EAAUZ,KAAKsJ,oBAAoBY,KAAI,SAAUD,GACjD,OAAO,IAAIrB,EAAoBqB,EAAY9E,OAAQ8E,EAAYtB,oBAGnE3I,KAAKyJ,UAAUpI,KAAKH,EAAKN,EAASM,GAClClB,KAAK+J,gBAQTZ,EAAkB5I,UAAUwJ,YAAc,WACtC/J,KAAKsJ,oBAAoBzI,OAAO,IAQpCsI,EAAkB5I,UAAU6D,UAAY,WACpC,OAAOpE,KAAKsJ,oBAAoBhJ,OAAS,GAM7C,IAAIwD,EAA+B,qBAAZqG,QAA0B,IAAIA,QAAY,IAAI7K,EAMjE8K,EAAiB,SAAjBA,EAA0BnJ,GAC1B,KAAMjB,gBAAgBoK,GAClB,MAAM,IAAIZ,UAAU,sCAExB,IAAKpD,UAAU9F,OACX,MAAM,IAAIkJ,UAAU,4CAGxB,IAAIJ,EAAa3G,EAAyBuC,cACtCtB,EAAW,IAAIyF,EAAkBlI,EAAUmI,EAAYpJ,MAE3D8D,EAAUtD,IAAIR,KAAM0D,IAIxB,CAAC,UAAW,YAAa,cAAc1C,SAAQ,SAAUqJ,GACrDD,EAAe7J,UAAU8J,GAAU,WAC/B,OAAQvF,EAAMhB,EAAUzD,IAAIL,OAAOqK,GAAQC,MAAMxF,EAAKsB,WACtD,IAAItB,MAIZ,IAAIhF,EAEuC,qBAA5B6B,EAASyI,eACTzI,EAASyI,eAGbA,EAGItK,Q,kGC5/Bf,SAASyK,IAeP,OAdAA,EAAWjJ,OAAOkJ,QAAU,SAAUrF,GACpC,IAAK,IAAIhE,EAAI,EAAGA,EAAIiF,UAAU9F,OAAQa,IAAK,CACzC,IAAIsJ,EAASrE,UAAUjF,GAEvB,IAAK,IAAIzB,KAAO+K,EACVnJ,OAAOf,UAAUmK,eAAerJ,KAAKoJ,EAAQ/K,KAC/CyF,EAAOzF,GAAO+K,EAAO/K,IAK3B,OAAOyF,IAGOmF,MAAMtK,KAAMoG,WAS9B,IAAIuE,EAAe,CACjBC,8BAA8B,EAC9BC,MAAO,GACPC,cAAe,EACfC,YAAY,EACZC,YAAY,GAEVC,EAAe,CACjBC,GAAI,CAAC,EAAG,GACRC,SAAS,EACTC,eAAWC,EACXC,WAAOD,GA0BT,SAASE,EAAgBC,EAAKC,GAC5B,GAAc,IAAVA,EAAa,OAAOD,EACxB,IAAIE,EAAiB7J,KAAK8J,GAAK,IAAMF,EAGrC,MAAO,CAFCD,EAAI,GAAK3J,KAAK+J,IAAIF,GAAkBF,EAAI,GAAK3J,KAAKgK,IAAIH,GACtDF,EAAI,GAAK3J,KAAK+J,IAAIF,GAAkBF,EAAI,GAAK3J,KAAKgK,IAAIH,IAIhE,SAASI,EAAYtL,EAAKuL,GACxB,IAAIC,EAAU,SAAiBC,GAEzBA,EAAMC,SAAWD,EAAMC,QAAQ5L,OAAS,GAC5CE,GAAI,SAAU2L,EAAO/G,GAEfA,EAAM2F,aACRrJ,SAAS4C,iBAhCD,YAgC6B8H,GACrC1K,SAAS4C,iBAhCH,UAgC6B+H,IAGrC,IAAIC,EAAOL,EAAMC,QAAUD,EAAMC,QAAQ,GAAKD,EAI1Cf,EAAKK,EAAgB,CAHXe,EAAKC,QACLD,EAAKE,SAE0BpH,EAAM0F,eACnD,OAAOP,EAAS,GAAI4B,EAAOlB,EAAc,CACvCG,UAAW,CACTqB,QAAS,GAAGC,OAAOxB,GACnByB,OAAO,GAETzB,GAAIA,EACJI,MAAOW,EAAM1I,WAAa,QAK5B6I,EAAS,SAAgBH,GAC3BzL,GAAI,SAAU2L,EAAO/G,GACnB,IAAK+G,EAAMjB,GAAG,KAAOiB,EAAMjB,GAAG,IAAMe,EAAMC,SAAWD,EAAMC,QAAQ5L,OAAS,EAC1E,OAAO6L,EAGT,IAAIS,EAAQX,EAAMC,QAAUD,EAAMC,QAAQ,GAAKD,EAI3CY,EAAmBtB,EAAgB,CAHzBqB,EAAML,QACNK,EAAMJ,SAEuCpH,EAAM0F,eAC7D3C,EAAI0E,EAAiB,GACrBzE,EAAIyE,EAAiB,GAErBC,EAASX,EAAMjB,GAAG,GAAK/C,EACvB4E,EAASZ,EAAMjB,GAAG,GAAK9C,EACvB4E,EAAOnL,KAAK8F,IAAImF,GAChBG,EAAOpL,KAAK8F,IAAIoF,GAChBG,GAAQjB,EAAM1I,WAAa,GAAK4I,EAAMb,MACtC6B,EAAWtL,KAAKuL,KAAKJ,EAAOA,EAAOC,EAAOA,IAASC,GAAQ,GAE/D,GAAIF,EAAO5H,EAAMyF,OAASoC,EAAO7H,EAAMyF,QAAUsB,EAAMhB,QAAS,OAAOgB,EACvE,IAAIkB,EAvEV,SAAsBL,EAAMC,EAAMH,EAAQC,GACxC,OAAIC,EAAOC,EACLH,EAAS,EAZN,OACC,QAgBCC,EAAS,EAfb,KACE,OA8EKO,CAAaN,EAAMC,EAAMH,EAAQC,GAEvC3B,EAAYb,EAAS,GAAI4B,EAAMf,UAAW,CAC5Ca,MAAOA,EACPe,KAAMA,EACNC,KAAMA,EACNH,OAAQA,EACRC,OAAQA,EACRI,SAAUA,EACVE,IAAKA,IAGPjI,EAAMmI,WAAanI,EAAMmI,UAAUnC,GAGnC,IAAIoC,GAAsB,EAQ1B,OANIpI,EAAMmI,WAAanI,EAAMqI,UAAYrI,EAAM,WAAaiI,MAC1DG,GAAsB,GAGpBA,GAAuBpI,EAAMwF,8BAAgCxF,EAAM4F,YAAciB,EAAMyB,YAAYzB,EAAM0B,iBAEtGpD,EAAS,GAAI4B,EAAO,CACzBf,UAAWb,EAAS,GAAIa,EAAW,CACjCuB,OAAO,IAETxB,SAAS,QAKXyC,EAAQ,SAAe3B,GACzBzL,GAAI,SAAU2L,EAAO/G,GACnB,IAAIgG,EAUJ,OARIe,EAAMhB,UACRC,EAAYb,EAAS,GAAI4B,EAAMf,UAAW,CACxCa,MAAOA,IAET7G,EAAMqI,UAAYrI,EAAMqI,SAASrC,GACjChG,EAAM,WAAagG,EAAUiC,MAAQjI,EAAM,WAAagG,EAAUiC,KAAKjC,IAGlEb,EAAS,GAAI4B,EAAOlB,EAAc,CACvCG,UAAWA,QAKbyC,EAAe,WAEjBnM,SAASkD,oBA9HG,YA8H4BwH,GACxC1K,SAASkD,oBA9HC,UA8H4ByH,IAGpCA,EAAO,SAAcyB,GACvBD,IACAD,EAAME,IAGJC,EAAc,SAAqBC,GACrC,GAAIA,GAAMA,EAAG1J,iBAAkB,CAE7B,IAAI2J,EAAM,CAAC,CA7IA,aA6IajC,GAAU,CA5IxB,YA4IoCI,GAAS,CA3I9C,WA2IyDwB,IAOlE,OANAK,EAAIjN,SAAQ,SAAUkN,GACpB,IAAIJ,EAAII,EAAM,GACVC,EAAID,EAAM,GACd,OAAOF,EAAG1J,iBAAiBwJ,EAAGK,MAGzB,WACL,OAAOF,EAAIjN,SAAQ,SAAUoN,GAC3B,IAAIN,EAAIM,EAAM,GACVD,EAAIC,EAAM,GACd,OAAOJ,EAAGpJ,oBAAoBkJ,EAAGK,SAiCrCE,EAAS,CACXvJ,IA5BU,SAAekJ,GAGd,OAAPA,GACJxN,GAAI,SAAU2L,EAAO/G,GAEnB,GAAI+G,EAAM6B,KAAOA,EAAI,OAAO7B,EAC5B,IAAImC,EAAW,GAaf,OAXInC,EAAM6B,IAAM7B,EAAM6B,KAAOA,GAAM7B,EAAMoC,eACvCpC,EAAMoC,eACND,EAASC,aAAe,MAItBnJ,EAAM4F,YAAcgD,IACtBM,EAASC,aAAeR,EAAYC,IAI/BzD,EAAS,GAAI4B,EAAO,CACzB6B,GAAIA,GACHM,QAcP,OAJIvC,EAAahB,aACfsD,EAAOG,YAAcxC,GAGhB,CAACqC,EAAQN,GAGlB,SAASU,EAAqBtC,EAAO/G,EAAO2I,GAC1C,IAAIO,EAAW,GAYf,OAVKlJ,EAAM4F,YAAcmB,EAAMoC,cAC7BpC,EAAMoC,eACND,EAASC,aAAe,MACfnJ,EAAM4F,aAAemB,EAAMoC,cAEhCpC,EAAM6B,KACRM,EAASC,aAAeR,EAAY5B,EAAM6B,KAIvCzD,EAAS,GAAI4B,EAAOmC,GAwB7B,IAAII,EAEJ,SAAUC,GAnQV,IAAwBC,EAAUC,EAsQhC,SAASH,EAAUtJ,GACjB,IAAI0J,EAWJ,OATAA,EAAQH,EAAqBtN,KAAKrB,KAAMoF,IAAUpF,MAE5C+O,KAAO,SAAUC,GACrBF,EAAMG,eAAiBD,EAAGF,EAAMG,eAAgBH,EAAM1J,QAGxD0J,EAAMG,eAAiB1E,EAAS,GAAIU,EAAc,CAChDiE,KAAM,UAEDJ,EAgCT,OAlTgCD,EAoQNF,GApQJC,EAoQPF,GAnQNnO,UAAYe,OAAO2H,OAAO4F,EAAWtO,WAC9CqO,EAASrO,UAAU4O,YAAcP,EACjCA,EAASQ,UAAYP,EAkRRH,EAAUnO,UAEhB8O,OAAS,WACd,IAAIC,EAActP,KAAKoF,MACnBmK,EAAYD,EAAYC,UACxBC,EAAQF,EAAYE,MACpBC,EAAuBH,EAAYI,SACnCA,OAAoC,IAAzBD,EAAkC,MAAQA,EACrDE,EAAWL,EAAYK,SACvBC,EAAWN,EAAYM,SACvB7E,EAAauE,EAAYvE,WAEzB8E,EAAe/D,EAAY9L,KAAK+O,KAAM,CACxChE,WAAYA,IAEV+E,EAAWD,EAAa,GACxB9B,EAAc8B,EAAa,GAE/B7P,KAAKiP,eAAiBR,EAAqBzO,KAAKiP,eAAgBjP,KAAKoF,MAAO2I,GAC5E,IAAIjJ,EAAM6K,EAAW,SAAU3B,GAC7B,OAAO2B,EAAS3B,GAAK8B,EAAShL,IAAIkJ,IAChC8B,EAAShL,IACb,OAAOiL,IAAMC,cAAcN,EAAUnF,EAAS,GAAIuF,EAAU,CAC1DP,UAAWA,EACXC,MAAOA,EACP1K,IAAKA,IACH8K,IAGClB,EA/CT,CAgDEqB,IAAME,eACRvB,EAAUwB,UAAY,CACpBzC,SAAU0C,IAAUC,KACpB7C,UAAW4C,IAAUC,KACrBC,WAAYF,IAAUC,KACtBE,cAAeH,IAAUC,KACzBG,aAAcJ,IAAUC,KACxBI,aAAcL,IAAUC,KACxBvF,MAAOsF,IAAUM,OACjB7F,6BAA8BuF,IAAUO,KACxChB,SAAUS,IAAUQ,OACpB5F,WAAYoF,IAAUO,KACtB1F,WAAYmF,IAAUO,KACtBf,SAAUQ,IAAUC,KACpBtF,cAAeqF,IAAUM,QAE3B/B,EAAU/D,aAAeA,E,4rBCrVnBiG,c,qdA+BgD5Q,KAD3C,MACC4P,EADD,WACWiB,EADX,OACiBC,EADjB,aAC6BvB,EAD7B,YAEDwB,EAAchB,kBAApB,G,EACuCgB,EAHhC,MAGCvB,EAHD,QAGWwB,E,uHAHX,cAIDC,EAAgBA,EAAhBA,GAAN,GAEMC,EAAWJ,GAAjB,aAA+BA,EAE/B,IACE,YAAIA,E,EACF,UAA6BG,EAA7B,gB,EAEA,aAEqBH,gBAAfA,GAAgC,CAAEK,QAFxC,QAGqBL,mBAAfA,GAAmC,CAAEM,WAH3C,Y,IAOEC,EAAStB,mBAAf,G,OAGOc,EAAOA,EAFCK,EAAWA,EAA1B,S,EAlDEN,CAAaU,aAAbV,EAEGjG,aAAe,C,WAAA,W,UAET,cAJTiG,EAOGV,UAAY,C,SAEPC,YAFO,W,KAKXA,SALW,W,WAaLA,UAAgB,CAAC,WAAD,+BAbX,Y,UAoBNA,IAAUQ,Q,ikIC9BlB,IAAMY,EAAO,aAEPC,EAAgB,SAAAC,G,SAASC,SAAR,SAEjBC,EAAY,W,QACjBC,EAAN,MACMC,EAAN,IACIlS,EAAS,GAAH,OAHgC,G,mBAAfmS,EAAe,yBAAfA,EAAe,gB,IAMpCC,EAAiBD,EAAA,QAAkB,c,OACvC,IACEE,GAAO,GAAJ,+BADQ,IAGb,IAJF,I,OAMArS,MAKWsS,EAAO,W,2BAAIC,EAAJ,yBAAIA,EAAJ,gB,OAAY,SAAA/J,G,OAAK+J,EAAA,QAAW,c,OAAUC,EAAV,KAAf,K,smBCnBjC,MAAe,wBAAoB,Y,QAAA,K,MAA0B,CAAEjD,UAA5B,oBAApB,CAAf,KAKW,SAAA9J,G,OAAUA,kBAAL,UCPhB,EAAe,OAAf,EAAe,OAAf,EAAe,aAAf,EAAe,SAAf,EAKO,W,gLCAP,IAAMgN,GAAc,qBAAiB,Y,MAAgB,CACnD5C,MADmC,QAEnCD,UAAWoC,EAAU,mBAFH,CAAH,MAQI,Y,OAAA,kB,8IAGrBS,gBAA2B,CACzB5C,MADyB,GAEzB6C,aAAcC,GAGhBF,aAAwB,CACtBxC,SAAUO,YADY,WAEtBX,MAAOW,IAFe,OAGtBkC,aAAclC,UAAgB,CAACmC,EAAcA,EAAeA,KCtB9D,OAAeC,UAAf,U,gJCAA,IAAMC,GAAW,SAAC,G,IAChBC,EAKI,EALJA,MACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,qBACAC,EACI,EADJA,e,OAEIH,GAAJ,EACE,O,UAEUC,EAAYC,EAAtB,SAIEE,GAAY,SAAC,G,IACjBL,EAKI,EALJA,MACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,qBACAC,EACI,EADJA,e,OAEKH,GAAL,E,UACYC,EAAYC,EAAtB,QAEA,QAIEG,GAAU,SAAC,G,IACfL,EAII,EAJJA,aACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,qBACAC,EACI,EADJA,e,OAEA,E,UAGYF,EAAYC,EAAtB,QAFA,QAMEI,GAAiB,SAAC,G,IAAEL,EAAkD,EAAlDA,UAAWM,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WAEnDC,EAAkBT,EAAYQ,EAApC,E,oBADiBR,EAAY,EAA7B,EAEA,kBAIF,GAAe,qBAAiB,SAAAvN,G,MAAU,CACxCoK,MAAO,CACL6D,WAAYL,GADP,GAELlM,KAAM0L,GAFD,GAGLzL,MAAO+L,GAHF,GAIL7L,IAAK8L,GAAQ3N,OALF,CAAf,MAUoB,Y,OAAA,eAAsC,SAAtC,SAChB,Y,OAAA,eAAsC,oBAAtC,MACA,Y,IAAGsN,EAAH,eAAiBY,EAAjB,e,OACAZ,EAAe,GAAK,aAAR,SADZ,U,yHC5DJ,OAAe,qBAAiB,SAAAtN,G,MAAU,CACxCoK,MAAO,CACLpI,OAAQhC,OAAWgC,WAFR,CAAf,M,uKCAA,OAAemL,UAAf,UAKe,Y,OAAA,QAAwB,MAAxB,SCFTgB,e,iLACM,W,MACgB,EADV,OAEdC,EAFc,oB,oDAKP,0BAAiBxT,KAAjB,OAA6BwT,QAASxT,KAAKwT,e,EANhDD,CAA6BxD,IAAMuB,WAUzCiC,gBAAoC,CAClCC,QAASjC,GAGXgC,aAAiC,CAC/BE,GAAItD,cAAoB,CAACA,IAAD,OAAmBA,IADZ,SAE/BqD,QAASrD,IAAUC,MCfrB,IAAMsD,GAAQ,SAAC,G,IACb9D,EAeI,EAfJA,SACA+D,EAcI,EAdJA,WACAC,EAaI,EAbJA,yBACAC,EAYI,EAZJA,YACAC,EAWI,EAXJA,iBACAlJ,EAUI,EAVJA,6BACAmJ,EASI,EATJA,YACAC,EAQI,EARJA,cACAC,EAOI,EAPJA,YACA5B,EAMI,EANJA,aACA6B,EAKI,EALJA,YACAzG,EAII,EAJJA,SACAF,EAGI,EAHJA,UACAmF,EAEI,EAFJA,aACAyB,EACI,EADJA,YAEMhN,EAAQ,GAAH,SAAX,MACMiN,EAAe,GAAH,OAAMF,OAAN,OAAlB,MACMG,EAAN,EACMC,EAAiBL,EAAvB,EACMM,EAAWF,EAAjB,EACMG,EAAWF,EAAjB,EAEMG,EAAmB,oBAA6B,c,IAC9CC,EAAYC,MAAyBA,EAA3C,EACMC,GAAcF,GAAaC,GAAd,GAAiCA,EAApD,EACME,GAAcH,GAAaC,EAAd,GAAgCA,EAAnD,EACMG,EAAN,gBAEMC,EAAgBnB,EAClB,mBAA0B,CACxBoB,SAAUN,EAAY,GAAK,IAFjC,E,OAME,yBACEnF,UAAWoC,EAAU,EAAD,mDAGF+C,EAAY,UAHV,UAIlBE,GAAc,GAAJ,SAJQ,SAKlBC,GAAc,GAAJ,SALQ,WAQpB,sBACEpB,GADF,EAEEpB,aAFF,EAGE7C,MAAO,CAAErI,MAAF,EAAS8N,QAASb,GACzB1U,IAJF,EAKE8T,QAASW,GAff,O,OAsBeN,EACf,qBACErE,MAAO,CACL2B,QADK,OAEL+D,cAAexC,EAAe,SAAW,OAE3CyC,iBALF,EAMEvK,6BANF,EAOEG,WAPF,EAQE0C,SARF,EASEF,UATF,EAUEgC,UAAWoC,EAAU,aAXG,GAA5B,GAqBF+B,aAAkB,CAChB9D,SAAUO,UADM,WAEhB4D,YAAa5D,WAFG,WAGhBiF,kBAAmBjF,IAHH,KAIhB8D,YAAa9D,WAJG,WAKhBkC,aAAclC,IALE,OAMhB+D,YAAa/D,IANG,MAOhBwD,WAAYxD,IAPI,OAQhBuC,aAAcvC,IARE,KAShB0D,YAAa1D,IATG,KAUhB2D,iBAAkB3D,IAVF,KAWhBvF,6BAA8BuF,IAXd,KAYhB1C,SAAU0C,IAZM,KAahB5C,UAAW4C,IAbK,KAchBgE,YAAahE,IAAUC,MC5FzB,IAAMiF,GAAiB,CACrBvO,KADqB,SAErBC,MAFqB,SAGrBuO,GAHqB,SAIrBC,KAAM,UAGFC,GAAiB7D,EAAvB,SASM8D,GAAQ,SAAC,G,IAAEC,EAAgD,EAAhDA,UAAWlC,EAAqC,EAArCA,QAASmC,EAA4B,EAA5BA,MAAOnG,EAAqB,EAArBA,MAAUoG,EAAW,6CACzDC,EAAS,EAAH,SAAZ,GACMC,EAAW,EAAH,KATI,SAAAJ,G,IACdK,EAAJ,G,OACIL,IAAcD,GAAdC,IAA0BA,IAAcD,GAA5C,OACEM,6BAEF,EAKKC,CADS,IAAd,G,OAKE,uBACEhB,SADF,EAEExB,QAFF,EAGEjE,UAAW0G,IAAGT,GAAgB,GAAjB,sBAHf,IAIEhG,MAAOsG,GAJT,GAOGD,EARL,KAaFJ,eACAA,iBACAA,WACAA,eAEAA,aAAkB,CAChBC,UAAWvF,UAAgB,CAAC,OAAQ,QAAS,KAAlCA,SADK,WAEhBwF,MAAOxF,IAFS,OAGhBX,MAAOW,IAHS,OAIhBqD,QAASrD,IAAUC,MClDd,ICEM8F,GAAqB,SAAC/J,EAAOgK,G,IAChCC,EAA+BD,EADY,MACpCnC,EAAwBmC,EADY,c,OACZA,EADY,M,IDF9C,Y,ICMGE,EAAqBlK,EAAzB,E,OACiBiK,OAAjB,E,IDNC,Y,ICWGE,EAAqBnK,EAAzB,E,OACiBmK,OAAjB,E,eAKA,IChBOC,GAAiB,SAACH,EAAOpC,G,MAAmB,CACvD9E,KFHK,YEILkH,MAFuD,EAGvDpC,kBAGWwC,GAAiB,SAACJ,EAAOpC,G,MAAmB,CACvD9E,KFRK,YESLkH,MAFuD,EAGvDpC,kB,gZCNF,IAIMyC,GAAM,wBAAoB,Y,QAAA,K,MAA0B,CAAEvH,UAA5B,oBAApB,CAAH,MAMa,Y,OAAA,SACT,sBADS,iBAMN,Y,OAAA,SAfhB,iCADA,oCAsBkB,Y,OAAA,SArBlB,iCACA,qCAyBMwH,e,iLACM,W,MACgB,EADV,OAEdlD,EAFc,oB,iDAKNmD,EAAW3W,KADZ,a,OAGL,sBACEgV,SAAU2B,GAAM,EADlB,EAEEnD,QAASxT,KAFX,QAGE2W,OAHF,EAIEpH,UAAS,UAAKoC,EAAL,mBACPgF,EAAShF,EAAH,cADC,U,EAZX+E,CAAqB3G,IAAMuB,W,0HAoBjCoF,aAAyB,CACvBjD,GAAItD,cAAoB,CAACA,IAAD,OAAmBA,IADpB,SAEvBwG,OAAQxG,IAFe,KAGvBqD,QAASrD,IAAUC,MCjDrB,IAAMwG,GAAarE,UAAH,UAMVsE,e,yHAE0C7W,KADrC,MACC8W,EADD,aACaC,EADb,aACyBvD,EADzB,UAEDwD,EAAQxF,EAAd,G,OAEE,sBAAYjC,UAAWoC,EAAU,eAC9BqF,EAAA,KAAU,c,OACT,sBAAKtX,IAAL,EAAa+T,GAAb,EAAoBkD,OAAQxV,IAA5B,EAA8CqS,QAASA,Y,EAP3DqD,CAAmB9G,IAAMuB,WAc/BuF,gBAA0B,CACxBrD,QAASjC,GAGXsF,aAAuB,CACrBC,WAAY3G,WADS,WAErB4G,WAAY5G,WAFS,WAGrBqD,QAASrD,IAAUC,M,ICff6G,e,4LACiB,G,eACb,CACNC,WADM,EAENC,YAFM,EAGNtE,eAHM,EAIND,qBAJM,EAKND,WALM,EAMNyE,eANM,EAONnE,aAAc,QAPR,aAQNoE,YAAa,4BAAiC,QARxC,iBASNL,MATM,GAUND,WAVM,EAWNO,qBAAsB,I,iBAmEf,SAAAC,G,OAAQ,SAAAzS,G,OAAQ,KAAL,M,6BAEC,W,EACnB,GAAU,IAAI,EAAJ,GAAmB,c,UAAuB,G,yBACvCjF,EADuC,QAE5CA,WAAiB,EAArB,iBAIE4B,8BAA6B,W,EAC3B,wBAGA5B,WAAiB,EAArB,QAIE4B,8BAA6B,W,EAC3B,sB,mEAMR,WAAgB,EAAhB,iB,EACA,WAAgB,EAAhB,W,8BAGoB,W,OAAM,KAAN,gB,sBAER,W,IACJ+V,EAAkB,EADR,8C,EAElB,mBAA0BC,aAAY,WAChC,EAAJ,qBAC4B,EADC,qB,EAGzB,eAJN,M,yBAUe,WACX,EAAJ,qBACEC,cAAc,EAAdA,oB,EACA,4B,mBAIO,W,IACHZ,EAAa,EAAnB,gBACME,EAAQxF,EAAd,G,EACA,SAAc,CAAEwF,a,gCAGM,SAAAW,G,EACtB,8C,qCAG2B,SAAAA,G,EAC3B,iD,wCAG8B,W,IAAM,E,EACI,EADJ,MAC5BC,EAD4B,cACZC,EADY,qBAE5BP,EAAyB,EAFG,2B,OAOhCM,GAAeA,SAAnB,KACEE,EAAoBF,EAAA,wBAGZ,SAAAG,G,OAAMA,SAAJ,QAKRD,EAAoBF,EAApBE,K,OAIJ,S,+BAGqB,W,EACrB,UAAc,SAAA3L,G,MAMR,EANiB,gCAEnByD,EAFmB,WAGnB8C,EAHmB,eAInBqB,EAJmB,cAKnBd,EALmB,eAObkE,EAA6BhL,EAPhB,YAOAkL,EAAgBlL,EAPhB,YASfwH,EAAa,EAAnB,sBACMqE,EAAaC,sBAAnB,OAEIC,GAAJ,EAAab,EACPc,EAAapE,GAAeiE,EAAlC,GACIG,KAHgBH,EAApB,EAGA,IACEE,EAASC,GAATD,EAAsBb,G,IAEpBxE,GAAkBH,EAAeyE,EAAhB,GAArB,EACMiB,EACJD,IAAiBd,EAAjBc,EAnBmB,E,OAuBrB1W,8BAA6B,WACvB,EAAJ,oB,EACE,SAAc,CAAEwR,oBAGb,CACLJ,eADK,EAELwE,YAAae,MAAyBA,S,yBAK3B,SAAAC,G,GACV,EAAL,mB,OAQI,EATyB,gCAM3B3F,EAN2B,eAO3B9C,EAP2B,WAQ3BmE,EAR2B,cAUbuE,EAAiBD,EAVJ,mBAWvBE,EAAN,GACMC,EAAiBP,sBAAvB,O,GACA,EAAkB,C,IACVd,EAAcmB,EADJ,EAKhBC,aACEpB,EAActV,WADhB0W,GAEAA,qBAEAA,e,EAEF,gB,8BAGoB,W,IACZjB,EAAyB,EADP,2B,EAOtB,EAPsB,gCAGxB5E,EAHwB,eAIxBqB,EAJwB,cAKxB0E,EALwB,iBAMxB7I,EANwB,WAYpB4I,EAAiBP,8BAAvB,E,OAGA,EACEtE,EAOE2D,GACCmB,EAAiB1E,EAAclS,WAFlC8R,O,4BAOgB,SAAA+E,G,IACHC,EAA4BD,EADF,kB,EAOrC,EAPqC,gCAKvCpF,EALuC,eAQnCsF,EACJD,GATuC,eASU,EADnD,EACuDrF,GAGpD,EAAD,oBACA,+BAFF,G,EAOA,SACE,CAAEgE,qBAAF,EAAwCrE,aAAc,IACtD,W,MAMM,EANA,gCAGF4F,EAHE,WAIF9E,EAJE,cAKFnE,EALE,WAQE4I,EAAiBP,8BAAvB,E,EAEA,UACE,SAAAa,G,IAIMzB,EAAcyB,EAJJ,YAMRC,EAAiBlX,WAAvB,GACMmX,EAAWR,EAAjB,E,OACInB,EAAJ,IACEA,KAGK,CAAEA,kBAEX,W,EAME,uB,IACMS,EAAoB,EAA1B,gCACAe,c,uBAOK,Y,IAAWI,EAAkC,uDAAvB,GAAIC,EAAmB,uDAAR,I,EAClD,UAAc,SAAA/M,G,MACL,CACLwG,WADK,EAELC,qBAAsBtM,EAAW2S,MAGrC9W,YAAW,W,EACT,SAAc,CACZwQ,WADY,EAEZC,qBAAsB,MAH1BzQ,M,8BAQoB,SAAArC,G,IACZ8P,EAAa,EADQ,yCAGvBuJ,EAAatX,WAAnB,G,MAEO,CAAEuX,KADKnB,sBAAd,GACO,MAAqBnY,MAAOqZ,M,2BAGlB,c,MAKb,EALwC,gCAE1CvJ,EAF0C,WAG1CmE,EAH0C,cAI1CC,EAJ0C,gBAMtCwE,EAAiBP,8BAAvB,EAEI7B,EAAQiD,EAAU,EAAIb,EAA1B,EAD6BzE,EAA7B,IAIEqC,EADwB,G,IAGpBkD,EAAaD,EACf7C,GAAe,EADO,GAEtBD,GAAeH,EAFnB,G,OAGiBF,GAAmBqD,EAApC,M,yBAIe,SAAAF,G,IACPzJ,EAAa,EADK,yCAElByH,EAAgB,EAFE,kBAGpBmC,EAAgB,qBAHI,GAKpBL,EAAatX,WAAnB,G,MAEc,CAAEuX,KADEnB,sBAAlB,GACc,MAAyBnY,MAAOqZ,M,qBAInC,W,EACX,SAAc,CACZvG,qBADY,EAEZwE,eAFY,EAGZzE,WAAW,O,oBAIH,SAAA8G,G,IACF3M,EAAoC2M,EAD1B,OACFzM,EAA4ByM,EAD1B,KACI1M,EAAsB0M,EAD1B,OACYxM,EAAcwM,EAD1B,KACkBpM,EAAQoM,EAD1B,I,EAGlB,UAAc,SAAAtN,G,IACJgL,EAA6ChL,EADhC,YACAkL,EAAgClL,EADhC,YACa0G,EAAmB1G,EADhC,e,EAOjB,EAPiB,gCAGnB4H,EAHmB,cAInBrB,EAJmB,eAKnB9C,EALmB,WAMnB6C,EANmB,QASfkB,EAAa,EATE,sBAYf6E,EAAiBP,8BAAvB,EACMyB,GACFhH,GAAD,SAAiBrF,IAAlB,IACEqF,GAAD,UAAiBrF,GADlB,GAECqF,GAHH,OAGmBrF,EACbsM,GACFjH,GAAD,UAAiBrF,IAAlB,IACEqF,GAAD,SAAiBrF,GADlB,GAECqF,GAHH,SAGmBrF,EAEbuM,EAAkBvM,YAAxB,UAA0CA,EACpCwM,EAAgBxM,UAAtB,SAAsCA,EAChCyM,GAAN,EAEIC,EAAJ,EACMC,EAAyBrG,EAA/B,EACMsG,EAAuB9C,EAA7B,EAEA,EACE,IAEE,EACE4C,EAFgBvB,EAAlB,EAIIrB,EADA+C,EAEAnG,EAFAmG,EADFH,EAKSJ,IACTI,EAAgB5C,IAAhB4C,IAIJ,IAEE,EACEA,EAFgBvB,EAAlB,EAII7E,EADAuG,EAEAnG,EAFAmG,EADFH,EAKSJ,IACTI,EAAgBpG,IAAhBoG,I,KAMHD,GAAD,GACCA,MAAqC9M,EAFxC,MAKG0F,GAAD,GACCA,MAAiCzF,EAFpC,G,MAkBO,CACL2F,qBAVF,EACE,EACyBC,EAAvBD,EAEuBC,EAAvBD,EAGqBC,EAAvBD,EAIAD,WAFK,EAGLyE,eAAe,S,mBAKV,SAAAqC,G,IAMDzM,EAAoByM,EANX,KAMHxM,EAAcwM,EANX,KAMGpM,EAAQoM,EANX,I,EAOoB,EAPpB,MAOTtC,EAPS,cAOIE,EAPJ,c,EAYb,EAZa,gCASf3E,EATe,eAUfD,EAVe,QAWfuB,EAXe,gBAaXL,EAAa,EAAnB,sBAEIvD,EAAO,EAAX,WACM+J,EAA6BxG,EAAnC,EACMyG,EAA2BjD,EAAjC,EACMkD,EAAN,SAAmBhN,EACbiN,EAAN,UAAoBjN,EACdkN,EAAN,OAAiBlN,EACXmN,EAAN,SAAmBnN,EAWfoN,GAAJ,E,IATE/H,IACC6H,GADD7H,IAEAzF,EAHF,IAMGyF,IACA4H,GADD,IAEAtN,EAHF,KAOEyN,MAGF,E,GAIE,EAAkB,C,IAEVC,EAAyB7Y,WAC5BoL,EAAD,GAHc,GAMV0N,EAAqB9Y,WAA3B,GAKM+Y,EAAiBvD,EAAvB,EACMwD,EAAoBxD,EAZV,EAehB,IAEEjH,EAAO,W,OAAM,OAAN,KAET,IAEEA,EAAO,W,OAAM,OAAN,SAEJ,C,IAECsK,EAAyB7Y,WAC5BmL,EAAD,GAHG,GAMC2N,EAAqB9Y,WAA3B,GAKM+Y,EAAiBvD,EAAvB,EACMwD,EAAoBxD,EAZrB,EAeL,GAEE,IAEEjH,EAAO,W,OAAM,OAAN,KAET,IAEEA,EAAO,W,OAAM,OAAN,OAIT,IAEEA,EAAO,W,OAAM,OAAN,KAET,IAEEA,EAAO,W,OAAM,OAAN,M,EAOf,SAAc,CAAEuC,WAAF,EAAoByE,eAAe,IACjDhH,EAAK,CAAE0K,UAAU,O,sBAGL,SAAAC,G,IACJC,EAAgB,EADD,4CAEf3D,EAAgB,EAFD,kBAGjB4D,EAAc,EAApB,iBAEAD,EADoB,sBAApB,GACAA,G,EACA,gB,sBAGY,SAAAD,G,IACJG,EAAgB,EADD,4CAEf7D,EAAgB,EAFD,kBAGjB4D,EAAc,kBAApB,GAEAC,EADoB,sBAApB,GACAA,G,EACA,gB,oBAGU,W,IAACH,EAAiB,uDAAP,GACbD,EAAaC,EADO,S,EAEL,EAFK,gCAEpBI,EAFoB,a,EAGY,EAHZ,MAGpB9D,EAHoB,cAGPxE,EAHO,iBAItB2B,EAAW,sBAAjB,GACI6C,IAAJ,E,EACE,QACS8D,IAAJ,G,EACL,0B,oBAIQ,W,IAACJ,EAAiB,uDAAP,GACbD,EAAaC,EADO,SAEpB1D,EAAgB,EAFI,kB,EAGL,EAHK,gCAGpB8D,EAHoB,aAItB5G,EAAW,sBAAjB,GACI8C,IAAJ,E,EACE,QACS8D,IAAJ,G,EACL,2B,oBAIQ,W,MACsB,EADhB,gCACRC,EADQ,YACGC,EADH,W,EAEoB,EAFpB,MAERhE,EAFQ,cAEKN,EAFL,aAGVkE,EAAc,sBAApB,G,EACA,2BAAgC,EAAhC,W,EACA,SAAc,CAAE7D,eAAe,IAC/BiE,GAAYA,EAASJ,EAArBI,GACAD,EAAUH,EAAVG,M,oBAGU,W,MACsB,EADhB,gCACRE,EADQ,YACGD,EADH,W,EAEoB,EAFpB,MAERhE,EAFQ,cAEKN,EAFL,aAGVkE,EAAc,sBAApB,G,EACA,2BAAgC,EAAhC,W,EACA,SAAc,CAAE7D,eAAe,IAC/BiE,GAAYA,EAASJ,EAArBI,GACAC,EAAUL,EAAVK,M,kCAGwB,kB,OAKrB,SAAAnP,G,IACK0G,EAA6C1G,EADzC,eACYgL,EAA6BhL,EADzC,YACyBkL,EAAgBlL,EADzC,YAENwH,EAAa,EAAnB,sBAGM4H,EAAY7I,EAAeyE,EAAjC,E,UAUEtE,eATE6C,IAAcpD,EAEdO,EAAiB0I,GAAaC,EADhCC,GAIE5I,EAAiB0I,GAAalE,EADhCoE,GAMApE,YAFF,EAGEzE,qBAHF,EAIED,WAAW,GAJb,O,eASK,SAAA6I,G,MAKD,EALe,gCAEjB5L,EAFiB,WAGjB8C,EAHiB,eAIjBqB,EAJiB,cAMXsD,EAAgB,EANL,kBAObmB,EAAiBP,sBAAvB,OACIyD,EAAiB7Z,WARF,GASb8Z,EAAStE,EAAf,E,KAC0B,qBAA1B,KACA,G,CACsBqE,KAAtB,IAMEA,EAAiB7Z,WAAY2W,EAA7BkD,I,IAEEhG,EAAYpD,EACZsJ,EAAgB,EAApB,UACA,IACElG,EAAYpD,EACZsJ,EAAgB,EAAhBA,W,IAEIC,EAAe,gCAInB,CACEzE,eAAe,I,EAGnB,YAA4B,WAE1BnF,EACE,EADE,mBAEF,wBAFFA,W,wBAOY,W,MACoB,EADd,gCACZrC,EADY,WACFmE,EADE,cAEdyE,EAAiBP,sBAAvB,OACM6D,EAAkBja,WAAxB,G,OACmBA,UAAU2W,EAA7B,IACA,K,2BAGiB,W,EACjB,UAAc,SAAArM,G,MACsB,EADb,gCACb4H,EADa,cACAnE,EADA,WAEbyH,EAA4BlL,EAFf,YAEA4K,EAAe5K,EAFf,WAGf2K,EAAa,EAAnB,gBACM0B,EAAiBP,sBAAvB,OACM8D,EAAqBla,WALN,GAOfia,EAAkBja,WAAxB,GACMma,EAAgBna,UAAUwV,EAAhC,GACM4E,EAAyBpa,SAASiV,EAATjV,EAA/B,G,GACIkV,IAAJ,E,MACS,CAAEA,WAAYkF,S,2BAKR,SAAAC,G,IAEXC,EAAYD,EADM,EADQ,4C,EAGhC,SAAc,CAAEnF,WAAYmF,I,EAC5B,W,6DAptBA,sB,KACA,qB,KACA,mB,KACA,a,yCAGiBE,EAAWC,G,MAOxBrc,KAPmC,MAErCsc,EAFqC,iBAGrC1M,EAHqC,WAIrCmE,EAJqC,cAKrCC,EALqC,gBAMrC4D,EANqC,c,EAQO5X,KARP,MAQ/BqX,EAR+B,cAQlBC,EARkB,uBASjC9C,EAAWxU,KAAKuc,iBAAiBlF,GAAvC,GACMmF,EAAwBvE,sBAA9B,OACMwE,EAAqBxE,mBAAiBmE,EAAjBnE,UAXY,O,GAcrCwE,OACAL,gBADAK,GAEAL,kBAFAK,GAGAL,gBAHAK,GAIAnF,IAAyB+E,EAL3B,uB,KAQE,kBAAuB,CAAEvT,YAAa,CAAE3B,MAAOmQ,K,KAC/C,W,KACA,oBAIED,IAAJ,E,KACE,iBACSiF,IAAmBtc,KAAvB,mB,KACL,eACUsc,GAAkBtc,KAAvB,oB,KACL,iBAGEyc,IAAJ,EAAkD,C,IAEjCC,EACX1c,KAH4C,4CAQ3BqX,IADHmF,EAAlB,G,KAIE,KAAU3a,WAAY2a,EAAtB,O,kDAMJ,sB,KACA,iB,KACA,wB,qCAqqBIxc,KAVG,MAEL+W,EAFK,aAGLpE,EAHK,YAILE,EAJK,iBAKLD,EALK,uBAMLsE,EANK,aAOLF,EAPK,QAQLK,EARK,cASLpE,EATK,e,EAkCHjT,KAlCG,gCAYLuP,EAZK,YAaLC,EAbK,QAcLuE,EAdK,cAeLC,EAfK,gBAgBLtB,EAhBK,eAiBLD,EAjBK,QAkBLS,EAlBK,SAmBLC,EAnBK,aAoBLvD,EApBK,WAqBL+M,EArBK,gBAsBL/I,EAtBK,2BAuBLvB,EAvBK,eAwBL6B,EAxBK,cAyBLZ,EAzBK,eA0BLO,EA1BK,cA2BLC,EA3BK,mBA4BL8I,EA5BK,aA6BLC,EA7BK,aA8BLC,EA9BK,qBA+BLlS,EA/BK,+BAgCLmS,EAhCK,cAiCLC,EAjCK,mBAoCDrJ,EAAa3T,KAAnB,sBAEM8W,EAAa9W,KAAnB,gBAGMid,EACJ5F,IAAgBrX,KAAKuc,iBAAiBlF,GADxC,GAEM6F,EACJ7F,IAAgBrX,KAAKuc,iBAAiBlF,GADxC,GAEM8F,GAAqBF,GAA3B,EACMG,GAAqBF,GAA3B,E,OAGE,sBACEzK,MADF,EAEElD,UAAS,UAAKoC,EAAL,gCAFX,GAGEnC,MAAOA,GAEP,sBACED,UAAWoC,EADb,YAEExR,KAAM,CAAEiH,OAAQ8P,IAEhB,qBAAMrG,KAAMgM,GACTE,EACCA,EAAY,CACV7N,KAAMoD,EACNkB,QAASxT,KAFC,YAGVqd,QAASJ,IAGX,sBACEzJ,QAASxT,KADX,YAEE0V,UAAWhD,EAAe+C,GAAH,GAAcA,GAFvC,KAGE6H,SAAUH,KAIhB,sBACE5N,UAAWoC,EADb,oBAEE7M,IAAK9E,KAAKud,OAAO,oBAEjB,sBACE7K,aADF,EAEED,MAFF,EAGES,OAHF,EAIEL,eAJF,EAKED,qBALF,EAMED,UANF,EAOEM,aAPF,EAQEE,WARF,EASE5D,UAAWoC,EATb,UAUE7M,IAAK9E,KAAKud,OAVZ,UAWEjK,aAAcA,GAEd,sBACEZ,aADF,EAEE9C,SAAUqI,mBAFZ,GAGEtE,WAHF,EAIEM,YAJF,EAKEL,yBALF,EAMEG,YANF,EAOEC,cAPF,EAQE3B,aARF,EASE6B,YATF,EAUEL,YAVF,EAWEC,iBAXF,EAYElJ,6BAZF,EAaE6C,SAAUzN,KAbZ,SAcEuN,UAAWvN,KAdb,UAeEmU,YAAawI,EAAgB3c,KAAH,UAAeqL,MAI/C,qBAAMwF,KAAMgM,GACTE,EACCA,EAAY,CACV7N,KAAMoD,EACNkB,QAASxT,KAFC,YAGVqd,QAASH,IAGX,sBACE1J,QAASxT,KADX,YAEE0V,UAAWhD,EAAe+C,GAAH,KAAgBA,GAFzC,MAGE6H,SAAUF,MAKlB,qBAAMvM,KAAM+L,GACTI,EACCA,EAAiB,CACfhG,MADe,EAEfD,WAFe,EAGfvD,QAASxT,KAAKwd,mBAGhB,sBACE1G,WADF,EAEEC,WAFF,EAGEvD,QAASxT,KAAKwd,yB,EAh3BtBvG,CAAiBlH,IAAMuB,WAy3B7B2F,gBAAwB,CACtB1H,UADsB,GAEtBC,MAFsB,GAGtBkD,cAHsB,EAItBD,OAJsB,EAKtBgL,iBALsB,EAMtBC,mBANsB,EAOtBb,YAPsB,EAQtBpE,gBARsB,EAStBqE,oBATsB,EAUtBF,YAVsB,EAWtB1J,OAXsB,OAYtBC,WAZsB,OAatBF,aAbsB,IActBkI,YAdsB,EAetBtH,aAfsB,EAgBtBC,kBAhBsB,EAiBtBlJ,8BAjBsB,EAkBtB+R,eAlBsB,EAmBtB/I,0BAnBsB,EAoBtBG,YApBsB,EAqBtBC,cArBsB,EAsBtB3B,aAAcC,EACd4B,YAAa,CAAC,EAAG,EAAG,EAvBE,GAwBtBZ,aAxBsB,EAyBtBgJ,gBAzBsB,EA0BtB9E,cA1BsB,IA6BtB6D,SA7BsB,EA8BtBD,UA9BsB,EA+BtBE,UA/BsB,EAgCtBN,YAhCsB,EAiCtBE,YAjCsB,EAkCtBrC,SAAUtH,GAGZ0F,aAAqB,CAEnBrH,SAAUO,SAFS,WAKnBZ,UAAWY,IALQ,OAQnBX,MAAOW,IARY,OAWnBuC,aAAcvC,IAXK,KAcnBsC,MAAOtC,IAdY,KAiBnByM,WAAYzM,IAjBO,KAoBnB8C,aAAc9C,IApBK,OAuBnB+C,OAAQ/C,IAvBW,OA0BnBgD,WAAYhD,IA1BO,OA6BnBgL,WAAYhL,IA7BO,KAgCnB4D,YAAa5D,IAhCM,OAmCnB6D,cAAe7D,IAnCI,OAsCnByH,YAAa,YACX,UAAgB,CACdzQ,MAAOgJ,WADO,WAEd4D,YAAa5D,IAFC,OAGd6D,cAAe7D,IAAUM,UAK7BiN,mBAAoBvN,IA/CD,OAkDnBsN,iBAAkBtN,IAlDC,OAqDnB0M,WAAY1M,IArDO,KAwDnBsI,eAAgBtI,IAxDG,KA2DnB2M,mBAAoB3M,IA3DD,KA8DnBwM,cAAexM,IA9DI,KAiEnByD,yBAA0BzD,IAjEP,KAsEnB4M,YAAa5M,IAtEM,KA2EnB6M,iBAAkB7M,IA3EC,KA8EnBkC,aAAclC,UAAgB,CAACmC,EAAcA,EAAeA,IAG5D4B,YAAa/D,IAjFM,MAoFnBmD,aAAcnD,IApFK,OAwFnB0D,YAAa1D,IAxFM,KA2FnB2D,iBAAkB3D,IA3FC,KAiGnBvF,6BAA8BuF,IAjGX,KAqGnBmM,eAAgBnM,IArGG,KAwGnBqH,cAAerH,IAxGI,OA6GnBkL,SAAUlL,IA7GS,KAiHnB6K,YAAa7K,IAjHM,KAqHnB+K,YAAa/K,IArHM,KAyHnBiL,UAAWjL,IAzHQ,KA6HnBmL,UAAWnL,IA7HQ,KAiInB0I,SAAU1I,IAAUC,M","file":"static/js/294.034db87e.chunk.js","sourcesContent":["/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\n/* eslint-disable require-jsdoc, valid-jsdoc */\nvar MapShim = (function () {\n    if (typeof Map !== 'undefined') {\n        return Map;\n    }\n\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\n    function getIndex(arr, key) {\n        var result = -1;\n\n        arr.some(function (entry, index) {\n            if (entry[0] === key) {\n                result = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        return result;\n    }\n\n    return (function () {\n        function anonymous() {\n            this.__entries__ = [];\n        }\n\n        var prototypeAccessors = { size: { configurable: true } };\n\n        /**\r\n         * @returns {boolean}\r\n         */\n        prototypeAccessors.size.get = function () {\n            return this.__entries__.length;\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\n        anonymous.prototype.get = function (key) {\n            var index = getIndex(this.__entries__, key);\n            var entry = this.__entries__[index];\n\n            return entry && entry[1];\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.set = function (key, value) {\n            var index = getIndex(this.__entries__, key);\n\n            if (~index) {\n                this.__entries__[index][1] = value;\n            } else {\n                this.__entries__.push([key, value]);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.delete = function (key) {\n            var entries = this.__entries__;\n            var index = getIndex(entries, key);\n\n            if (~index) {\n                entries.splice(index, 1);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.has = function (key) {\n            return !!~getIndex(this.__entries__, key);\n        };\n\n        /**\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.clear = function () {\n            this.__entries__.splice(0);\n        };\n\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.forEach = function (callback, ctx) {\n            var this$1 = this;\n            if ( ctx === void 0 ) ctx = null;\n\n            for (var i = 0, list = this$1.__entries__; i < list.length; i += 1) {\n                var entry = list[i];\n\n                callback.call(ctx, entry[1], entry[0]);\n            }\n        };\n\n        Object.defineProperties( anonymous.prototype, prototypeAccessors );\n\n        return anonymous;\n    }());\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\nvar global$1 = (function () {\n    if (typeof global !== 'undefined' && global.Math === Math) {\n        return global;\n    }\n\n    if (typeof self !== 'undefined' && self.Math === Math) {\n        return self;\n    }\n\n    if (typeof window !== 'undefined' && window.Math === Math) {\n        return window;\n    }\n\n    // eslint-disable-next-line no-new-func\n    return Function('return this')();\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\nvar requestAnimationFrame$1 = (function () {\n    if (typeof requestAnimationFrame === 'function') {\n        // It's required to use a bounded function because IE sometimes throws\n        // an \"Invalid calling object\" error if rAF is invoked without the global\n        // object on the left hand side.\n        return requestAnimationFrame.bind(global$1);\n    }\n\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\n})();\n\n// Defines minimum timeout before adding a trailing call.\nvar trailingTimeout = 2;\n\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\nvar throttle = function (callback, delay) {\n    var leadingCall = false,\n        trailingCall = false,\n        lastCallTime = 0;\n\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\n    function resolvePending() {\n        if (leadingCall) {\n            leadingCall = false;\n\n            callback();\n        }\n\n        if (trailingCall) {\n            proxy();\n        }\n    }\n\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\n    function timeoutCallback() {\n        requestAnimationFrame$1(resolvePending);\n    }\n\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\n    function proxy() {\n        var timeStamp = Date.now();\n\n        if (leadingCall) {\n            // Reject immediately following calls.\n            if (timeStamp - lastCallTime < trailingTimeout) {\n                return;\n            }\n\n            // Schedule new call to be in invoked when the pending one is resolved.\n            // This is important for \"transitions\" which never actually start\n            // immediately so there is a chance that we might miss one if change\n            // happens amids the pending invocation.\n            trailingCall = true;\n        } else {\n            leadingCall = true;\n            trailingCall = false;\n\n            setTimeout(timeoutCallback, delay);\n        }\n\n        lastCallTime = timeStamp;\n    }\n\n    return proxy;\n};\n\n// Minimum delay before invoking the update of observers.\nvar REFRESH_DELAY = 20;\n\n// A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\n\n// Check if MutationObserver is available.\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\nvar ResizeObserverController = function() {\n    this.connected_ = false;\n    this.mutationEventsAdded_ = false;\n    this.mutationsObserver_ = null;\n    this.observers_ = [];\n\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n};\n\n/**\r\n * Adds observer to observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be added.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Holds reference to the controller's instance.\r\n *\r\n * @private {ResizeObserverController}\r\n */\n\n\n/**\r\n * Keeps reference to the instance of MutationObserver.\r\n *\r\n * @private {MutationObserver}\r\n */\n\n/**\r\n * Indicates whether DOM listeners have been added.\r\n *\r\n * @private {boolean}\r\n */\nResizeObserverController.prototype.addObserver = function (observer) {\n    if (!~this.observers_.indexOf(observer)) {\n        this.observers_.push(observer);\n    }\n\n    // Add listeners if they haven't been added yet.\n    if (!this.connected_) {\n        this.connect_();\n    }\n};\n\n/**\r\n * Removes observer from observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.removeObserver = function (observer) {\n    var observers = this.observers_;\n    var index = observers.indexOf(observer);\n\n    // Remove observer if it's present in registry.\n    if (~index) {\n        observers.splice(index, 1);\n    }\n\n    // Remove listeners if controller has no connected observers.\n    if (!observers.length && this.connected_) {\n        this.disconnect_();\n    }\n};\n\n/**\r\n * Invokes the update of observers. It will continue running updates insofar\r\n * it detects changes.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.refresh = function () {\n    var changesDetected = this.updateObservers_();\n\n    // Continue running updates if changes have been detected as there might\n    // be future ones caused by CSS transitions.\n    if (changesDetected) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Updates every observer from observers list and notifies them of queued\r\n * entries.\r\n *\r\n * @private\r\n * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n *  dimensions of it's elements.\r\n */\nResizeObserverController.prototype.updateObservers_ = function () {\n    // Collect observers that have active observations.\n    var activeObservers = this.observers_.filter(function (observer) {\n        return observer.gatherActive(), observer.hasActive();\n    });\n\n    // Deliver notifications in a separate cycle in order to avoid any\n    // collisions between observers, e.g. when multiple instances of\n    // ResizeObserver are tracking the same element and the callback of one\n    // of them changes content dimensions of the observed target. Sometimes\n    // this may result in notifications being blocked for the rest of observers.\n    activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\n\n    return activeObservers.length > 0;\n};\n\n/**\r\n * Initializes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.connect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already added.\n    if (!isBrowser || this.connected_) {\n        return;\n    }\n\n    // Subscription to the \"Transitionend\" event is used as a workaround for\n    // delayed transitions. This way it's possible to capture at least the\n    // final state of an element.\n    document.addEventListener('transitionend', this.onTransitionEnd_);\n\n    window.addEventListener('resize', this.refresh);\n\n    if (mutationObserverSupported) {\n        this.mutationsObserver_ = new MutationObserver(this.refresh);\n\n        this.mutationsObserver_.observe(document, {\n            attributes: true,\n            childList: true,\n            characterData: true,\n            subtree: true\n        });\n    } else {\n        document.addEventListener('DOMSubtreeModified', this.refresh);\n\n        this.mutationEventsAdded_ = true;\n    }\n\n    this.connected_ = true;\n};\n\n/**\r\n * Removes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.disconnect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already removed.\n    if (!isBrowser || !this.connected_) {\n        return;\n    }\n\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\n    window.removeEventListener('resize', this.refresh);\n\n    if (this.mutationsObserver_) {\n        this.mutationsObserver_.disconnect();\n    }\n\n    if (this.mutationEventsAdded_) {\n        document.removeEventListener('DOMSubtreeModified', this.refresh);\n    }\n\n    this.mutationsObserver_ = null;\n    this.mutationEventsAdded_ = false;\n    this.connected_ = false;\n};\n\n/**\r\n * \"Transitionend\" event handler.\r\n *\r\n * @private\r\n * @param {TransitionEvent} event\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.onTransitionEnd_ = function (ref) {\n        var propertyName = ref.propertyName; if ( propertyName === void 0 ) propertyName = '';\n\n    // Detect whether transition may affect dimensions of an element.\n    var isReflowProperty = transitionKeys.some(function (key) {\n        return !!~propertyName.indexOf(key);\n    });\n\n    if (isReflowProperty) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Returns instance of the ResizeObserverController.\r\n *\r\n * @returns {ResizeObserverController}\r\n */\nResizeObserverController.getInstance = function () {\n    if (!this.instance_) {\n        this.instance_ = new ResizeObserverController();\n    }\n\n    return this.instance_;\n};\n\nResizeObserverController.instance_ = null;\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\nvar defineConfigurable = (function (target, props) {\n    for (var i = 0, list = Object.keys(props); i < list.length; i += 1) {\n        var key = list[i];\n\n        Object.defineProperty(target, key, {\n            value: props[key],\n            enumerable: false,\n            writable: false,\n            configurable: true\n        });\n    }\n\n    return target;\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\nvar getWindowOf = (function (target) {\n    // Assume that the element is an instance of Node, which means that it\n    // has the \"ownerDocument\" property from which we can retrieve a\n    // corresponding global object.\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\n\n    // Return the local global object if it's not possible extract one from\n    // provided element.\n    return ownerGlobal || global$1;\n});\n\n// Placeholder of an empty content rectangle.\nvar emptyRect = createRectInit(0, 0, 0, 0);\n\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\nfunction toFloat(value) {\n    return parseFloat(value) || 0;\n}\n\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\nfunction getBordersSize(styles) {\n    var positions = [], len = arguments.length - 1;\n    while ( len-- > 0 ) positions[ len ] = arguments[ len + 1 ];\n\n    return positions.reduce(function (size, position) {\n        var value = styles['border-' + position + '-width'];\n\n        return size + toFloat(value);\n    }, 0);\n}\n\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\nfunction getPaddings(styles) {\n    var positions = ['top', 'right', 'bottom', 'left'];\n    var paddings = {};\n\n    for (var i = 0, list = positions; i < list.length; i += 1) {\n        var position = list[i];\n\n        var value = styles['padding-' + position];\n\n        paddings[position] = toFloat(value);\n    }\n\n    return paddings;\n}\n\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getSVGContentRect(target) {\n    var bbox = target.getBBox();\n\n    return createRectInit(0, 0, bbox.width, bbox.height);\n}\n\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\nfunction getHTMLElementContentRect(target) {\n    // Client width & height properties can't be\n    // used exclusively as they provide rounded values.\n    var clientWidth = target.clientWidth;\n    var clientHeight = target.clientHeight;\n\n    // By this condition we can catch all non-replaced inline, hidden and\n    // detached elements. Though elements with width & height properties less\n    // than 0.5 will be discarded as well.\n    //\n    // Without it we would need to implement separate methods for each of\n    // those cases and it's not possible to perform a precise and performance\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n    // gives wrong results for elements with width & height less than 0.5.\n    if (!clientWidth && !clientHeight) {\n        return emptyRect;\n    }\n\n    var styles = getWindowOf(target).getComputedStyle(target);\n    var paddings = getPaddings(styles);\n    var horizPad = paddings.left + paddings.right;\n    var vertPad = paddings.top + paddings.bottom;\n\n    // Computed styles of width & height are being used because they are the\n    // only dimensions available to JS that contain non-rounded values. It could\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\n    var width = toFloat(styles.width),\n        height = toFloat(styles.height);\n\n    // Width & height include paddings and borders when the 'border-box' box\n    // model is applied (except for IE).\n    if (styles.boxSizing === 'border-box') {\n        // Following conditions are required to handle Internet Explorer which\n        // doesn't include paddings and borders to computed CSS dimensions.\n        //\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\n        // properties then it's either IE, and thus we don't need to subtract\n        // anything, or an element merely doesn't have paddings/borders styles.\n        if (Math.round(width + horizPad) !== clientWidth) {\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\n        }\n\n        if (Math.round(height + vertPad) !== clientHeight) {\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n        }\n    }\n\n    // Following steps can't be applied to the document's root element as its\n    // client[Width/Height] properties represent viewport area of the window.\n    // Besides, it's as well not necessary as the <html> itself neither has\n    // rendered scroll bars nor it can be clipped.\n    if (!isDocumentElement(target)) {\n        // In some browsers (only in Firefox, actually) CSS width & height\n        // include scroll bars size which can be removed at this step as scroll\n        // bars are the only difference between rounded dimensions + paddings\n        // and \"client\" properties, though that is not always true in Chrome.\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\n\n        // Chrome has a rather weird rounding of \"client\" properties.\n        // E.g. for an element with content width of 314.2px it sometimes gives\n        // the client width of 315px and for the width of 314.7px it may give\n        // 314px. And it doesn't happen all the time. So just ignore this delta\n        // as a non-relevant.\n        if (Math.abs(vertScrollbar) !== 1) {\n            width -= vertScrollbar;\n        }\n\n        if (Math.abs(horizScrollbar) !== 1) {\n            height -= horizScrollbar;\n        }\n    }\n\n    return createRectInit(paddings.left, paddings.top, width, height);\n}\n\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nvar isSVGGraphicsElement = (function () {\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n    // interface.\n    if (typeof SVGGraphicsElement !== 'undefined') {\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\n    }\n\n    // If it's so, then check that element is at least an instance of the\n    // SVGElement and that it has the \"getBBox\" method.\n    // eslint-disable-next-line no-extra-parens\n    return function (target) { return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function'; };\n})();\n\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nfunction isDocumentElement(target) {\n    return target === getWindowOf(target).document.documentElement;\n}\n\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getContentRect(target) {\n    if (!isBrowser) {\n        return emptyRect;\n    }\n\n    if (isSVGGraphicsElement(target)) {\n        return getSVGContentRect(target);\n    }\n\n    return getHTMLElementContentRect(target);\n}\n\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\nfunction createReadOnlyRect(ref) {\n    var x = ref.x;\n    var y = ref.y;\n    var width = ref.width;\n    var height = ref.height;\n\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n    var rect = Object.create(Constr.prototype);\n\n    // Rectangle's properties are not writable and non-enumerable.\n    defineConfigurable(rect, {\n        x: x, y: y, width: width, height: height,\n        top: y,\n        right: x + width,\n        bottom: height + y,\n        left: x\n    });\n\n    return rect;\n}\n\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\nfunction createRectInit(x, y, width, height) {\n    return { x: x, y: y, width: width, height: height };\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\nvar ResizeObservation = function(target) {\n    this.broadcastWidth = 0;\n    this.broadcastHeight = 0;\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n\n    this.target = target;\n};\n\n/**\r\n * Updates content rectangle and tells whether it's width or height properties\r\n * have changed since the last broadcast.\r\n *\r\n * @returns {boolean}\r\n */\n\n\n/**\r\n * Reference to the last observed content rectangle.\r\n *\r\n * @private {DOMRectInit}\r\n */\n\n\n/**\r\n * Broadcasted width of content rectangle.\r\n *\r\n * @type {number}\r\n */\nResizeObservation.prototype.isActive = function () {\n    var rect = getContentRect(this.target);\n\n    this.contentRect_ = rect;\n\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n};\n\n/**\r\n * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n * from the corresponding properties of the last observed content rectangle.\r\n *\r\n * @returns {DOMRectInit} Last observed content rectangle.\r\n */\nResizeObservation.prototype.broadcastRect = function () {\n    var rect = this.contentRect_;\n\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n\n    return rect;\n};\n\nvar ResizeObserverEntry = function(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit);\n\n    // According to the specification following properties are not writable\n    // and are also not enumerable in the native implementation.\n    //\n    // Property accessors are not being used as they'd require to define a\n    // private WeakMap storage which may cause memory leaks in browsers that\n    // don't support this type of collections.\n    defineConfigurable(this, { target: target, contentRect: contentRect });\n};\n\nvar ResizeObserverSPI = function(callback, controller, callbackCtx) {\n    this.activeObservations_ = [];\n    this.observations_ = new MapShim();\n\n    if (typeof callback !== 'function') {\n        throw new TypeError('The callback provided as parameter 1 is not a function.');\n    }\n\n    this.callback_ = callback;\n    this.controller_ = controller;\n    this.callbackCtx_ = callbackCtx;\n};\n\n/**\r\n * Starts observing provided element.\r\n *\r\n * @param {Element} target - Element to be observed.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Registry of the ResizeObservation instances.\r\n *\r\n * @private {Map<Element, ResizeObservation>}\r\n */\n\n\n/**\r\n * Public ResizeObserver instance which will be passed to the callback\r\n * function and used as a value of it's \"this\" binding.\r\n *\r\n * @private {ResizeObserver}\r\n */\n\n/**\r\n * Collection of resize observations that have detected changes in dimensions\r\n * of elements.\r\n *\r\n * @private {Array<ResizeObservation>}\r\n */\nResizeObserverSPI.prototype.observe = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is already being observed.\n    if (observations.has(target)) {\n        return;\n    }\n\n    observations.set(target, new ResizeObservation(target));\n\n    this.controller_.addObserver(this);\n\n    // Force the update of observations.\n    this.controller_.refresh();\n};\n\n/**\r\n * Stops observing provided element.\r\n *\r\n * @param {Element} target - Element to stop observing.\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.unobserve = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is not being observed.\n    if (!observations.has(target)) {\n        return;\n    }\n\n    observations.delete(target);\n\n    if (!observations.size) {\n        this.controller_.removeObserver(this);\n    }\n};\n\n/**\r\n * Stops observing all elements.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.disconnect = function () {\n    this.clearActive();\n    this.observations_.clear();\n    this.controller_.removeObserver(this);\n};\n\n/**\r\n * Collects observation instances the associated element of which has changed\r\n * it's content rectangle.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.gatherActive = function () {\n        var this$1 = this;\n\n    this.clearActive();\n\n    this.observations_.forEach(function (observation) {\n        if (observation.isActive()) {\n            this$1.activeObservations_.push(observation);\n        }\n    });\n};\n\n/**\r\n * Invokes initial callback function with a list of ResizeObserverEntry\r\n * instances collected from active resize observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.broadcastActive = function () {\n    // Do nothing if observer doesn't have active observations.\n    if (!this.hasActive()) {\n        return;\n    }\n\n    var ctx = this.callbackCtx_;\n\n    // Create ResizeObserverEntry instance for every active observation.\n    var entries = this.activeObservations_.map(function (observation) {\n        return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n    });\n\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n};\n\n/**\r\n * Clears the collection of active observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.clearActive = function () {\n    this.activeObservations_.splice(0);\n};\n\n/**\r\n * Tells whether observer has active observations.\r\n *\r\n * @returns {boolean}\r\n */\nResizeObserverSPI.prototype.hasActive = function () {\n    return this.activeObservations_.length > 0;\n};\n\n// Registry of internal observers. If WeakMap is not available use current shim\n// for the Map collection as it has all required methods and because WeakMap\n// can't be fully polyfilled anyway.\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\n\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\nvar ResizeObserver = function(callback) {\n    if (!(this instanceof ResizeObserver)) {\n        throw new TypeError('Cannot call a class as a function.');\n    }\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    var controller = ResizeObserverController.getInstance();\n    var observer = new ResizeObserverSPI(callback, controller, this);\n\n    observers.set(this, observer);\n};\n\n// Expose public methods of ResizeObserver.\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n    ResizeObserver.prototype[method] = function () {\n        return (ref = observers.get(this))[method].apply(ref, arguments);\n        var ref;\n    };\n});\n\nvar index = (function () {\n    // Export existing implementation if available.\n    if (typeof global$1.ResizeObserver !== 'undefined') {\n        return global$1.ResizeObserver;\n    }\n\n    return ResizeObserver;\n})();\n\nexport default index;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar defaultProps = {\n  preventDefaultTouchmoveEvent: false,\n  delta: 10,\n  rotationAngle: 0,\n  trackMouse: false,\n  trackTouch: true\n};\nvar initialState = {\n  xy: [0, 0],\n  swiping: false,\n  eventData: undefined,\n  start: undefined\n};\nvar LEFT = 'Left';\nvar RIGHT = 'Right';\nvar UP = 'Up';\nvar DOWN = 'Down';\nvar touchStart = 'touchstart';\nvar touchMove = 'touchmove';\nvar touchEnd = 'touchend';\nvar mouseMove = 'mousemove';\nvar mouseUp = 'mouseup';\n\nfunction getDirection(absX, absY, deltaX, deltaY) {\n  if (absX > absY) {\n    if (deltaX > 0) {\n      return LEFT;\n    }\n\n    return RIGHT;\n  } else if (deltaY > 0) {\n    return UP;\n  }\n\n  return DOWN;\n}\n\nfunction rotateXYByAngle(pos, angle) {\n  if (angle === 0) return pos;\n  var angleInRadians = Math.PI / 180 * angle;\n  var x = pos[0] * Math.cos(angleInRadians) + pos[1] * Math.sin(angleInRadians);\n  var y = pos[1] * Math.cos(angleInRadians) - pos[0] * Math.sin(angleInRadians);\n  return [x, y];\n}\n\nfunction getHandlers(set, handlerProps) {\n  var onStart = function onStart(event) {\n    // if more than a single touch don't track, for now...\n    if (event.touches && event.touches.length > 1) return;\n    set(function (state, props) {\n      // setup mouse listeners on document to track swipe since swipe can leave container\n      if (props.trackMouse) {\n        document.addEventListener(mouseMove, onMove);\n        document.addEventListener(mouseUp, onUp);\n      }\n\n      var _ref = event.touches ? event.touches[0] : event,\n          clientX = _ref.clientX,\n          clientY = _ref.clientY;\n\n      var xy = rotateXYByAngle([clientX, clientY], props.rotationAngle);\n      return _extends({}, state, initialState, {\n        eventData: {\n          initial: [].concat(xy),\n          first: true\n        },\n        xy: xy,\n        start: event.timeStamp || 0\n      });\n    });\n  };\n\n  var onMove = function onMove(event) {\n    set(function (state, props) {\n      if (!state.xy[0] || !state.xy[1] || event.touches && event.touches.length > 1) {\n        return state;\n      }\n\n      var _ref2 = event.touches ? event.touches[0] : event,\n          clientX = _ref2.clientX,\n          clientY = _ref2.clientY;\n\n      var _rotateXYByAngle = rotateXYByAngle([clientX, clientY], props.rotationAngle),\n          x = _rotateXYByAngle[0],\n          y = _rotateXYByAngle[1];\n\n      var deltaX = state.xy[0] - x;\n      var deltaY = state.xy[1] - y;\n      var absX = Math.abs(deltaX);\n      var absY = Math.abs(deltaY);\n      var time = (event.timeStamp || 0) - state.start;\n      var velocity = Math.sqrt(absX * absX + absY * absY) / (time || 1); // if swipe is under delta and we have not started to track a swipe: skip update\n\n      if (absX < props.delta && absY < props.delta && !state.swiping) return state;\n      var dir = getDirection(absX, absY, deltaX, deltaY);\n\n      var eventData = _extends({}, state.eventData, {\n        event: event,\n        absX: absX,\n        absY: absY,\n        deltaX: deltaX,\n        deltaY: deltaY,\n        velocity: velocity,\n        dir: dir\n      });\n\n      props.onSwiping && props.onSwiping(eventData); // track if a swipe is cancelable(handler for swiping or swiped(dir) exists)\n      // so we can call preventDefault if needed\n\n      var cancelablePageSwipe = false;\n\n      if (props.onSwiping || props.onSwiped || props[\"onSwiped\" + dir]) {\n        cancelablePageSwipe = true;\n      }\n\n      if (cancelablePageSwipe && props.preventDefaultTouchmoveEvent && props.trackTouch && event.cancelable) event.preventDefault(); // first is now always false\n\n      return _extends({}, state, {\n        eventData: _extends({}, eventData, {\n          first: false\n        }),\n        swiping: true\n      });\n    });\n  };\n\n  var onEnd = function onEnd(event) {\n    set(function (state, props) {\n      var eventData;\n\n      if (state.swiping) {\n        eventData = _extends({}, state.eventData, {\n          event: event\n        });\n        props.onSwiped && props.onSwiped(eventData);\n        props[\"onSwiped\" + eventData.dir] && props[\"onSwiped\" + eventData.dir](eventData);\n      }\n\n      return _extends({}, state, initialState, {\n        eventData: eventData\n      });\n    });\n  };\n\n  var cleanUpMouse = function cleanUpMouse() {\n    // safe to just call removeEventListener\n    document.removeEventListener(mouseMove, onMove);\n    document.removeEventListener(mouseUp, onUp);\n  };\n\n  var onUp = function onUp(e) {\n    cleanUpMouse();\n    onEnd(e);\n  };\n\n  var attachTouch = function attachTouch(el) {\n    if (el && el.addEventListener) {\n      // attach touch event listeners and handlers\n      var tls = [[touchStart, onStart], [touchMove, onMove], [touchEnd, onEnd]];\n      tls.forEach(function (_ref3) {\n        var e = _ref3[0],\n            h = _ref3[1];\n        return el.addEventListener(e, h);\n      }); // return properly scoped cleanup method for removing listeners\n\n      return function () {\n        return tls.forEach(function (_ref4) {\n          var e = _ref4[0],\n              h = _ref4[1];\n          return el.removeEventListener(e, h);\n        });\n      };\n    }\n  };\n\n  var onRef = function onRef(el) {\n    // \"inline\" ref functions are called twice on render, once with null then again with DOM element\n    // ignore null here\n    if (el === null) return;\n    set(function (state, props) {\n      // if the same DOM el as previous just return state\n      if (state.el === el) return state;\n      var addState = {}; // if new DOM el clean up old DOM and reset cleanUpTouch\n\n      if (state.el && state.el !== el && state.cleanUpTouch) {\n        state.cleanUpTouch();\n        addState.cleanUpTouch = null;\n      } // only attach if we want to track touch\n\n\n      if (props.trackTouch && el) {\n        addState.cleanUpTouch = attachTouch(el);\n      } // store event attached DOM el for comparison, clean up, and re-attachment\n\n\n      return _extends({}, state, {\n        el: el\n      }, addState);\n    });\n  }; // set ref callback to attach touch event listeners\n\n\n  var output = {\n    ref: onRef // if track mouse attach mouse down listener\n\n  };\n\n  if (handlerProps.trackMouse) {\n    output.onMouseDown = onStart;\n  }\n\n  return [output, attachTouch];\n}\n\nfunction updateTransientState(state, props, attachTouch) {\n  var addState = {}; // clean up touch handlers if no longer tracking touches\n\n  if (!props.trackTouch && state.cleanUpTouch) {\n    state.cleanUpTouch();\n    addState.cleanUpTouch = null;\n  } else if (props.trackTouch && !state.cleanUpTouch) {\n    // attach/re-attach touch handlers\n    if (state.el) {\n      addState.cleanUpTouch = attachTouch(state.el);\n    }\n  }\n\n  return _extends({}, state, addState);\n}\n\nfunction useSwipeable(props) {\n  var trackMouse = props.trackMouse;\n  var transientState = React.useRef(_extends({}, initialState, {\n    type: 'hook'\n  }));\n  var transientProps = React.useRef();\n  transientProps.current = _extends({}, defaultProps, props);\n\n  var _React$useMemo = React.useMemo(function () {\n    return getHandlers(function (cb) {\n      return transientState.current = cb(transientState.current, transientProps.current);\n    }, {\n      trackMouse: trackMouse\n    });\n  }, [trackMouse]),\n      handlers = _React$useMemo[0],\n      attachTouch = _React$useMemo[1];\n\n  transientState.current = updateTransientState(transientState.current, transientProps.current, attachTouch);\n  return handlers;\n}\nvar Swipeable =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inheritsLoose(Swipeable, _React$PureComponent);\n\n  function Swipeable(props) {\n    var _this;\n\n    _this = _React$PureComponent.call(this, props) || this;\n\n    _this._set = function (cb) {\n      _this.transientState = cb(_this.transientState, _this.props);\n    };\n\n    _this.transientState = _extends({}, initialState, {\n      type: 'class'\n    });\n    return _this;\n  }\n\n  var _proto = Swipeable.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        style = _this$props.style,\n        _this$props$nodeName = _this$props.nodeName,\n        nodeName = _this$props$nodeName === void 0 ? 'div' : _this$props$nodeName,\n        innerRef = _this$props.innerRef,\n        children = _this$props.children,\n        trackMouse = _this$props.trackMouse;\n\n    var _getHandlers = getHandlers(this._set, {\n      trackMouse: trackMouse\n    }),\n        handlers = _getHandlers[0],\n        attachTouch = _getHandlers[1];\n\n    this.transientState = updateTransientState(this.transientState, this.props, attachTouch);\n    var ref = innerRef ? function (el) {\n      return innerRef(el), handlers.ref(el);\n    } : handlers.ref;\n    return React.createElement(nodeName, _extends({}, handlers, {\n      className: className,\n      style: style,\n      ref: ref\n    }), children);\n  };\n\n  return Swipeable;\n}(React.PureComponent);\nSwipeable.propTypes = {\n  onSwiped: PropTypes.func,\n  onSwiping: PropTypes.func,\n  onSwipedUp: PropTypes.func,\n  onSwipedRight: PropTypes.func,\n  onSwipedDown: PropTypes.func,\n  onSwipedLeft: PropTypes.func,\n  delta: PropTypes.number,\n  preventDefaultTouchmoveEvent: PropTypes.bool,\n  nodeName: PropTypes.string,\n  trackMouse: PropTypes.bool,\n  trackTouch: PropTypes.bool,\n  innerRef: PropTypes.func,\n  rotationAngle: PropTypes.number\n};\nSwipeable.defaultProps = defaultProps;\n\nexport { DOWN, LEFT, RIGHT, Swipeable, UP, useSwipeable };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Only extends Component {\n\n  static defaultProps = {\n    hiddenMode: \"withNull\",\n    className: \"r-o_hidden\"\n  }\n\n  static propTypes = {\n    /** A single child element */\n    children: PropTypes.element.isRequired,\n\n    /** When true, children will rendered as is  */\n    when: PropTypes.bool.isRequired,\n\n    /** Determines how \"react-only-when\" should hide the child element \n     * \"withNull\": Will not render the child\n     * \"withDisplay\": Will render the child with display:none  \n     * \"withVisibility\": Will render the child with visibility:hidden\n     * \"withCss\": Will render the child with a CSS class (you can pass it a custom className prop)\n    */\n    hiddenMode: PropTypes.oneOf([\n      \"withNull\",\n      \"withDisplay\",\n      \"withVisibility\",\n      \"withCss\"\n    ]),\n    /** This is working in combination with hiddenMode={\"withCss\"}   */\n    className: PropTypes.string\n  }\n\n  render() {\n    const { children, when, hiddenMode, className } = this.props;\n    const singleChild = React.Children.only(children);\n    const { style, ...restOfChildProps } = singleChild.props;\n    const extendedProps = { ...restOfChildProps };\n\n    const keepNode = hiddenMode && hiddenMode !== \"withNull\";\n\n    if (keepNode) {\n      if (hiddenMode === \"withCss\") {\n        extendedProps.className = `${extendedProps.className} ${className}`;\n      } else {\n        extendedProps.style = {\n          ...style,\n          ...(hiddenMode === \"withDisplay\" && { display: \"none\" }),\n          ...(hiddenMode === \"withVisibility\" && { visibility: \"hidden\" })\n        };\n      }\n    }\n    const cloned = React.cloneElement(singleChild, extendedProps);\n    const toHide = keepNode ? cloned : null;\n\n    return when ? singleChild : toHide;\n  }\n}\n\nexport default Only;\n","export const noop = () => {};\n\nexport const numberToArray = n => [...Array(n).keys()];\n\nexport const cssPrefix = (...classNames) => {\n  const prefix = \"rec\";\n  const space = \" \";\n  let result = `${prefix}`; // initial it with global prefix;\n\n  // in case of an array we add the class prefix per item;\n  const chainedClasses = classNames.reduce((acc, current) => {\n    if (current) {\n      acc += `${space}${prefix}-${current}`; // we must keep spaces between class names\n    }\n    return acc;\n  }, \"\");\n  result += chainedClasses;\n\n  return result;\n};\n\nexport const pipe = (...fns) => x => fns.reduce((v, f) => f(v), x);\n\nexport const throttle = (func, limit) => {\n  let lastFunc;\n  let lastRan;\n  return function() {\n    const context = this;\n    const args = arguments;\n    if (!lastRan) {\n      func.apply(context, args);\n      lastRan = Date.now();\n    } else {\n      clearTimeout(lastFunc);\n      lastFunc = setTimeout(function() {\n        if (Date.now() - lastRan >= limit) {\n          func.apply(context, args);\n          lastRan = Date.now();\n        }\n      }, limit - (Date.now() - lastRan));\n    }\n  };\n};\n","import styled from \"styled-components\";\n\nexport default styled.button.attrs(({ type = \"button\" }) => ({ type }))`\n  box-sizing: border-box;\n  transition: all 0.3s ease;\n  font-size: 1.6em;\n  background-color: rgba(103, 58, 183, 0.1);\n  color: ${props => (props.disabled ? \"#999\" : \"#333\")};\n  box-shadow: 0 0 2px 0px #333;\n  border-radius: 50%;\n  border: none;\n  padding: 0;\n  width: 50px;\n  height: 50px;\n  min-width: 50px;\n  line-height: 50px;\n  align-self: center;\n  cursor: pointer;\n  outline: none;\n  &:hover:enabled,\n  &:focus:enabled {\n    color: #fff;\n    background-color: rgba(103, 58, 183, 1);\n    box-shadow: 0 0 2px 0 #333;\n  }\n  &:disabled {\n    cursor: not-allowed;\n  }\n`;\n","export default {\n  PREV: \"PREV\",\n  NEXT: \"NEXT\",\n  START: \"flex-start\",\n  CENTER: \"center\",\n  END: \"flex-end\"\n};\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { cssPrefix } from \"../../utils/helpers\";\nimport consts from \"../../consts\";\n\nconst ItemWrapper = styled.div.attrs(({ style }) => ({\n  style,\n  className: cssPrefix(\"item-wrapper\")\n}))`\n  box-sizing: border-box;\n  display: flex;\n  overflow: hidden;\n  user-select: none;\n  justify-content: ${({ itemPosition }) => itemPosition};\n`;\n\nItemWrapper.defaultProps = {\n  style: {},\n  itemPosition: consts.CENTER\n};\n\nItemWrapper.propTypes = {\n  children: PropTypes.element.isRequired,\n  style: PropTypes.object,\n  itemPosition: PropTypes.oneOf([consts.START, consts.CENTER, consts.END])\n};\n\nexport default ItemWrapper;\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  overflow: hidden;\n  position: relative;\n  width: 100%;\n  margin: 0 10px;\n`;\n","import styled from \"styled-components\";\n\nconst calcLeft = ({\n  isRTL,\n  verticalMode,\n  isSwiping,\n  swipedSliderPosition,\n  sliderPosition\n}) => {\n  if (verticalMode || isRTL) {\n    return \"auto\";\n  } else {\n    return `${isSwiping ? swipedSliderPosition : sliderPosition}px`;\n  }\n};\n\nconst calcRight = ({\n  isRTL,\n  verticalMode,\n  isSwiping,\n  swipedSliderPosition,\n  sliderPosition\n}) => {\n  if (!verticalMode && isRTL) {\n    return `${isSwiping ? swipedSliderPosition : sliderPosition}px`;\n  } else {\n    return \"auto\";\n  }\n};\n\nconst calcTop = ({\n  verticalMode,\n  isSwiping,\n  swipedSliderPosition,\n  sliderPosition\n}) => {\n  if (!verticalMode) {\n    return \"auto\";\n  } else {\n    return `${isSwiping ? swipedSliderPosition : sliderPosition}px`;\n  }\n};\n\nconst calcTransition = ({ isSwiping, transitionMs, easing, tiltEasing }) => {\n  const duration = isSwiping ? 0 : transitionMs;\n  const effectiveEasing = isSwiping ? tiltEasing : easing;\n  return `all ${duration}ms ${effectiveEasing}`;\n};\n\n// We use attributes (style) to bypass multiple creation of classes (dynamic styling)\nexport default styled.div.attrs(props => ({\n  style: {\n    transition: calcTransition(props),\n    left: calcLeft(props),\n    right: calcRight(props),\n    top: calcTop(props)\n  }\n}))`\n  position: absolute;\n  display: flex;\n  flex-direction: ${({ verticalMode }) => (verticalMode ? \"column\" : \"row\")};\n  ${({ verticalMode }) => (verticalMode ? \"min-height: 100%;\" : \"\")};\n  ${({ verticalMode, outerSpacing }) =>\n    verticalMode ? \"\" : `margin: 0 ${outerSpacing}px;`};\n`;\n","import styled from \"styled-components\";\n\nexport default styled.div.attrs(props => ({\n  style: {\n    height: props.size.height\n  }\n}))`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n`;\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  direction: ${({ isRTL }) => (isRTL ? \"rtl\" : \"ltr\")};\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ItemWrapper } from \"./styled\";\nimport { noop } from \"../utils/helpers\";\n\nclass ItemWrapperContainer extends React.Component {\n  onClick = () => {\n    const { onClick, id } = this.props;\n    onClick(id);\n  };\n  render() {\n    return <ItemWrapper {...this.props} onClick={this.onClick} />;\n  }\n}\n\nItemWrapperContainer.defaultProps = {\n  onClick: noop\n};\n\nItemWrapperContainer.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onClick: PropTypes.func\n};\n\nexport default ItemWrapperContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Swipeable } from \"react-swipeable\";\nimport { cssPrefix } from \"../utils/helpers\";\nimport ItemWrapperContainer from \"./ItemWrapperContainer\";\n\nconst Track = ({\n  children,\n  childWidth,\n  autoTabIndexVisibleItems,\n  enableSwipe,\n  enableMouseSwipe,\n  preventDefaultTouchmoveEvent,\n  itemsToShow,\n  itemsToScroll,\n  currentItem,\n  itemPosition,\n  itemPadding,\n  onSwiped,\n  onSwiping,\n  verticalMode,\n  onItemClick\n}) => {\n  const width = `${childWidth}px`;\n  const paddingStyle = `${itemPadding.join(\"px \")}px`;\n  const minVisibleItem = currentItem;\n  const maxVisibleItem = currentItem + itemsToShow;\n  const prevItem = minVisibleItem - itemsToScroll;\n  const nextItem = maxVisibleItem + itemsToScroll;\n\n  const originalChildren = React.Children.map(children, (child, idx) => {\n    const isVisible = idx >= minVisibleItem && idx < maxVisibleItem;\n    const isPrevItem = !isVisible && idx >= prevItem && idx < currentItem;\n    const isNextItem = !isVisible && idx < nextItem && idx > currentItem;\n    const itemClass = \"carousel-item\";\n\n    const childToRender = autoTabIndexVisibleItems\n      ? React.cloneElement(child, {\n          tabIndex: isVisible ? 0 : -1\n        })\n      : child;\n    return (\n      <div\n        className={cssPrefix(\n          itemClass,\n          `${itemClass}-${idx}`,\n          `${itemClass}-${isVisible ? \"visible\" : \"hidden\"}`,\n          isPrevItem && `${itemClass}-prev`,\n          isNextItem && `${itemClass}-next`\n        )}\n      >\n        <ItemWrapperContainer\n          id={idx}\n          itemPosition={itemPosition}\n          style={{ width, padding: paddingStyle }}\n          key={idx}\n          onClick={onItemClick}\n        >\n          {childToRender}\n        </ItemWrapperContainer>\n      </div>\n    );\n  });\n  const toRender = enableSwipe ? (\n    <Swipeable\n      style={{\n        display: \"flex\",\n        flexDirection: verticalMode ? \"column\" : \"row\"\n      }}\n      stopPropagation\n      preventDefaultTouchmoveEvent={preventDefaultTouchmoveEvent}\n      trackMouse={enableMouseSwipe}\n      onSwiped={onSwiped}\n      onSwiping={onSwiping}\n      className={cssPrefix(\"swipable\")}\n    >\n      {originalChildren}\n    </Swipeable>\n  ) : (\n    originalChildren\n  );\n  return toRender;\n};\n\nTrack.propTypes = {\n  children: PropTypes.array.isRequired,\n  itemsToShow: PropTypes.number.isRequired,\n  noAutoTabbedItems: PropTypes.bool,\n  currentItem: PropTypes.number.isRequired,\n  itemPosition: PropTypes.string,\n  itemPadding: PropTypes.array,\n  childWidth: PropTypes.number,\n  verticalMode: PropTypes.bool,\n  enableSwipe: PropTypes.bool,\n  enableMouseSwipe: PropTypes.bool,\n  preventDefaultTouchmoveEvent: PropTypes.bool,\n  onSwiped: PropTypes.func,\n  onSwiping: PropTypes.func,\n  onItemClick: PropTypes.func\n};\n\nexport default Track;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport { cssPrefix } from \"../utils/helpers\";\nimport { Button } from \"./styled\";\n\nconst directionIcons = {\n  left: \"❮\",\n  right: \"❯\",\n  up: \"❮\",\n  down: \"❯\"\n};\n\nconst arrowClassname = cssPrefix(\"arrow\");\n\nconst rotateStyle = direction => {\n  let rotate = {};\n  if (direction === Arrow.up || direction === Arrow.down) {\n    rotate.transform = \"rotate(90deg)\";\n  }\n  return rotate;\n};\nconst Arrow = ({ direction, onClick, icons, style, ...rest }) => {\n  const arrows = { ...directionIcons, ...icons };\n  const styleObj = {\n    ...rotateStyle(direction),\n    ...style\n  };\n  return (\n    <Button\n      tabIndex={0}\n      onClick={onClick}\n      className={cx(arrowClassname, `${arrowClassname}-${direction}`)}\n      style={styleObj}\n      {...rest}\n    >\n      {arrows[direction]}\n    </Button>\n  );\n};\n\nArrow.left = \"left\";\nArrow.right = \"right\";\nArrow.up = \"up\";\nArrow.down = \"down\";\n\nArrow.propTypes = {\n  direction: PropTypes.oneOf([\"left\", \"right\", \"up\", \"down\"]).isRequired,\n  icons: PropTypes.object,\n  style: PropTypes.object,\n  onClick: PropTypes.func\n};\n\nexport default Arrow;\n","export const NEXT_ITEM = \"NEXT_ITEM\";\nexport const PREV_ITEM = \"PREV_ITEM\";\n","import { NEXT_ITEM, PREV_ITEM } from \"../actions/consts\";\n\nexport const activeIndexReducer = (state, action) => {\n  const { limit, itemsToScroll, type } = action;\n  switch (type) {\n    case NEXT_ITEM: {\n      let optimisticNextItem = state + itemsToScroll;\n      const nextItem = limit >= optimisticNextItem ? optimisticNextItem : limit;\n      return nextItem;\n    }\n\n    case PREV_ITEM: {\n      let optimisticPrevItem = state - itemsToScroll;\n      const prevItem = optimisticPrevItem >= limit ? optimisticPrevItem : limit;\n      return prevItem;\n    }\n\n    default:\n      return state;\n  }\n};\n","import { NEXT_ITEM, PREV_ITEM } from \"./consts\";\n\nexport const nextItemAction = (limit, itemsToScroll) => ({\n  type: NEXT_ITEM,\n  limit,\n  itemsToScroll\n});\n\nexport const prevItemAction = (limit, itemsToScroll) => ({\n  type: PREV_ITEM,\n  limit,\n  itemsToScroll\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { cssPrefix } from \"../../utils/helpers\";\n\nconst boxShadow = \"0 0 1px 2px rgba(0, 0, 0, 0.5)\";\nconst activeBoxShadow = \"0 0 1px 3px rgba(103,58,183,1)\";\nconst hoveredBoxShadow = \"0 0 1px 3px rgba(103,58,183,.5)\";\n\nconst Dot = styled.button.attrs(({ type = \"button\" }) => ({ type }))`\n  box-sizing: border-box;\n  padding: 0;\n  transition: all 250ms ease;\n  border: none;\n  margin: 5px;\n  background-color: ${({ active }) =>\n    active ? \"rgba(103,58,183,.5)\" : \"transparent\"};\n  font-size: 1.3em;\n  content: \"\";\n  height: 10px;\n  width: 10px;\n  box-shadow: ${({ active }) => (active ? activeBoxShadow : boxShadow)};\n  border-radius: 50%;\n  outline: none;\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    box-shadow: ${({ active }) =>\n      active ? activeBoxShadow : hoveredBoxShadow};\n  }\n`;\n\nclass DotContainer extends React.Component {\n  onClick = () => {\n    const { onClick, id } = this.props;\n    onClick(id);\n  };\n  render() {\n    const { active } = this.props;\n    return (\n      <Dot\n        tabIndex={active ? -1 : 0}\n        onClick={this.onClick}\n        active={active}\n        className={`${cssPrefix(\"dot\")} ${\n          active ? cssPrefix(\"dot_active\") : \"\"\n        }`}\n      />\n    );\n  }\n}\n\nDotContainer.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  active: PropTypes.bool,\n  onClick: PropTypes.func\n};\n\nexport default DotContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Dot from \"./Dot\";\nimport { numberToArray, cssPrefix, noop } from \"../../utils/helpers\";\n\nconst Indicators = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 15px;\n`;\n\nclass Pagination extends React.Component {\n  render() {\n    const { numOfPages, activePage, onClick } = this.props;\n    const pages = numberToArray(numOfPages);\n    return (\n      <Indicators className={cssPrefix(\"pagination\")}>\n        {pages.map((item, i) => (\n          <Dot key={i} id={i} active={i === activePage} onClick={onClick} />\n        ))}\n      </Indicators>\n    );\n  }\n}\n\nPagination.defaultProps = {\n  onClick: noop\n};\n\nPagination.propTypes = {\n  numOfPages: PropTypes.number.isRequired,\n  activePage: PropTypes.number.isRequired,\n  onClick: PropTypes.func\n};\n\nexport default Pagination;\n","import React, { Children } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ResizeObserver from \"resize-observer-polyfill\";\nimport Only from \"react-only-when\";\nimport Track from \"./Track\";\nimport Arrow from \"./Arrow\";\nimport consts from \"../consts\";\nimport { activeIndexReducer } from \"../reducers/items\";\nimport { nextItemAction, prevItemAction } from \"../actions/itemsActions\";\nimport {\n  SliderContainer,\n  Slider,\n  StyledCarousel,\n  CarouselWrapper\n} from \"./styled\";\nimport { pipe, noop, cssPrefix, numberToArray } from \"../utils/helpers\";\nimport { Pagination } from \"./Pagination\";\n\nclass Carousel extends React.Component {\n  isComponentMounted = false;\n  state = {\n    rootHeight: 0,\n    childHeight: 0,\n    sliderPosition: 0,\n    swipedSliderPosition: 0,\n    isSwiping: false,\n    transitioning: false,\n    transitionMs: this.props.transitionMs,\n    activeIndex: this.props.initialActiveIndex || this.props.initialFirstItem, // support deprecated  initialFirstItem\n    pages: [],\n    activePage: 0,\n    sliderContainerWidth: 0\n  };\n\n  componentDidMount() {\n    this.isComponentMounted = true;\n    this.initResizeObserver();\n    this.updateActivePage();\n    this.setPages();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      enableAutoPlay,\n      children,\n      itemsToShow,\n      itemsToScroll,\n      breakPoints\n    } = this.props;\n    const { activeIndex, sliderContainerWidth } = this.state;\n    const nextItem = this.getNextItemIndex(activeIndex, false);\n    const currentChildrenLength = Children.toArray(children).length;\n    const prevChildrenLength = Children.toArray(prevProps.children).length;\n    // update pages (for pagination)\n    if (\n      prevChildrenLength !== currentChildrenLength ||\n      prevProps.itemsToShow !== itemsToShow ||\n      prevProps.itemsToScroll !== itemsToScroll ||\n      prevProps.breakPoints !== breakPoints ||\n      sliderContainerWidth !== prevState.sliderContainerWidth\n    ) {\n      // we mimic a container resize to recalculate item width when itemsToShow are updated\n      this.onContainerResize({ contentRect: { width: sliderContainerWidth } });\n      this.setPages();\n      this.updateActivePage();\n    }\n\n    // autoplay update\n    if (activeIndex === nextItem) {\n      this.removeAutoPlay();\n    } else if (enableAutoPlay && !this.autoPlayIntervalId) {\n      this.setAutoPlay();\n    } else if (!enableAutoPlay && this.autoPlayIntervalId) {\n      this.removeAutoPlay();\n    }\n\n    if (prevChildrenLength !== currentChildrenLength) {\n      const {\n        itemsToShow: calculatedItemsToShow\n      } = this.getDerivedPropsFromBreakPoint();\n      // number of items is reduced (we don't care if number of items is increased)\n      // we need to check if our current index is not out of boundaries\n      // we need to include itemsToShow so we can fill up the slots\n      const lastIndex = currentChildrenLength - 1;\n      const isOutOfRange = activeIndex + calculatedItemsToShow > lastIndex;\n      if (isOutOfRange) {\n        // we are out of boundaries, go \"back\" to last item of the list (respect itemsToShow)\n        this.goTo(Math.max(0, currentChildrenLength - calculatedItemsToShow));\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.isComponentMounted = false;\n    this.removeAutoPlay();\n    this.unSubscribeObserver();\n  }\n\n  setRef = name => ref => (this[name] = ref);\n\n  initResizeObserver = () => {\n    this.ro = new ResizeObserver((entries, observer) => {\n      for (const entry of entries) {\n        if (entry.target === this.sliderContainer) {\n          // we are using rAF because it fixes the infinite refresh with gatsby (ssr?).\n          // TBH, I'm not sure i fully understand why.\n          // see https://github.com/sag1v/react-elastic-carousel/issues/107\n          window.requestAnimationFrame(() => {\n            this.onContainerResize(entry);\n          });\n        }\n        if (entry.target === this.slider) {\n          // we are using rAF because it fixes the infinite refresh with gatsby (ssr?).\n          // TBH, I'm not sure i fully understand why\n          // see https://github.com/sag1v/react-elastic-carousel/issues/107\n          window.requestAnimationFrame(() => {\n            this.onSliderResize(entry);\n          });\n        }\n      }\n    });\n\n    this.ro.observe(this.sliderContainer);\n    this.ro.observe(this.slider);\n  };\n\n  unSubscribeObserver = () => this.ro.disconnect();\n\n  setAutoPlay = () => {\n    const { autoPlaySpeed } = this.getDerivedPropsFromBreakPoint();\n    this.autoPlayIntervalId = setInterval(() => {\n      if (this.isComponentMounted) {\n        const { transitioning } = this.state;\n        if (!transitioning) {\n          this.slideNext();\n        }\n      }\n    }, autoPlaySpeed);\n  };\n\n  removeAutoPlay = () => {\n    if (this.autoPlayIntervalId) {\n      clearInterval(this.autoPlayIntervalId);\n      this.autoPlayIntervalId = null;\n    }\n  };\n\n  setPages = () => {\n    const numOfPages = this.getNumOfPages();\n    const pages = numberToArray(numOfPages);\n    this.setState({ pages });\n  };\n\n  onSliderTransitionEnd = fn => {\n    this.slider.addEventListener(\"transitionend\", fn);\n  };\n\n  removeSliderTransitionHook = fn => {\n    this.slider.removeEventListener(\"transitionend\", fn);\n  };\n\n  getDerivedPropsFromBreakPoint = () => {\n    const { breakPoints, ...restOfProps } = this.props;\n    const { sliderContainerWidth } = this.state;\n\n    // default breakpoint from individual props\n    let currentBreakPoint;\n    // if breakpoints were added as props override the individual props\n    if (breakPoints && breakPoints.length > 0) {\n      currentBreakPoint = breakPoints\n        .slice() // no mutations\n        .reverse() // so we can find last match\n        .find(bp => bp.width <= sliderContainerWidth);\n      if (!currentBreakPoint) {\n        /* in case we don't have a lower width than sliderContainerWidth\n         * this mostly happens in initilization when sliderContainerWidth is 0\n         */\n        currentBreakPoint = breakPoints[0];\n      }\n    }\n    // merge direct props with current breakpoint Props\n    return { ...restOfProps, ...currentBreakPoint };\n  };\n\n  updateSliderPosition = () => {\n    this.setState(state => {\n      const {\n        children,\n        verticalMode,\n        itemsToShow,\n        transitionMs\n      } = this.getDerivedPropsFromBreakPoint();\n      const { childHeight, activeIndex } = state;\n\n      const childWidth = this.calculateChildWidth();\n      const totalItems = Children.toArray(children).length;\n      const hiddenSlots = totalItems - itemsToShow;\n      let moveBy = activeIndex * -1;\n      const emptySlots = itemsToShow - (totalItems - activeIndex);\n      if (emptySlots > 0 && hiddenSlots > 0) {\n        moveBy = emptySlots + activeIndex * -1;\n      }\n      let sliderPosition = (verticalMode ? childHeight : childWidth) * moveBy;\n      const newActiveIndex =\n        emptySlots > 0 ? activeIndex - emptySlots : activeIndex;\n      // go back from 0ms to whatever set by the user\n      // We were at 0ms because we wanted to disable animation on resize\n      // see https://github.com/sag1v/react-elastic-carousel/issues/94\n      window.requestAnimationFrame(() => {\n        if (this.isComponentMounted) {\n          this.setState({ transitionMs });\n        }\n      });\n      return {\n        sliderPosition,\n        activeIndex: newActiveIndex < 0 ? 0 : newActiveIndex\n      };\n    });\n  };\n\n  onSliderResize = sliderNode => {\n    if (!this.isComponentMounted) {\n      return;\n    }\n\n    const {\n      verticalMode,\n      children,\n      itemsToShow\n    } = this.getDerivedPropsFromBreakPoint();\n    const { height: sliderHeight } = sliderNode.contentRect;\n    const nextState = {};\n    const childrenLength = Children.toArray(children).length;\n    if (verticalMode) {\n      const childHeight = sliderHeight / childrenLength;\n      // We use Math.min because we don't want to make the child smaller\n      // if the number of children is smaller than itemsToShow.\n      // (Because we do not want \"empty slots\")\n      nextState.rootHeight =\n        childHeight * Math.min(childrenLength, itemsToShow);\n      nextState.childHeight = childHeight;\n    } else {\n      nextState.rootHeight = sliderHeight;\n    }\n    this.setState(nextState);\n  };\n\n  calculateChildWidth = () => {\n    const { sliderContainerWidth } = this.state;\n    const {\n      verticalMode,\n      itemsToShow,\n      showEmptySlots,\n      children\n    } = this.getDerivedPropsFromBreakPoint();\n\n    /* based on slider container's width, get num of items to show\n        * and calculate child's width (and update it in state)\n        */\n    const childrenLength = Children.toArray(children).length || 1;\n\n    let childWidth = 0;\n    if (verticalMode) {\n      childWidth = sliderContainerWidth;\n    } else {\n      // When \"showEmptySlots\" is false\n      // We use Math.min because we don't want to make the child smaller\n      // if the number of children is smaller than itemsToShow.\n      // (Because we do not want \"empty slots\")\n      childWidth =\n        sliderContainerWidth /\n        (showEmptySlots ? itemsToShow : Math.min(childrenLength, itemsToShow));\n    }\n    return childWidth;\n  };\n\n  onContainerResize = sliderContainerNode => {\n    const { width: newSliderContainerWidth } = sliderContainerNode.contentRect;\n    // update slider container width\n    // disable animation on resize see https://github.com/sag1v/react-elastic-carousel/issues/94\n    const {\n      outerSpacing,\n      verticalMode: initialVerticalMode\n    } = this.getDerivedPropsFromBreakPoint();\n    const containerWidth =\n      newSliderContainerWidth - (initialVerticalMode ? 0 : outerSpacing * 2);\n\n    if (\n      !this.isComponentMounted ||\n      this.state.sliderContainerWidth === newSliderContainerWidth\n    ) {\n      // prevent infinite loop\n      return;\n    }\n    this.setState(\n      { sliderContainerWidth: containerWidth, transitionMs: 0 },\n      () => {\n        // we must get these props inside setState (get future props because its async)\n        const {\n          onResize,\n          itemsToShow,\n          children\n        } = this.getDerivedPropsFromBreakPoint();\n\n        const childrenLength = Children.toArray(children).length || 1;\n\n        this.setState(\n          currentState => {\n            // We might need to change the selected index when the size of the container changes\n            // we are making sure the selected index is not out of boundaries and respecting itemsToShow\n            // This usually happens with breakpoints. see https://github.com/sag1v/react-elastic-carousel/issues/122\n            let activeIndex = currentState.activeIndex;\n            // we take the lowest, in case itemsToShow is greater than childrenLength\n            const maxItemsToShow = Math.min(childrenLength, itemsToShow);\n            const endLimit = childrenLength - maxItemsToShow;\n            if (activeIndex > endLimit) {\n              activeIndex = endLimit;\n            }\n\n            return { activeIndex };\n          },\n          () => {\n            /* Based on all of the above new data:\n            * update slider position\n            * get the new current breakpoint\n            * pass the current breakpoint to the consumer's callback\n            */\n            this.updateSliderPosition();\n            const currentBreakPoint = this.getDerivedPropsFromBreakPoint();\n            onResize(currentBreakPoint);\n          }\n        );\n      }\n    );\n  };\n\n  tiltMovement = (position, distance = 20, duration = 150) => {\n    this.setState(state => {\n      return {\n        isSwiping: true,\n        swipedSliderPosition: position - distance\n      };\n    });\n    setTimeout(() => {\n      this.setState({\n        isSwiping: false,\n        swipedSliderPosition: 0\n      });\n    }, duration);\n  };\n\n  convertChildToCbObj = index => {\n    const { children } = this.getDerivedPropsFromBreakPoint();\n    // support decimal itemsToShow\n    const roundedIdx = Math.round(index);\n    const child = Children.toArray(children)[roundedIdx];\n    return { item: child.props, index: roundedIdx };\n  };\n\n  getNextItemIndex = (currentIndex, getPrev) => {\n    const {\n      children,\n      itemsToShow,\n      itemsToScroll\n    } = this.getDerivedPropsFromBreakPoint();\n    const childrenLength = Children.toArray(children).length || 1;\n    const notEnoughItemsToShow = itemsToShow > childrenLength;\n    let limit = getPrev ? 0 : childrenLength - itemsToShow;\n\n    if (notEnoughItemsToShow) {\n      limit = 0; // basically don't move\n    }\n    const nextAction = getPrev\n      ? prevItemAction(0, itemsToScroll)\n      : nextItemAction(limit, itemsToScroll);\n    const nextItem = activeIndexReducer(currentIndex, nextAction);\n    return nextItem;\n  };\n\n  getNextItemObj = getPrev => {\n    const { children } = this.getDerivedPropsFromBreakPoint();\n    const { activeIndex } = this.state;\n    const nextItemIndex = this.getNextItemIndex(activeIndex, getPrev);\n    // support decimal itemsToShow\n    const roundedIdx = Math.round(nextItemIndex);\n    const asElement = Children.toArray(children)[roundedIdx];\n    const asObj = { item: asElement.props, index: roundedIdx };\n    return asObj;\n  };\n\n  resetSwipe = () => {\n    this.setState({\n      swipedSliderPosition: 0,\n      transitioning: false,\n      isSwiping: false\n    });\n  };\n\n  onSwiping = data => {\n    const { deltaX, absX, deltaY, absY, dir } = data;\n\n    this.setState(state => {\n      const { childHeight, activeIndex, sliderPosition } = state;\n      const {\n        itemsToShow,\n        verticalMode,\n        children,\n        isRTL\n      } = this.getDerivedPropsFromBreakPoint();\n\n      const childWidth = this.calculateChildWidth();\n\n      // determine how far can user swipe\n      const childrenLength = Children.toArray(children).length || 1;\n      const goingNext =\n        (!verticalMode && dir === \"Left\" && !isRTL) ||\n        (!verticalMode && dir === \"Right\" && isRTL) ||\n        (verticalMode && dir === \"Up\");\n      const goingBack =\n        (!verticalMode && dir === \"Right\" && !isRTL) ||\n        (!verticalMode && dir === \"Left\" && isRTL) ||\n        (verticalMode && dir === \"Down\");\n\n      const horizontalSwipe = dir === \"Left\" || dir === \"Right\";\n      const verticalSwipe = dir === \"Up\" || dir === \"Down\";\n      const horizontalMode = !verticalMode;\n\n      let distanceSwipe = 0;\n      const horizontalEdgeStoppage = childWidth / 2;\n      const verticalEdgeStoppage = childHeight / 2;\n\n      if (verticalMode) {\n        if (verticalSwipe) {\n          const trackSize = childrenLength * childHeight;\n          if (goingNext) {\n            distanceSwipe =\n              trackSize -\n              childHeight * activeIndex -\n              itemsToShow * childHeight +\n              verticalEdgeStoppage;\n          } else if (goingBack) {\n            distanceSwipe = childHeight * activeIndex + verticalEdgeStoppage;\n          }\n        }\n      } else {\n        if (horizontalSwipe) {\n          const trackSize = childrenLength * childWidth;\n          if (goingNext) {\n            distanceSwipe =\n              trackSize -\n              childWidth * activeIndex -\n              itemsToShow * childWidth +\n              horizontalEdgeStoppage;\n          } else if (goingBack) {\n            distanceSwipe = childWidth * activeIndex + horizontalEdgeStoppage;\n          }\n        }\n      }\n\n      const shouldHorizontalSkipUpdate =\n        (horizontalMode && verticalSwipe) ||\n        (horizontalMode && horizontalSwipe && absX > distanceSwipe);\n\n      const shouldVerticalSkipUpdate =\n        (verticalMode && horizontalSwipe) ||\n        (verticalMode && verticalSwipe && absY > distanceSwipe);\n\n      if (shouldHorizontalSkipUpdate || shouldVerticalSkipUpdate) {\n        // bail out of state update\n        return;\n      }\n      let swipedSliderPosition;\n      if (horizontalSwipe) {\n        if (isRTL) {\n          swipedSliderPosition = sliderPosition + deltaX;\n        } else {\n          swipedSliderPosition = sliderPosition - deltaX;\n        }\n      } else {\n        swipedSliderPosition = sliderPosition - deltaY;\n      }\n      return {\n        swipedSliderPosition,\n        isSwiping: true,\n        transitioning: true\n      };\n    });\n  };\n\n  onSwiped = data => {\n    // we need to handle all scenarios:\n    // 1. Horizontal mode - swipe left or right\n    // 2. Horizontal mode with RTL - swipe left or right\n    // 3. vertical mode - swipe up or down\n\n    const { absX, absY, dir } = data;\n    const { childHeight, activeIndex } = this.state;\n    const {\n      verticalMode,\n      isRTL,\n      itemsToScroll\n    } = this.getDerivedPropsFromBreakPoint();\n    const childWidth = this.calculateChildWidth();\n\n    let func = this.resetSwipe;\n    const minSwipeDistanceHorizontal = childWidth / 5;\n    const minSwipeDistanceVertical = childHeight / 5;\n    const swipedLeft = dir === \"Left\";\n    const swipedRight = dir === \"Right\";\n    const swipedUp = dir === \"Up\";\n    const swipedDown = dir === \"Down\";\n    const verticalGoSwipe =\n      verticalMode &&\n      (swipedUp || swipedDown) &&\n      absY > minSwipeDistanceVertical;\n\n    const horizontalGoSwipe =\n      !verticalMode &&\n      (swipedRight || swipedLeft) &&\n      absX > minSwipeDistanceHorizontal;\n\n    let goodToGo = false;\n    if (verticalGoSwipe || horizontalGoSwipe) {\n      goodToGo = true;\n    }\n\n    if (goodToGo) {\n      // we should go to a different item\n      // determine what method we need to invoke\n\n      if (verticalMode) {\n        // get number of slides from user's swiping\n        const numberOfSlidesViaSwipe = Math.ceil(\n          (absY - minSwipeDistanceVertical) / childHeight\n        );\n        // if user swipes more than itemsToScroll then we want to bypass itemsToScroll for a smoother scroll\n        const numberOfSlidesTogo = Math.max(\n          itemsToScroll,\n          numberOfSlidesViaSwipe\n        );\n\n        const backSlidesToGo = activeIndex - numberOfSlidesTogo;\n        const forwardSlideTtoGo = activeIndex + numberOfSlidesTogo;\n\n        // up or down\n        if (swipedDown) {\n          // func = this.onPrevStart;\n          func = () => this.goTo(backSlidesToGo);\n        }\n        if (swipedUp) {\n          // func = this.onNextStart;\n          func = () => this.goTo(forwardSlideTtoGo);\n        }\n      } else {\n        // get number of slides from user's swiping\n        const numberOfSlidesViaSwipe = Math.ceil(\n          (absX - minSwipeDistanceHorizontal) / childWidth\n        );\n        // if user swipes more than itemsToScroll then we want to bypass itemsToScroll for a smoother scroll\n        const numberOfSlidesTogo = Math.max(\n          itemsToScroll,\n          numberOfSlidesViaSwipe\n        );\n\n        const backSlidesToGo = activeIndex - numberOfSlidesTogo;\n        const forwardSlideTtoGo = activeIndex + numberOfSlidesTogo;\n\n        // horizontal mode\n        if (isRTL) {\n          // flip sides\n          if (swipedLeft) {\n            // func = this.onPrevStart;\n            func = () => this.goTo(backSlidesToGo);\n          }\n          if (swipedRight) {\n            // func = this.onNextStart;\n            func = () => this.goTo(forwardSlideTtoGo);\n          }\n        } else {\n          // normal behavior\n          if (swipedLeft) {\n            // func = this.onNextStart;\n            func = () => this.goTo(forwardSlideTtoGo);\n          }\n          if (swipedRight) {\n            // func = this.onPrevStart;\n            func = () => this.goTo(backSlidesToGo);\n          }\n        }\n      }\n    }\n    // we are not \"tilting\" on edges, so we need to reset isSwiping and transitioning.\n    // otherwise we wont slide back to edge\n    this.setState({ isSwiping: false, transitioning: false });\n    func({ skipTilt: true });\n  };\n\n  onNextStart = options => {\n    const { onNextStart } = this.getDerivedPropsFromBreakPoint();\n    const { activeIndex } = this.state;\n    const nextItemObj = this.getNextItemObj();\n    const prevItemObj = this.convertChildToCbObj(activeIndex);\n    onNextStart(prevItemObj, nextItemObj);\n    this.slideNext(options);\n  };\n\n  onPrevStart = options => {\n    const { onPrevStart } = this.getDerivedPropsFromBreakPoint();\n    const { activeIndex } = this.state;\n    const nextItemObj = this.getNextItemObj(true);\n    const prevItemObj = this.convertChildToCbObj(activeIndex);\n    onPrevStart(prevItemObj, nextItemObj);\n    this.slidePrev(options);\n  };\n\n  slideNext = (options = {}) => {\n    const { skipTilt } = options;\n    const { enableTilt } = this.getDerivedPropsFromBreakPoint();\n    const { activeIndex, sliderPosition } = this.state;\n    const nextItem = this.getNextItemIndex(activeIndex, false);\n    if (activeIndex !== nextItem) {\n      this.goTo(nextItem);\n    } else if (enableTilt && !skipTilt) {\n      this.tiltMovement(sliderPosition, 20, 150);\n    }\n  };\n\n  slidePrev = (options = {}) => {\n    const { skipTilt } = options;\n    const { activeIndex } = this.state;\n    const { enableTilt } = this.getDerivedPropsFromBreakPoint();\n    const prevItem = this.getNextItemIndex(activeIndex, true);\n    if (activeIndex !== prevItem) {\n      this.goTo(prevItem);\n    } else if (enableTilt && !skipTilt) {\n      this.tiltMovement(0, -20, 150);\n    }\n  };\n\n  onNextEnd = () => {\n    const { onNextEnd, onChange } = this.getDerivedPropsFromBreakPoint();\n    const { activeIndex, activePage } = this.state;\n    const nextItemObj = this.convertChildToCbObj(activeIndex);\n    this.removeSliderTransitionHook(this.onNextEnd);\n    this.setState({ transitioning: false });\n    onChange && onChange(nextItemObj, activePage);\n    onNextEnd(nextItemObj, activePage);\n  };\n\n  onPrevEnd = () => {\n    const { onPrevEnd, onChange } = this.getDerivedPropsFromBreakPoint();\n    const { activeIndex, activePage } = this.state;\n    const nextItemObj = this.convertChildToCbObj(activeIndex);\n    this.removeSliderTransitionHook(this.onPrevEnd);\n    this.setState({ transitioning: false });\n    onChange && onChange(nextItemObj, activePage);\n    onPrevEnd(nextItemObj, activePage);\n  };\n\n  generatePositionUpdater = (\n    direction,\n    nextItemId,\n    verticalMode,\n    rest\n  ) => state => {\n    const { sliderPosition, childHeight, activeIndex } = state;\n    const childWidth = this.calculateChildWidth();\n\n    let newSliderPosition = 0;\n    const childSize = verticalMode ? childHeight : childWidth;\n    if (direction === consts.NEXT) {\n      newSliderPosition =\n        sliderPosition - childSize * (nextItemId - activeIndex);\n    } else {\n      newSliderPosition =\n        sliderPosition + childSize * (activeIndex - nextItemId);\n    }\n\n    return {\n      sliderPosition: newSliderPosition,\n      activeIndex: nextItemId,\n      swipedSliderPosition: 0,\n      isSwiping: false,\n      ...rest\n    };\n  };\n\n  goTo = nextItemId => {\n    const {\n      children,\n      verticalMode,\n      itemsToShow\n    } = this.getDerivedPropsFromBreakPoint();\n    const { activeIndex } = this.state;\n    const childrenLength = Children.toArray(children).length;\n    let safeNextItemId = Math.max(0, nextItemId); // don't allow negative numbers\n    const isPrev = activeIndex > safeNextItemId;\n    const nextAvailableItem = this.getNextItemIndex(activeIndex, isPrev);\n    const noChange = nextAvailableItem === activeIndex;\n    const outOfBoundary = safeNextItemId + itemsToShow >= childrenLength;\n    if (noChange) {\n      return;\n    }\n    if (outOfBoundary) {\n      // Either go to last index (respect itemsToShow) or 0 index if we can't fill the slider\n      safeNextItemId = Math.max(0, childrenLength - itemsToShow);\n    }\n    let direction = consts.NEXT;\n    let positionEndCb = this.onNextEnd;\n    if (isPrev) {\n      direction = consts.PREV;\n      positionEndCb = this.onPrevEnd;\n    }\n    const stateUpdater = this.generatePositionUpdater(\n      direction,\n      safeNextItemId,\n      verticalMode,\n      {\n        transitioning: true\n      }\n    );\n    this.setState(stateUpdater, () => {\n      // callback\n      pipe(\n        this.updateActivePage(),\n        this.onSliderTransitionEnd(positionEndCb)\n      );\n    });\n  };\n\n  getNumOfPages = () => {\n    const { children, itemsToShow } = this.getDerivedPropsFromBreakPoint();\n    const childrenLength = Children.toArray(children).length;\n    const safeItemsToShow = Math.max(itemsToShow, 1);\n    const numOfPages = Math.ceil(childrenLength / safeItemsToShow);\n    return numOfPages || 1;\n  };\n\n  updateActivePage = () => {\n    this.setState(state => {\n      const { itemsToShow, children } = this.getDerivedPropsFromBreakPoint();\n      const { activeIndex, activePage } = state;\n      const numOfPages = this.getNumOfPages();\n      const childrenLength = Children.toArray(children).length;\n      const inRangeItemsToShow = Math.min(childrenLength, itemsToShow);\n      // watch out from 0 (so we wont divide by zero)\n      const safeItemsToShow = Math.max(inRangeItemsToShow, 1);\n      const newActivePage = Math.ceil(activeIndex / safeItemsToShow);\n      const inRangeActivePageIndex = Math.min(numOfPages - 1, newActivePage);\n      if (activePage !== inRangeActivePageIndex) {\n        return { activePage: inRangeActivePageIndex };\n      }\n    });\n  };\n\n  onIndicatorClick = indicatorId => {\n    const { itemsToShow } = this.getDerivedPropsFromBreakPoint();\n    const gotoIndex = indicatorId * itemsToShow;\n    this.setState({ activePage: indicatorId });\n    this.goTo(gotoIndex);\n  };\n\n  render() {\n    const {\n      activePage,\n      isSwiping,\n      sliderPosition,\n      swipedSliderPosition,\n      rootHeight,\n      pages,\n      activeIndex,\n      transitionMs\n    } = this.state;\n    const {\n      className,\n      style,\n      itemsToShow,\n      itemsToScroll,\n      verticalMode,\n      isRTL,\n      easing,\n      tiltEasing,\n      children,\n      focusOnSelect,\n      autoTabIndexVisibleItems,\n      itemPosition,\n      itemPadding,\n      outerSpacing,\n      enableSwipe,\n      enableMouseSwipe,\n      pagination,\n      showArrows,\n      disableArrowsOnEnd,\n      preventDefaultTouchmoveEvent,\n      renderArrow,\n      renderPagination\n    } = this.getDerivedPropsFromBreakPoint();\n\n    const childWidth = this.calculateChildWidth();\n\n    const numOfPages = this.getNumOfPages();\n\n    /** Determine if arrows should be disabled */\n    const canSlidePrev =\n      activeIndex !== this.getNextItemIndex(activeIndex, true);\n    const canSlideNext =\n      activeIndex !== this.getNextItemIndex(activeIndex, false);\n    const disabledPrevArrow = !canSlidePrev && disableArrowsOnEnd;\n    const disabledNextArrow = !canSlideNext && disableArrowsOnEnd;\n\n    return (\n      <CarouselWrapper\n        isRTL={isRTL}\n        className={`${cssPrefix(\"carousel-wrapper\")} ${className}`}\n        style={style}\n      >\n        <StyledCarousel\n          className={cssPrefix(\"carousel\")}\n          size={{ height: rootHeight }}\n        >\n          <Only when={showArrows}>\n            {renderArrow ? (\n              renderArrow({\n                type: consts.PREV,\n                onClick: this.onPrevStart,\n                isEdge: !canSlidePrev\n              })\n            ) : (\n              <Arrow\n                onClick={this.onPrevStart}\n                direction={verticalMode ? Arrow.up : Arrow.left}\n                disabled={disabledPrevArrow}\n              />\n            )}\n          </Only>\n          <SliderContainer\n            className={cssPrefix(\"slider-container\")}\n            ref={this.setRef(\"sliderContainer\")}\n          >\n            <Slider\n              verticalMode={verticalMode}\n              isRTL={isRTL}\n              easing={easing}\n              sliderPosition={sliderPosition}\n              swipedSliderPosition={swipedSliderPosition}\n              isSwiping={isSwiping}\n              transitionMs={transitionMs}\n              tiltEasing={tiltEasing}\n              className={cssPrefix(\"slider\")}\n              ref={this.setRef(\"slider\")}\n              outerSpacing={outerSpacing}\n            >\n              <Track\n                verticalMode={verticalMode}\n                children={Children.toArray(children)}\n                childWidth={childWidth}\n                currentItem={activeIndex}\n                autoTabIndexVisibleItems={autoTabIndexVisibleItems}\n                itemsToShow={itemsToShow}\n                itemsToScroll={itemsToScroll}\n                itemPosition={itemPosition}\n                itemPadding={itemPadding}\n                enableSwipe={enableSwipe}\n                enableMouseSwipe={enableMouseSwipe}\n                preventDefaultTouchmoveEvent={preventDefaultTouchmoveEvent}\n                onSwiped={this.onSwiped}\n                onSwiping={this.onSwiping}\n                onItemClick={focusOnSelect ? this.goTo : undefined}\n              />\n            </Slider>\n          </SliderContainer>\n          <Only when={showArrows}>\n            {renderArrow ? (\n              renderArrow({\n                type: consts.NEXT,\n                onClick: this.onNextStart,\n                isEdge: !canSlideNext\n              })\n            ) : (\n              <Arrow\n                onClick={this.onNextStart}\n                direction={verticalMode ? Arrow.down : Arrow.right}\n                disabled={disabledNextArrow}\n              />\n            )}\n          </Only>\n        </StyledCarousel>\n        <Only when={pagination}>\n          {renderPagination ? (\n            renderPagination({\n              pages: pages,\n              activePage,\n              onClick: this.onIndicatorClick\n            })\n          ) : (\n            <Pagination\n              numOfPages={numOfPages}\n              activePage={activePage}\n              onClick={this.onIndicatorClick}\n            />\n          )}\n        </Only>\n      </CarouselWrapper>\n    );\n  }\n}\n\nCarousel.defaultProps = {\n  className: \"\",\n  style: {},\n  verticalMode: false,\n  isRTL: false,\n  initialFirstItem: 0,\n  initialActiveIndex: 0,\n  showArrows: true,\n  showEmptySlots: false,\n  disableArrowsOnEnd: true,\n  pagination: true,\n  easing: \"ease\",\n  tiltEasing: \"ease\",\n  transitionMs: 500,\n  enableTilt: true,\n  enableSwipe: true,\n  enableMouseSwipe: true,\n  preventDefaultTouchmoveEvent: false,\n  focusOnSelect: false,\n  autoTabIndexVisibleItems: true,\n  itemsToShow: 1,\n  itemsToScroll: 1,\n  itemPosition: consts.CENTER,\n  itemPadding: [0, 0, 0, 0],\n  outerSpacing: 0,\n  enableAutoPlay: false,\n  autoPlaySpeed: 2000,\n\n  // callbacks\n  onChange: noop,\n  onNextEnd: noop,\n  onPrevEnd: noop,\n  onNextStart: noop,\n  onPrevStart: noop,\n  onResize: noop\n};\n\nCarousel.propTypes = {\n  /** Items to render */\n  children: PropTypes.node.isRequired,\n\n  /** The css class for the root element */\n  className: PropTypes.string,\n\n  /** The style object for the root element */\n  style: PropTypes.object,\n\n  /** Display the Carousel in a vertical layout */\n  verticalMode: PropTypes.bool,\n\n  /** Flip right to left */\n  isRTL: PropTypes.bool,\n\n  /** Show dots for paging */\n  pagination: PropTypes.bool,\n\n  /** Animation speed */\n  transitionMs: PropTypes.number,\n\n  /** transition easing pattern */\n  easing: PropTypes.string,\n\n  /** transition easing pattern for the tilt */\n  tiltEasing: PropTypes.string,\n\n  /** The \"bump\" animation when reaching the last item */\n  enableTilt: PropTypes.bool,\n\n  /** Number of visible items  */\n  itemsToShow: PropTypes.number,\n\n  /** Number of items to scroll */\n  itemsToScroll: PropTypes.number,\n\n  /** Collection of objects with a width, itemsToShow and itemsToScroll  */\n  breakPoints: PropTypes.arrayOf(\n    PropTypes.shape({\n      width: PropTypes.number.isRequired,\n      itemsToShow: PropTypes.number,\n      itemsToScroll: PropTypes.number\n    })\n  ),\n\n  /** The initial active index when the component mounts */\n  initialActiveIndex: PropTypes.number,\n\n  /** **DEPRECATED - use initialActiveIndex instead** The first items when the component mounts */\n  initialFirstItem: PropTypes.number,\n\n  /** Show the arrow buttons */\n  showArrows: PropTypes.bool,\n\n  /** Show empty slots when children.length < itemsToShow (not compatible with verticalMode yet !) */\n  showEmptySlots: PropTypes.bool,\n\n  /** Disables the arrow button when there are no more items */\n  disableArrowsOnEnd: PropTypes.bool,\n\n  /** Go to item on click */\n  focusOnSelect: PropTypes.bool,\n\n  /** Automatically inject `tabIndex:0` to visible items */\n  autoTabIndexVisibleItems: PropTypes.bool,\n\n  /** A render prop for the arrow component\n   * - ({type, onClick}) => <div onClick={onClick}>{type === 'prev' ? '<-' : '->'}</div>\n   */\n  renderArrow: PropTypes.func,\n\n  /** A render prop for the pagination component\n   * - ({ pages, activePage, onClick }) =>  <YourComponent/>\n   */\n  renderPagination: PropTypes.func,\n\n  /** Position the element relative to it's wrapper (use the consts object) - consts.START | consts.CENTER | consts.END */\n  itemPosition: PropTypes.oneOf([consts.START, consts.CENTER, consts.END]),\n\n  /** A padding for each element  */\n  itemPadding: PropTypes.array,\n\n  /** A margin at the beginning and at the end of the carousel (not compatible with verticalMode yet !) */\n  outerSpacing: PropTypes.number,\n\n  // swipe\n  /** Enable or disable swipe */\n  enableSwipe: PropTypes.bool,\n\n  /** Enable or disable mouse swipe */\n  enableMouseSwipe: PropTypes.bool,\n\n  /** Prevent page scroll on touchmove.\n   * Use this to stop the browser from scrolling while a user swipes.\n   * More details: https://github.com/FormidableLabs/react-swipeable#preventdefaulttouchmoveevent-details\n   */\n  preventDefaultTouchmoveEvent: PropTypes.bool,\n\n  // auto play\n  /** Enable or disable auto play */\n  enableAutoPlay: PropTypes.bool,\n\n  /** Set auto play speed (ms) */\n  autoPlaySpeed: PropTypes.number,\n\n  // callbacks\n  /** A callback for the change of an item\n   * - onChange(currentItemObject, currentPageIndex) => {} */\n  onChange: PropTypes.func,\n\n  /** A callback for the beginning of the next transition\n   * - onNextStart(prevItemObject, nextItemObject) => {} */\n  onNextStart: PropTypes.func,\n\n  /** A callback for the beginning of the prev transition\n   * - onPrevStart(prevItemObject, nextItemObject) => {} */\n  onPrevStart: PropTypes.func,\n\n  /** A callback for the end of the next transition\n   * - onNextEnd(nextItemObject, currentPageIndex) => {} */\n  onNextEnd: PropTypes.func,\n\n  /** A callback for the end of the prev transition\n   * - onPrevEnd(nextItemObject, currentPageIndex) => {} */\n  onPrevEnd: PropTypes.func,\n\n  /** A callback for the \"slider-container\" resize\n   * - onResize(currentBreakPoint) => {} */\n  onResize: PropTypes.func\n};\n\nexport default Carousel;\n"],"sourceRoot":""}