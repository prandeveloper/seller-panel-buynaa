{"version":3,"sources":["components/reactstrap/badgePills/BadgePillSourceCode.js","components/reactstrap/badgePills/BadgePillContextual.js","components/reactstrap/badgePills/BadgePillGlow.js","components/reactstrap/badgePills/BadgePillIcons.js","components/reactstrap/badgePills/BadgeNotification.js","components/reactstrap/badgePills/BadgeBlock.js","components/reactstrap/badgePills/BadgePillLink.js","components/reactstrap/badgePills/BadgePillSizes.js","components/reactstrap/badgePills/BadgePillLight.js","components/reactstrap/badgePills/BadgePill.js","../node_modules/reactstrap/es/TabContext.js","../node_modules/reactstrap/es/Nav.js","../node_modules/reactstrap/es/TabContent.js","../node_modules/reactstrap/es/TabPane.js","../node_modules/prismjs/components/prism-jsx.min.js"],"names":["badgePillLight","className","badgePillGlow","badgePillContextual","badgePillIcons","badgePillNotification","badgePillLink","badgePillBlock","badgePillSizes","BadgePillContextual","state","activeTab","toggleTab","tab","setState","Fragment","Card","CardHeader","CardTitle","Nav","tabs","NavItem","NavLink","classnames","active","this","onClick","size","CardBody","TabContent","TabPane","tabId","Badge","color","pill","React","Component","BadgePillGlow","BadgePillIcons","BadgePillNotification","BadgePillBlock","BadgePillLink","href","BadgePillSizes","BadgePillLight","BadgePill","Prism","highlightAll","BreadCrumb","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","sm","BadgeNotification","md","TabContext","createContext","propTypes","PropTypes","bool","pills","vertical","oneOfType","string","horizontal","justified","fill","navbar","card","tag","tagPropType","cssModule","object","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","getVerticalClass","createElement","_extends","defaultProps","any","_Component","_this","call","_inheritsLoose","getDerivedStateFromProps","nextProps","prevState","prototype","render","_this$props","omit","Object","keys","Provider","value","activeTabId","getClasses","Consumer","_ref","i","t","util","clone","languages","javascript","e","n","replace","RegExp","source","jsx","extend","pattern","inside","comment","insertBefore","spread","script","alias","rest","o","content","map","join","hooks","add","language","r","length","a","s","type","tagName","pop","push","openedBraces","g","splice","Token","tokens"],"mappings":"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","file":"static/js/125.6002f94b.chunk.js","sourcesContent":["import React from \"react\"\n\nexport const badgePillLight = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Badge} from \"reactstrap\"\n\nclass BadgePillsLight extends React.Component {\n\n  render() {\n    return(\n      <Badge pill color=\"light-primary\">Primary</Badge>\n      <Badge pill color=\"light-success\">Success</Badge>\n      <Badge pill color=\"light-info\">Info</Badge>\n      <Badge pill color=\"light-danger\">Danger</Badge>\n      <Badge pill color=\"light-warning\">Warning</Badge>\n    )\n  }\n}\nexport default BadgePillsLight\n`}\n    </code>\n  </pre>\n)\n\nexport const badgePillGlow = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Badge} from \"reactstrap\"\n\nclass BadgeGlow extends React.Component {\n\n  render() {\n    return(\n      <Badge pill className=\"badge-glow\" color=\"primary\">Primary</Badge>\n      <Badge pill className=\"badge-glow\" color=\"success\">Success</Badge>\n      <Badge pill className=\"badge-glow\" color=\"info\">Info</Badge>\n      <Badge pill className=\"badge-glow\" color=\"danger\">Danger</Badge>\n      <Badge pill className=\"badge-glow\" color=\"warning\">Warning</Badge>\n      <Badge pill className=\"badge-glow\" color=\"dark\">Dark</Badge>\n    )\n  }\n}\nexport default BadgeGlow\n`}\n    </code>\n  </pre>\n)\n\nexport const badgePillContextual = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Badge} from \"reactstrap\"\n\nclass BadgeContextual extends React.Component {\n\n  render() {\n    return(\n      <Badge pill color=\"primary\">Primary</Badge>\n      <Badge pill color=\"success\">Success</Badge>\n      <Badge pill color=\"info\">Info</Badge>\n      <Badge pill color=\"danger\">Danger</Badge>\n      <Badge pill color=\"warning\">Warning</Badge>\n      <Badge pill color=\"dark\">Dark</Badge>\n    )\n  }\n}\nexport default BadgeContextual\n`}\n    </code>\n  </pre>\n)\n\nexport const badgePillIcons = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Badge} from \"reactstrap\"\nimport {\n  Facebook,\n  Instagram,\n  GitHub,\n  Twitter,\n  Sun\n} from \"react-feather\"\n\nclass BadgePillIcons extends React.Component {\n\n  render() {\n    return(\n      <Badge pill color=\"primary\" className=\"mr-1 mb-1\">\n        <Facebook size={12} />\n      </Badge>\n      <Badge pill color=\"success\" className=\"mr-1 mb-1\">\n        <Instagram size={12} />\n      </Badge>\n      <Badge pill color=\"info\" className=\"mr-1 mb-1\">\n        <Twitter size={12} />\n      </Badge>\n      <Badge pill color=\"danger\" className=\"mr-1 mb-1\">\n        <GitHub size={12} />\n      </Badge>\n      <Badge pill color=\"warning\" className=\"mr-1 mb-1\">\n        <Sun size={12} />\n      </Badge>\n    )\n  }\n}\nexport default BadgePillIcons\n`}\n    </code>\n  </pre>\n)\n\nexport const badgePillNotification = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Badge} from \"reactstrap\"\nimport {\n  Facebook,\n  Instagram,\n  Twitter,\n} from \"react-feather\"\n\nclass BadgeNotification extends React.Component {\n\n  render() {\n    return(\n      <div className=\"d-inline-block position-relative mr-2\">\n        <Badge pill color=\"primary\" className=\"badge-up\">\n          <Facebook size={12} />\n        </Badge>\n    </div>\n    <div className=\"d-inline-block position-relative mr-2\">\n      <Badge pill color=\"success\" className=\"badge-up\">\n        <Instagram size={12} />\n      </Badge>\n    </div>\n    <div className=\"d-inline-block position-relative\">\n      <Badge pill color=\"info\" className=\"badge-up\">\n        <Twitter size={12} />\n      </Badge>\n    </div>\n    )\n  }\n}\nexport default BadgeNotification\n`}\n    </code>\n  </pre>\n)\n\nexport const badgePillLink = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Badge} from \"reactstrap\"\nimport {\n  Link\n} from \"react-feather\"\n\nclass BadgePillLink extends React.Component {\n\n  render() {\n    return(\n      <Badge pill href=\"#\" color=\"primary\">\n        <Link size={12} />\n        Link Badge\n      </Badge>\n    )\n  }\n}\nexport default BadgePillLink\n`}\n    </code>\n  </pre>\n)\n\nexport const badgePillBlock = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Badge} from \"reactstrap\"\n\nclass BadgePillBlock extends React.Component {\n\n  render() {\n    return(\n      <Badge color=\"primary\" pill className=\"block\">\n        Block Badge Pill\n      </Badge>\n    )\n  }\n}\nexport default BadgePillBlock\n`}\n    </code>\n  </pre>\n)\n\nexport const badgePillSizes = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Badge} from \"reactstrap\"\n\nclass BadgePillSizes extends React.Component {\n\n  render() {\n    return(\n      <Badge color=\"primary\" pill className=\"badge-xl\">\n        <span>Extra Large</span>\n      </Badge>\n      <Badge color=\"primary\" pill className=\"badge-lg\">\n        <span>Large</span>\n      </Badge>\n      <Badge color=\"primary\" pill className=\"badge-md\">\n        <span>Medium</span>\n      </Badge>\n      <Badge color=\"primary\" pill className=\"badge-sm\">\n        <span>Small</span>\n      </Badge>\n    )\n  }\n}\nexport default BadgePillSizes\n`}\n    </code>\n  </pre>\n)\n","import React from \"react\"\nimport {\n  Badge,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { badgePillContextual } from \"./BadgePillSourceCode\"\n\nclass BadgePillContextual extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Contextual variations</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use attribute <code>pill</code> with <code>Badge</code> tag to\n              create badge pill.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Badge color=\"primary\" pill className=\"mr-1 mb-1\">\n                  Primary\n                </Badge>\n                <Badge color=\"success\" pill className=\"mr-1 mb-1\">\n                  Success\n                </Badge>\n                <Badge color=\"info\" pill className=\"mr-1 mb-1\">\n                  Info\n                </Badge>\n                <Badge color=\"danger\" pill className=\"mr-1 mb-1\">\n                  Danger\n                </Badge>\n                <Badge color=\"warning\" pill className=\"mr-1 mb-1\">\n                  Warning\n                </Badge>\n                <Badge color=\"dark\" pill className=\"mr-1 mb-1\">\n                  Dark\n                </Badge>\n              </TabPane>\n               <TabPane className=\"component-code\" tabId=\"2\">{badgePillContextual}</TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default BadgePillContextual\n","import React from \"react\"\nimport {\n  Badge,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { badgePillGlow } from \"./BadgePillSourceCode\"\n\nclass BadgePillGlow extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Glow variations</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use class <code>.badge-glow</code> with <code>Badge</code> tag to\n              add glow effect to your badge.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Badge color=\"primary\" pill className=\"badge-glow mr-1 mb-1\">\n                  Primary\n                </Badge>\n                <Badge color=\"success\" pill className=\"badge-glow mr-1 mb-1\">\n                  Success\n                </Badge>\n                <Badge color=\"info\" pill className=\"badge-glow mr-1 mb-1\">\n                  Info\n                </Badge>\n                <Badge color=\"danger\" pill className=\"badge-glow mr-1 mb-1\">\n                  Danger\n                </Badge>\n                <Badge color=\"warning\" pill className=\"badge-glow mr-1 mb-1\">\n                  Warning\n                </Badge>\n                <Badge color=\"dark\" pill className=\"badge-glow mr-1 mb-1\">\n                  Dark\n                </Badge>\n              </TabPane>\n               <TabPane className=\"component-code\" tabId=\"2\">{badgePillGlow}</TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default BadgePillGlow\n","import React from \"react\"\nimport {\n  Badge,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport {\n  Eye,\n  Code,\n  Facebook,\n  Instagram,\n  GitHub,\n  Twitter,\n  Sun\n} from \"react-feather\"\nimport { badgePillIcons } from \"./BadgePillSourceCode\"\n\nclass BadgePillIcons extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Icons</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Badge pill color=\"primary\" className=\"mr-1 mb-1\">\n                  <Facebook size={12} />\n                </Badge>\n                <Badge pill color=\"success\" className=\"mr-1 mb-1\">\n                  <Instagram size={12} />\n                </Badge>\n                <Badge pill color=\"info\" className=\"mr-1 mb-1\">\n                  <Twitter size={12} />\n                </Badge>\n                <Badge pill color=\"danger\" className=\"mr-1 mb-1\">\n                  <GitHub size={12} />\n                </Badge>\n                <Badge pill color=\"warning\" className=\"mr-1 mb-1\">\n                  <Sun size={12} />\n                </Badge>\n              </TabPane>\n               <TabPane className=\"component-code\" tabId=\"2\">{badgePillIcons}</TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default BadgePillIcons\n","import React from \"react\"\nimport {\n  Badge,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code, Facebook, Instagram, Twitter } from \"react-feather\"\nimport { badgePillNotification } from \"./BadgePillSourceCode\"\n\nclass BadgePillNotification extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Notification</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p className=\"mb-2\">\n              Use <code>.badge-up</code> to set pill badge to higher than other\n              text. So that it can work with notifications also.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <div className=\"d-inline-block position-relative mr-2\">\n                  <Badge pill color=\"primary\" className=\"badge-up\">\n                    4\n                  </Badge>\n                  <Facebook className=\"font-medium-5 text-primary\" size={22} />\n                </div>\n                <div className=\"d-inline-block position-relative mr-2\">\n                  <Badge pill color=\"danger\" className=\"badge-up\">\n                    5\n                  </Badge>\n                  <Instagram className=\"font-medium-5 text-danger\" size={22} />\n                </div>\n                <div className=\"d-inline-block position-relative\">\n                  <Badge pill color=\"info\" className=\"badge-up\">\n                    6\n                  </Badge>\n                  <Twitter className=\"font-medium-5 text-info\" size={22} />\n                </div>\n              </TabPane>\n               <TabPane className=\"component-code\" tabId=\"2\">{badgePillNotification}</TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default BadgePillNotification\n","import React from \"react\"\nimport {\n  Badge,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { badgePillBlock } from \"./BadgePillSourceCode\"\n\nclass BadgePillBlock extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Block Badge Pill</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use <code>.block</code> class to make badge display as block.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane\n                tabId=\"1\"\n                className=\"d-flex justify-content-center w-100\"\n              >\n                <Badge pill color=\"primary\" className=\"block\">\n                  <span>Block Badge Pill</span>\n                </Badge>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {badgePillBlock}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default BadgePillBlock\n","import React from \"react\"\nimport {\n  Badge,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code, Link } from \"react-feather\"\nimport { badgePillLink } from \"./BadgePillSourceCode\"\n\nclass BadgePillLink extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Link Badge Pill</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use <code>href=\"#\"</code> attribute to use badge as a link.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\" className=\"d-flex justify-content-center\">\n                <Badge color=\"primary\" pill href=\"#\" className=\"mr-1 mb-1\">\n                  <Link size={12} />\n                  <span>Link Badge Pill</span>\n                </Badge>\n              </TabPane>\n               <TabPane className=\"component-code\" tabId=\"2\">{badgePillLink}</TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default BadgePillLink\n","import React from \"react\"\nimport {\n  Badge,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { badgePillSizes } from \"./BadgePillSourceCode\"\n\nclass BadgePillSizes extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Sizes</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use <code>.badge-[sm/md/lg/xl]</code> class to change badge pill\n              size.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Badge color=\"primary\" pill className=\"badge-xl mr-1 mb-1\">\n                  <span>Extra Large</span>\n                </Badge>\n                <Badge color=\"primary\" pill className=\"badge-lg mr-1 mb-1\">\n                  <span>Large</span>\n                </Badge>\n                <Badge color=\"primary\" pill className=\"badge-md mr-1 mb-1\">\n                  <span>Medium</span>\n                </Badge>\n                <Badge color=\"primary\" pill className=\"badge-sm mr-1 mb-1\">\n                  <span>Small</span>\n                </Badge>\n              </TabPane>\n               <TabPane className=\"component-code\" tabId=\"2\">{badgePillSizes}</TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default BadgePillSizes\n","import React from \"react\"\nimport {\n  Badge,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { badgePillLight } from \"./BadgePillSourceCode\"\n\nclass BadgePillLight extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Light Badges</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}>\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}>\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use attribute <code>pill</code> and{\" \"}\n              <code>color=\"light-COLOR_NAME\"</code> with <code>Badge</code> tag\n              to create a light badge pill.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Badge color=\"light-primary\" pill className=\"mr-1 mb-1\">\n                  Primary\n                </Badge>\n                <Badge color=\"light-success\" pill className=\"mr-1 mb-1\">\n                  Success\n                </Badge>\n                <Badge color=\"light-info\" pill className=\"mr-1 mb-1\">\n                  Info\n                </Badge>\n                <Badge color=\"light-danger\" pill className=\"mr-1 mb-1\">\n                  Danger\n                </Badge>\n                <Badge color=\"light-warning\" pill className=\"mr-1 mb-1\">\n                  Warning\n                </Badge>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {badgePillLight}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default BadgePillLight\n","import React from \"react\"\nimport { Row, Col } from \"reactstrap\"\nimport BreadCrumbs from \"../../@vuexy/breadCrumbs/BreadCrumb\"\nimport BadgePillContextual from \"./BadgePillContextual\"\nimport BadgeGlow from \"./BadgePillGlow\"\nimport BadgePillIcons from \"./BadgePillIcons\"\nimport BadgeNotification from \"./BadgeNotification\"\nimport BadgePillBlock from \"./BadgeBlock\"\nimport BadgePillLink from \"./BadgePillLink\"\nimport BadgePillSizes from \"./BadgePillSizes\"\nimport BadgePillLight from \"./BadgePillLight\"\nimport Prism from \"prismjs\"\nimport \"prismjs/components/prism-jsx.min\"\nclass BadgePill extends React.Component {\n  componentDidMount() {\n    Prism.highlightAll()\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <BreadCrumbs\n          breadCrumbTitle=\"Pill Badges\"\n          breadCrumbParent=\"Components\"\n          breadCrumbActive=\"Pill Badges\"\n        />\n        <Row>\n          <Col sm=\"12\">\n            <BadgePillContextual />\n          </Col>\n          <Col sm=\"12\">\n            <BadgeGlow />\n          </Col>\n          <Col sm=\"12\">\n            <BadgePillLight />\n          </Col>\n          <Col sm=\"12\">\n            <BadgePillIcons />\n          </Col>\n          <Col sm=\"12\">\n            <BadgeNotification />\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"6\" sm=\"12\">\n            <BadgePillLink />\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <BadgePillBlock />\n          </Col>\n        </Row>\n        <Row>\n          <Col sm=\"12\">\n            <BadgePillSizes />\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\nexport default BadgePill\n","import React from 'react';\n/**\n * TabContext\n * {\n *  activeTabId: PropTypes.any\n * }\n */\n\nexport var TabContext = /*#__PURE__*/React.createContext({});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tabs: PropTypes.bool,\n  pills: PropTypes.bool,\n  vertical: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  horizontal: PropTypes.string,\n  justified: PropTypes.bool,\n  fill: PropTypes.bool,\n  navbar: PropTypes.bool,\n  card: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'ul',\n  vertical: false\n};\n\nvar getVerticalClass = function getVerticalClass(vertical) {\n  if (vertical === false) {\n    return false;\n  } else if (vertical === true || vertical === 'xs') {\n    return 'flex-column';\n  }\n\n  return \"flex-\" + vertical + \"-column\";\n};\n\nvar Nav = function Nav(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabs = props.tabs,\n      pills = props.pills,\n      vertical = props.vertical,\n      horizontal = props.horizontal,\n      justified = props.justified,\n      fill = props.fill,\n      navbar = props.navbar,\n      card = props.card,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tabs\", \"pills\", \"vertical\", \"horizontal\", \"justified\", \"fill\", \"navbar\", \"card\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, navbar ? 'navbar-nav' : 'nav', horizontal ? \"justify-content-\" + horizontal : false, getVerticalClass(vertical), {\n    'nav-tabs': tabs,\n    'card-header-tabs': card && tabs,\n    'nav-pills': pills,\n    'card-header-pills': card && pills,\n    'nav-justified': justified,\n    'nav-fill': fill\n  }), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nNav.propTypes = propTypes;\nNav.defaultProps = defaultProps;\nexport default Nav;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, omit, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  activeTab: PropTypes.any,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar TabContent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TabContent, _Component);\n\n  TabContent.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.activeTab !== nextProps.activeTab) {\n      return {\n        activeTab: nextProps.activeTab\n      };\n    }\n\n    return null;\n  };\n\n  function TabContent(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      activeTab: _this.props.activeTab\n    };\n    return _this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        Tag = _this$props.tag;\n    var attributes = omit(this.props, Object.keys(propTypes));\n    var classes = mapToCssModules(classNames('tab-content', className), cssModule);\n    return /*#__PURE__*/React.createElement(TabContext.Provider, {\n      value: {\n        activeTabId: this.state.activeTab\n      }\n    }, /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    })));\n  };\n\n  return TabContent;\n}(Component);\n\nexport default TabContent;\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  tabId: PropTypes.any\n};\nvar defaultProps = {\n  tag: 'div'\n};\nexport default function TabPane(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabId = props.tabId,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tabId\", \"tag\"]);\n\n  var getClasses = function getClasses(activeTabId) {\n    return mapToCssModules(classNames('tab-pane', className, {\n      active: tabId === activeTabId\n    }), cssModule);\n  };\n\n  return /*#__PURE__*/React.createElement(TabContext.Consumer, null, function (_ref) {\n    var activeTabId = _ref.activeTabId;\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: getClasses(activeTabId)\n    }));\n  });\n}\nTabPane.propTypes = propTypes;\nTabPane.defaultProps = defaultProps;","!function(i){var t=i.util.clone(i.languages.javascript),e=\"(?:\\\\{<S>*\\\\.{3}(?:[^{}]|<BRACES>)*\\\\})\";function n(t,n){return t=t.replace(/<S>/g,function(){return\"(?:\\\\s|//.*(?!.)|/\\\\*(?:[^*]|\\\\*(?!/))\\\\*/)\"}).replace(/<BRACES>/g,function(){return\"(?:\\\\{(?:\\\\{(?:\\\\{[^{}]*\\\\}|[^{}])*\\\\}|[^{}])*\\\\})\"}).replace(/<SPREAD>/g,function(){return e}),RegExp(t,n)}e=n(e).source,i.languages.jsx=i.languages.extend(\"markup\",t),i.languages.jsx.tag.pattern=n(\"</?(?:[\\\\w.:-]+(?:<S>+(?:[\\\\w.:$-]+(?:=(?:\\\"(?:\\\\\\\\[^]|[^\\\\\\\\\\\"])*\\\"|'(?:\\\\\\\\[^]|[^\\\\\\\\'])*'|[^\\\\s{'\\\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*/?)?>\"),i.languages.jsx.tag.inside.tag.pattern=/^<\\/?[^\\s>\\/]*/i,i.languages.jsx.tag.inside[\"attr-value\"].pattern=/=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/i,i.languages.jsx.tag.inside.tag.inside[\"class-name\"]=/^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/,i.languages.jsx.tag.inside.comment=t.comment,i.languages.insertBefore(\"inside\",\"attr-name\",{spread:{pattern:n(\"<SPREAD>\"),inside:i.languages.jsx}},i.languages.jsx.tag),i.languages.insertBefore(\"inside\",\"special-attr\",{script:{pattern:n(\"=<BRACES>\"),inside:{\"script-punctuation\":{pattern:/^=(?=\\{)/,alias:\"punctuation\"},rest:i.languages.jsx},alias:\"language-javascript\"}},i.languages.jsx.tag);var o=function(t){return t?\"string\"==typeof t?t:\"string\"==typeof t.content?t.content:t.content.map(o).join(\"\"):\"\"},r=function(t){for(var n=[],e=0;e<t.length;e++){var a=t[e],s=!1;if(\"string\"!=typeof a&&(\"tag\"===a.type&&a.content[0]&&\"tag\"===a.content[0].type?\"</\"===a.content[0].content[0].content?0<n.length&&n[n.length-1].tagName===o(a.content[0].content[1])&&n.pop():\"/>\"===a.content[a.content.length-1].content||n.push({tagName:o(a.content[0].content[1]),openedBraces:0}):0<n.length&&\"punctuation\"===a.type&&\"{\"===a.content?n[n.length-1].openedBraces++:0<n.length&&0<n[n.length-1].openedBraces&&\"punctuation\"===a.type&&\"}\"===a.content?n[n.length-1].openedBraces--:s=!0),(s||\"string\"==typeof a)&&0<n.length&&0===n[n.length-1].openedBraces){var g=o(a);e<t.length-1&&(\"string\"==typeof t[e+1]||\"plain-text\"===t[e+1].type)&&(g+=o(t[e+1]),t.splice(e+1,1)),0<e&&(\"string\"==typeof t[e-1]||\"plain-text\"===t[e-1].type)&&(g=o(t[e-1])+g,t.splice(e-1,1),e--),t[e]=new i.Token(\"plain-text\",g,null,g)}a.content&&\"string\"!=typeof a.content&&r(a.content)}};i.hooks.add(\"after-tokenize\",function(t){\"jsx\"!==t.language&&\"tsx\"!==t.language||r(t.tokens)})}(Prism);"],"sourceRoot":""}