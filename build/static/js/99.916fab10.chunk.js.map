{"version":3,"sources":["components/reactstrap/spinners/SpinnerSourceCode.js","components/reactstrap/spinners/SpinnerBorder.js","components/reactstrap/spinners/SpinnerColors.js","components/reactstrap/spinners/SpinnerGrowing.js","components/reactstrap/spinners/SpinnerGrowingColored.js","components/reactstrap/spinners/SpinnerFlex.js","components/reactstrap/spinners/SpinnerFloat.js","components/reactstrap/spinners/SpinnerTextAlignment.js","components/reactstrap/spinners/SpinnerSizes.js","components/reactstrap/spinners/SpinnerButtons.js","components/reactstrap/spinners/Spinners.js","../node_modules/reactstrap/es/TabContext.js","../node_modules/reactstrap/es/Nav.js","../node_modules/reactstrap/es/TabContent.js","../node_modules/reactstrap/es/TabPane.js","../node_modules/prismjs/components/prism-jsx.min.js","../node_modules/reactstrap/es/Spinner.js"],"names":["spinnerBorder","className","spinnerColors","spinnerGrowing","spinnerGrowColors","spinnerFlex","spinnerFloat","spinnerTextAlignment","spinnerSizes","spinnerButton","SpinnerBorder","state","activeTab","toggleTab","tab","setState","Fragment","Card","CardHeader","CardTitle","Nav","tabs","NavItem","NavLink","classnames","active","this","onClick","size","CardBody","TabContent","TabPane","tabId","Spinner","color","React","Component","SpinnerColors","SpinnerGrowing","type","SpinnerGrowColors","SpinnerFlex","SpinnerFloat","SpinnerTextAlignment","SpinnerSizes","SpinnerButton","Button","Ripple","Spinners","Prism","highlightAll","BreadCrumb","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","md","sm","SpinnerButtons","TabContext","createContext","propTypes","PropTypes","bool","pills","vertical","oneOfType","string","horizontal","justified","fill","navbar","card","tag","tagPropType","cssModule","object","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","getVerticalClass","createElement","_extends","defaultProps","any","_Component","_this","call","_inheritsLoose","getDerivedStateFromProps","nextProps","prevState","prototype","render","_this$props","omit","Object","keys","Provider","value","activeTabId","getClasses","Consumer","_ref","i","t","util","clone","languages","javascript","e","n","replace","RegExp","source","jsx","extend","pattern","inside","comment","insertBefore","spread","script","alias","rest","o","content","map","join","hooks","add","language","r","length","a","s","tagName","pop","push","openedBraces","g","splice","Token","tokens","children","role"],"mappings":"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","file":"static/js/99.916fab10.chunk.js","sourcesContent":["import React from \"react\"\n\nexport const spinnerBorder = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Spinner} from \"reactstrap\"\n\nclass SpinnerBorder extends React.Component {\n\n  render() {\n    return(\n      <Spinner color=\"primary\" />\n    )\n  }\n}\nexport default SpinnerBorder\n`}\n    </code>\n  </pre>\n)\n\nexport const spinnerColors = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Spinner} from \"reactstrap\"\n\nclass SpinnerColors extends React.Component {\n\n  render() {\n    return(\n      <Spinner color=\"primary\" />\n      <Spinner color=\"success\" />\n      <Spinner color=\"info\" />\n      <Spinner color=\"danger\" />\n      <Spinner color=\"warning\" />\n      <Spinner color=\"light\" />\n      <Spinner color=\"dark\" />\n    )\n  }\n}\nexport default SpinnerColors\n`}\n    </code>\n  </pre>\n)\n\nexport const spinnerGrowing = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Spinner} from \"reactstrap\"\n\nclass SpinnerGrowing extends React.Component {\n\n  render() {\n    return(\n      <Spinner type=\"grow\" color=\"primary\" />\n    )\n  }\n}\nexport default SpinnerGrowing\n`}\n    </code>\n  </pre>\n)\n\nexport const spinnerGrowColors = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\n  import React from \"react\"\n  import {Spinner} from \"reactstrap\"\n\n  class SpinnerColors extends React.Component {\n\n    render() {\n      return(\n        <Spinner type=\"grow\" color=\"primary\" />\n        <Spinner type=\"grow\" color=\"success\" />\n        <Spinner type=\"grow\" color=\"info\" />\n        <Spinner type=\"grow\" color=\"danger\" />\n        <Spinner type=\"grow\" color=\"warning\" />\n        <Spinner type=\"grow\" color=\"light\" />\n        <Spinner type=\"grow\" color=\"dark\" />\n      )\n    }\n  }\n  export default SpinnerColors\n        `}\n    </code>\n  </pre>\n)\n\nexport const spinnerFlex = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Spinner} from \"reactstrap\"\n\nclass SpinnerFlex extends React.Component {\n\n  render() {\n    return(\n      <div className=\"d-flex justify-content-between align-items-center\">\n        <strong>Loading...</strong>\n        <Spinner color=\"primary\" />\n      </div>\n    )\n  }\n}\nexport default SpinnerFlex\n`}\n    </code>\n  </pre>\n)\n\nexport const spinnerFloat = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Spinner} from \"reactstrap\"\n\nclass SpinnerFloat extends React.Component {\n\n  render() {\n    return(\n        <Spinner color=\"primary\" className=\"float-right\" />\n    )\n  }\n}\nexport default SpinnerFloat\n`}\n    </code>\n  </pre>\n)\n\nexport const spinnerTextAlignment = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Spinner} from \"reactstrap\"\n\nclass SpinnerTextAlignment extends React.Component {\n\n  render() {\n    return(\n      <div className=\"text-center\">\n        <Spinner color=\"primary\" />\n      </div>\n    )\n  }\n}\nexport default SpinnerTextAlignment\n`}\n    </code>\n  </pre>\n)\n\nexport const spinnerSizes = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Spinner} from \"reactstrap\"\n\nclass SpinnerSizes extends React.Component {\n\n  render() {\n    return(\n      <Spinner color=\"primary\" size=\"sm\" />\n      <Spinner type=\"grow\" color=\"primary\" size=\"sm\" />\n\n      <Spinner color=\"primary\" />\n      <Spinner type=\"grow\" color=\"primary\" />\n\n      <Spinner color=\"primary\" size=\"lg\" />\n      <Spinner type=\"grow\" color=\"primary\" size=\"lg\" />\n    )\n  }\n}\nexport default SpinnerSizes\n`}\n    </code>\n  </pre>\n)\n\nexport const spinnerButton = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Spinner} from \"reactstrap\"\n\nclass SpinnerButton extends React.Component {\n\n  render() {\n    return(\n        <Button color=\"primary\" className=\"mr-1 mb-1\">\n          <Spinner color=\"white\" size=\"sm\" />\n        </Button>\n\n        <Button color=\"primary\" className=\"mr-1 mb-1\">\n          <Spinner color=\"white\" size=\"sm\" />\n          <span className=\"ml-50\">Loading...</span>\n        </Button>\n\n        <Button color=\"primary\" className=\"mr-1 mb-1\">\n          <Spinner color=\"white\" size=\"sm\" type=\"grow\" />\n        </Button>\n\n        <Button color=\"primary\" className=\"mb-1\">\n          <Spinner color=\"white\" size=\"sm\" type=\"grow\" />\n          <span className=\"ml-50\">Loading...</span>\n        </Button>\n    )\n  }\n}\nexport default SpinnerButton\n`}\n    </code>\n  </pre>\n)\n","import React from \"react\"\nimport {\n  Spinner,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { spinnerBorder } from \"./SpinnerSourceCode\"\n\nclass SpinnerBorder extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Border Spinner</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use <code>Spinner</code> tag to create a bordered spinner.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Spinner color=\"primary\" />\n              </TabPane>\n               <TabPane className=\"component-code\" tabId=\"2\">{spinnerBorder}</TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default SpinnerBorder\n","import React from \"react\"\nimport {\n  Spinner,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { spinnerColors } from \"./SpinnerSourceCode\"\n\nclass SpinnerColors extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Colored Spinners</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use <code>color</code> attribute to create a colored spinner.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Spinner className=\"mr-50\" color=\"primary\" />\n                <Spinner className=\"mr-50\" color=\"success\" />\n                <Spinner className=\"mr-50\" color=\"info\" />\n                <Spinner className=\"mr-50\" color=\"danger\" />\n                <Spinner className=\"mr-50\" color=\"warning\" />\n                <Spinner className=\"mr-50\" color=\"light\" />\n                <Spinner className=\"mr-50\" color=\"dark\" />\n              </TabPane>\n               <TabPane className=\"component-code\" tabId=\"2\">{spinnerColors}</TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default SpinnerColors\n","import React from \"react\"\nimport {\n  Spinner,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { spinnerGrowing } from \"./SpinnerSourceCode\"\n\nclass SpinnerGrowing extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Growing Spinner</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use <code>type=\"grow\"</code> with spinner tag to create a growing\n              spinner.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Spinner type=\"grow\" color=\"primary\" />\n              </TabPane>\n               <TabPane className=\"component-code\" tabId=\"2\">{spinnerGrowing}</TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default SpinnerGrowing\n","import React from \"react\"\nimport {\n  Spinner,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { spinnerGrowColors } from \"./SpinnerSourceCode\"\n\nclass SpinnerGrowColors extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Colored Growing Spinners</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use <code>color</code> and <code>type</code> attribute to create a\n              colored growing spinner.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Spinner type=\"grow\" className=\"mr-50\" color=\"primary\" />\n                <Spinner type=\"grow\" className=\"mr-50\" color=\"success\" />\n                <Spinner type=\"grow\" className=\"mr-50\" color=\"info\" />\n                <Spinner type=\"grow\" className=\"mr-50\" color=\"danger\" />\n                <Spinner type=\"grow\" className=\"mr-50\" color=\"warning\" />\n                <Spinner type=\"grow\" className=\"mr-50\" color=\"light\" />\n                <Spinner type=\"grow\" className=\"mr-50\" color=\"dark\" />\n              </TabPane>\n               <TabPane className=\"component-code\" tabId=\"2\">{spinnerGrowColors}</TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default SpinnerGrowColors\n","import React from \"react\"\nimport {\n  Spinner,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { spinnerFlex } from \"./SpinnerSourceCode\"\n\nclass SpinnerFlex extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Flex</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use Flexbox utilities to place spinners.Use <code>.d-flex</code>{\" \"}\n              and <code>.justify-content-[side]</code>.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <div className=\"d-flex justify-content-between align-items-center\">\n                  <strong>Loading...</strong>\n                  <Spinner color=\"primary\" />\n                </div>\n              </TabPane>\n               <TabPane className=\"component-code\" tabId=\"2\">{spinnerFlex}</TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default SpinnerFlex\n","import React from \"react\"\nimport {\n  Spinner,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { spinnerFloat } from \"./SpinnerSourceCode\"\n\nclass SpinnerFloat extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Float</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use <code>.float-[side]</code> with spinner tag to change\n              spinner's position.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Spinner color=\"primary\" className=\"float-right\" />\n              </TabPane>\n               <TabPane className=\"component-code\" tabId=\"2\">{spinnerFloat}</TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default SpinnerFloat\n","import React from \"react\"\nimport {\n  Spinner,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { spinnerTextAlignment } from \"./SpinnerSourceCode\"\n\nclass SpinnerTextAlignment extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Text Alignment</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              You can also use <code>.text-[side]</code> as a wrapper to spinner\n              tag to change spinner's position.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <div className=\"text-center\">\n                  <Spinner color=\"primary\" />\n                </div>\n              </TabPane>\n               <TabPane className=\"component-code\" tabId=\"2\">{spinnerTextAlignment}</TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default SpinnerTextAlignment\n","import React from \"react\"\nimport {\n  Spinner,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { spinnerSizes } from \"./SpinnerSourceCode\"\n\nclass SpinnerSizes extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Sizes</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use attribute <code>size=\"sm/lg\"</code> for Small or Large spinner\n              .\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Spinner color=\"primary\" size=\"sm\" />\n                <Spinner\n                  type=\"grow\"\n                  color=\"primary\"\n                  size=\"sm\"\n                  className=\"mr-2\"\n                />\n\n                <Spinner color=\"primary\" />\n                <Spinner type=\"grow\" color=\"primary\" className=\"mr-2\" />\n\n                <Spinner color=\"primary\" size=\"lg\" />\n                <Spinner type=\"grow\" color=\"primary\" size=\"lg\" />\n              </TabPane>\n               <TabPane className=\"component-code\" tabId=\"2\">{spinnerSizes}</TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default SpinnerSizes\n","import React from \"react\"\nimport {\n  Button,\n  Spinner,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { spinnerButton } from \"./SpinnerSourceCode\"\n\nclass SpinnerButton extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Buttons</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple color=\"primary\">\n                    <Spinner color=\"white\" size=\"sm\" />\n                  </Button.Ripple>\n                </div>\n\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple color=\"primary\">\n                    <Spinner color=\"white\" size=\"sm\" />\n                    <span className=\"ml-50\">Loading...</span>\n                  </Button.Ripple>\n                </div>\n\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple color=\"primary\">\n                    <Spinner color=\"white\" size=\"sm\" type=\"grow\" />\n                  </Button.Ripple>\n                </div>\n\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple color=\"primary\">\n                    <Spinner color=\"white\" size=\"sm\" type=\"grow\" />\n                    <span className=\"ml-50\">Loading...</span>\n                  </Button.Ripple>\n                </div>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {spinnerButton}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default SpinnerButton\n","import React from \"react\"\nimport { Row, Col } from \"reactstrap\"\nimport BreadCrumbs from \"../../@vuexy/breadCrumbs/BreadCrumb\"\nimport SpinnerBorder from \"./SpinnerBorder\"\nimport SpinnerColors from \"./SpinnerColors\"\nimport SpinnerGrow from \"./SpinnerGrowing\"\nimport SpinnerGrowColors from \"./SpinnerGrowingColored\"\nimport SpinnerFlex from \"./SpinnerFlex\"\nimport SpinnerFloat from \"./SpinnerFloat\"\nimport SpinnerTextAlignment from \"./SpinnerTextAlignment\"\nimport SpinnerSizes from \"./SpinnerSizes\"\nimport SpinnerButtons from \"./SpinnerButtons\"\nimport Prism from \"prismjs\"\nimport \"prismjs/components/prism-jsx.min\"\nclass Spinners extends React.Component {\n  componentDidMount() {\n    Prism.highlightAll()\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <BreadCrumbs\n          breadCrumbTitle=\"Spinners\"\n          breadCrumbParent=\"Components\"\n          breadCrumbActive=\"Spinners\"\n        />\n        <Row>\n          <Col md=\"6\" sm=\"12\">\n            <SpinnerBorder />\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <SpinnerColors />\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <SpinnerGrow />\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <SpinnerGrowColors />\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <SpinnerFlex />\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <SpinnerFloat />\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <SpinnerTextAlignment />\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <SpinnerSizes />\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <SpinnerButtons />\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\nexport default Spinners\n","import React from 'react';\n/**\n * TabContext\n * {\n *  activeTabId: PropTypes.any\n * }\n */\n\nexport var TabContext = /*#__PURE__*/React.createContext({});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tabs: PropTypes.bool,\n  pills: PropTypes.bool,\n  vertical: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  horizontal: PropTypes.string,\n  justified: PropTypes.bool,\n  fill: PropTypes.bool,\n  navbar: PropTypes.bool,\n  card: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'ul',\n  vertical: false\n};\n\nvar getVerticalClass = function getVerticalClass(vertical) {\n  if (vertical === false) {\n    return false;\n  } else if (vertical === true || vertical === 'xs') {\n    return 'flex-column';\n  }\n\n  return \"flex-\" + vertical + \"-column\";\n};\n\nvar Nav = function Nav(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabs = props.tabs,\n      pills = props.pills,\n      vertical = props.vertical,\n      horizontal = props.horizontal,\n      justified = props.justified,\n      fill = props.fill,\n      navbar = props.navbar,\n      card = props.card,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tabs\", \"pills\", \"vertical\", \"horizontal\", \"justified\", \"fill\", \"navbar\", \"card\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, navbar ? 'navbar-nav' : 'nav', horizontal ? \"justify-content-\" + horizontal : false, getVerticalClass(vertical), {\n    'nav-tabs': tabs,\n    'card-header-tabs': card && tabs,\n    'nav-pills': pills,\n    'card-header-pills': card && pills,\n    'nav-justified': justified,\n    'nav-fill': fill\n  }), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nNav.propTypes = propTypes;\nNav.defaultProps = defaultProps;\nexport default Nav;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, omit, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  activeTab: PropTypes.any,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar TabContent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TabContent, _Component);\n\n  TabContent.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.activeTab !== nextProps.activeTab) {\n      return {\n        activeTab: nextProps.activeTab\n      };\n    }\n\n    return null;\n  };\n\n  function TabContent(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      activeTab: _this.props.activeTab\n    };\n    return _this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        Tag = _this$props.tag;\n    var attributes = omit(this.props, Object.keys(propTypes));\n    var classes = mapToCssModules(classNames('tab-content', className), cssModule);\n    return /*#__PURE__*/React.createElement(TabContext.Provider, {\n      value: {\n        activeTabId: this.state.activeTab\n      }\n    }, /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    })));\n  };\n\n  return TabContent;\n}(Component);\n\nexport default TabContent;\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  tabId: PropTypes.any\n};\nvar defaultProps = {\n  tag: 'div'\n};\nexport default function TabPane(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabId = props.tabId,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tabId\", \"tag\"]);\n\n  var getClasses = function getClasses(activeTabId) {\n    return mapToCssModules(classNames('tab-pane', className, {\n      active: tabId === activeTabId\n    }), cssModule);\n  };\n\n  return /*#__PURE__*/React.createElement(TabContext.Consumer, null, function (_ref) {\n    var activeTabId = _ref.activeTabId;\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: getClasses(activeTabId)\n    }));\n  });\n}\nTabPane.propTypes = propTypes;\nTabPane.defaultProps = defaultProps;","!function(i){var t=i.util.clone(i.languages.javascript),e=\"(?:\\\\{<S>*\\\\.{3}(?:[^{}]|<BRACES>)*\\\\})\";function n(t,n){return t=t.replace(/<S>/g,function(){return\"(?:\\\\s|//.*(?!.)|/\\\\*(?:[^*]|\\\\*(?!/))\\\\*/)\"}).replace(/<BRACES>/g,function(){return\"(?:\\\\{(?:\\\\{(?:\\\\{[^{}]*\\\\}|[^{}])*\\\\}|[^{}])*\\\\})\"}).replace(/<SPREAD>/g,function(){return e}),RegExp(t,n)}e=n(e).source,i.languages.jsx=i.languages.extend(\"markup\",t),i.languages.jsx.tag.pattern=n(\"</?(?:[\\\\w.:-]+(?:<S>+(?:[\\\\w.:$-]+(?:=(?:\\\"(?:\\\\\\\\[^]|[^\\\\\\\\\\\"])*\\\"|'(?:\\\\\\\\[^]|[^\\\\\\\\'])*'|[^\\\\s{'\\\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*/?)?>\"),i.languages.jsx.tag.inside.tag.pattern=/^<\\/?[^\\s>\\/]*/i,i.languages.jsx.tag.inside[\"attr-value\"].pattern=/=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/i,i.languages.jsx.tag.inside.tag.inside[\"class-name\"]=/^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/,i.languages.jsx.tag.inside.comment=t.comment,i.languages.insertBefore(\"inside\",\"attr-name\",{spread:{pattern:n(\"<SPREAD>\"),inside:i.languages.jsx}},i.languages.jsx.tag),i.languages.insertBefore(\"inside\",\"special-attr\",{script:{pattern:n(\"=<BRACES>\"),inside:{\"script-punctuation\":{pattern:/^=(?=\\{)/,alias:\"punctuation\"},rest:i.languages.jsx},alias:\"language-javascript\"}},i.languages.jsx.tag);var o=function(t){return t?\"string\"==typeof t?t:\"string\"==typeof t.content?t.content:t.content.map(o).join(\"\"):\"\"},r=function(t){for(var n=[],e=0;e<t.length;e++){var a=t[e],s=!1;if(\"string\"!=typeof a&&(\"tag\"===a.type&&a.content[0]&&\"tag\"===a.content[0].type?\"</\"===a.content[0].content[0].content?0<n.length&&n[n.length-1].tagName===o(a.content[0].content[1])&&n.pop():\"/>\"===a.content[a.content.length-1].content||n.push({tagName:o(a.content[0].content[1]),openedBraces:0}):0<n.length&&\"punctuation\"===a.type&&\"{\"===a.content?n[n.length-1].openedBraces++:0<n.length&&0<n[n.length-1].openedBraces&&\"punctuation\"===a.type&&\"}\"===a.content?n[n.length-1].openedBraces--:s=!0),(s||\"string\"==typeof a)&&0<n.length&&0===n[n.length-1].openedBraces){var g=o(a);e<t.length-1&&(\"string\"==typeof t[e+1]||\"plain-text\"===t[e+1].type)&&(g+=o(t[e+1]),t.splice(e+1,1)),0<e&&(\"string\"==typeof t[e-1]||\"plain-text\"===t[e-1].type)&&(g=o(t[e-1])+g,t.splice(e-1,1),e--),t[e]=new i.Token(\"plain-text\",g,null,g)}a.content&&\"string\"!=typeof a.content&&r(a.content)}};i.hooks.add(\"after-tokenize\",function(t){\"jsx\"!==t.language&&\"tsx\"!==t.language||r(t.tokens)})}(Prism);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  type: 'border',\n  children: 'Loading...'\n};\n\nvar Spinner = function Spinner(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      type = props.type,\n      size = props.size,\n      color = props.color,\n      children = props.children,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"type\", \"size\", \"color\", \"children\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, size ? \"spinner-\" + type + \"-\" + size : false, \"spinner-\" + type, color ? \"text-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    role: \"status\"\n  }, attributes, {\n    className: classes\n  }), children && /*#__PURE__*/React.createElement(\"span\", {\n    className: mapToCssModules('sr-only', cssModule)\n  }, children));\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\nexport default Spinner;"],"sourceRoot":""}